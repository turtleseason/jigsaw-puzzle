{"version":3,"sources":["util.js","puzzle/Edges.js","puzzle/Sides.js","puzzle/EdgePathDrawer.js","puzzle/EdgeStyleInfo.js","puzzle/Piece.js","puzzle/PieceModel.js","puzzle/GroupModel.js","puzzle/PuzzleCompleteImage.js","puzzle/Puzzle.js","title/DetailsModal.js","title/PuzzleTitle.js","controls/ImageInfo.js","controls/images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg","controls/images/david-clode-eOSqRq2Qm1c-unsplash.jpg","controls/images/casey-horner-80UR4DM2Rz0-unsplash.jpg","controls/images/van-gogh-roses-nga.jpg","controls/images/scott-webb-lYzgtps0UtQ-unsplash.jpg","controls/images/travel-sourced-FsmcD6uKcHk-unsplash.jpg","controls/providedImages.js","controls/ImagePicker.js","controls/PuzzleControls.js","index.js"],"names":["range","i","Array","from","keys","randomInt","max","Math","floor","random","BUMP","RECESS","FLAT","getRandomEdgeType","types","length","LEFT","TOP","RIGHT","BOTTOM","Sides","Symbol","iterator","EdgePathDrawer","pieceWidth","pieceHeight","borderSize","this","START","templates","makeTemplates","pW","pH","b","w","o","c1","c2","side","edgeStyleInfo","start","end","mid","type","key","EdgeStyleInfo","neckWidth","offset","control1","control2","other","edge","Error","getOppositeEdge","Piece","props","bgPos","model","backgroundPositionString","left","top","clipPathString","getClipPathString","edgeDrawer","getPathString","edges","className","blockPointerEvents","tempid","onPointerDown","e","style","backgroundPosition","clipPath","width","height","displayPos","zIndex","PureComponent","PieceModel","col","row","pos","neighbors","group","setPos","actualPos","val","copy","setDisplayPos","GroupModel","pieces","bounds","push","concat","PuzzleCompleteImage","state","startPos","requestAnimationFrame","setState","destPos","onTransitionEnd","Component","Puzzle","innerWidth","imgWidth","cols","innerHeight","imgHeight","rows","min","pointerDownHandlers","map","handlePointerDown","bind","handlePointerMove","handlePointerUp","handleResize","handleTransitionEnd","nextzIndex","createPieces","groups","createGroups","gameComplete","draggedPiece","setScaleFactor","window","addEventListener","removeEventListener","widthScale","document","documentElement","clientWidth","heightScale","clientHeight","scaleFactor","bg","querySelector","maxBoundX","maxBoundY","slice","entries","piece","xBound","yBound","console","log","clone","spacing","availableKeys","keysByGridPos","fill","keyIndex","splice","getRandomPosition","getBackgroundPosition","createEdge","opposite","topLeftKey","g","addPiece","alignWith","snapRange","abs","g1","g2","refPiece","k","p","alignPiece","mergeWith","isPrimary","pointerType","button","groupKey","offsetX","clientX","offsetY","clientY","hitElement","elementFromPoint","classList","contains","neighbor","isTouching","mergeGroups","Object","clampPiecesToBoardBounds","endAnimationComplete","board","boardStyle","transform","getTopLeftPos","getCenteredImagePos","children","renderPiece","onPointerMove","onPointerUp","DetailsModal","image","body","source","credit","nameIsTitle","name","author","ModalBody","Row","Col","md","src","url","alt","sourceName","class","href","sourceUrl","target","rel","description","Modal","toggle","toggleModal","isOpen","centered","ModalHeader","PuzzleTitle","modalOpen","puzzleImage","isPhoto","title","info","onClick","ImageInfo","defaultRows","defaultCols","shortName","ImageSource","providedImages","img1","img2","img3","img4","img5","img6","ImagePicker","fileInput","React","createRef","selectedPreset","presetImages","userImage","handleSelectChange","handleFileChange","handleRadioKeyDown","useUserImage","usePresetImage","usingUserImage","invalidUserImage","setSelectedImage","id","getElementById","focus","preventDefault","select","selectedIndex","file","current","files","fileUrl","URL","createObjectURL","testLoader","Image","onerror","revokeObjectURL","onload","dim","generateDefaultDimensions","naturalWidth","naturalHeight","minBound","minPuzzleDimension","aspect","x","clamp","round","options","img","value","presetBtnStyle","userBtnStyle","readOnly","checked","onKeyDown","htmlFor","onChange","renderSelectOptions","CustomInput","accept","innerRef","invalid","stopPropagation","UncontrolledTooltip","placement","PuzzleControls","handleDimensionsChange","handleDimensionsBlur","newPuzzle","selectedImage","valueAsNumber","validateDimension","result","parseInt","isNaN","imageInfo","setProperty","sizeTester","rowsVal","colsVal","onBlur","disabled","puzzleKey","ReactDOM","render","StrictMode","renderPuzzle","columns"],"mappings":"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","file":"static/js/main.d0e42c88.chunk.js","sourcesContent":["// Returns an array containing int values from 0 (inclusive) to i (exclusive).\r\nexport function range(i) {\r\n    return Array.from(Array(i).keys());\r\n}\r\n\r\n// Returns a random integer between 0 (inclusive) and max (exclusive).\r\nexport function randomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n// Restricts x to the range between min and max (inclusive).\r\nexport function clamp(x, min, max) {\r\n    if (min > max) {\r\n        throw Error(`clamp: min (${min}) is greater than max (${max}).`);\r\n    }\r\n    return Math.max(Math.min(x, max), min);\r\n}\r\n\r\n// Creates an object where the \"keys\" iterable provides the keys\r\n// and each value is the result of passing its corresponding key to keyToValueFunc.\r\nexport function objectMap(keys, keyToValueFunc) {\r\n    const obj = {};\r\n    for (const i of keys) {\r\n        obj[i] = keyToValueFunc(i);\r\n    }\r\n    return obj;\r\n}","import { randomInt } from '../util';\r\n\r\n\r\nexport const BUMP = 'b';\r\nexport const RECESS = 'r';\r\nexport const FLAT = 'f';\r\n\r\n// Excludes FLAT since that edge type isn't assigned randomly.\r\nexport function getRandomEdgeType() {\r\n    const types = [BUMP, RECESS];\r\n    return types[randomInt(types.length)];\r\n}\r\n\r\nexport function getOppositeEdge(edge) {\r\n    switch(edge) {\r\n        case BUMP:\r\n            return RECESS;\r\n        case RECESS:\r\n            return BUMP;\r\n        default:\r\n            throw Error(`getOppositeEdge: ${edge} does not have an opposite edge type`);\r\n    }\r\n}","export const LEFT = 'Left';\r\nexport const TOP = 'Top';\r\nexport const RIGHT = 'Right';\r\nexport const BOTTOM = 'Bottom';\r\n\r\n// Use this to iterate through all four sides in a consistent order.\r\nexport const Sides = {\r\n    *[Symbol.iterator]() {\r\n        yield LEFT;\r\n        yield TOP;\r\n        yield RIGHT;\r\n        yield BOTTOM;\r\n    }\r\n}","import { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM } from './Sides';\r\n\r\n\r\nexport default class EdgePathDrawer {\r\n    constructor(pieceWidth, pieceHeight, borderSize) {\r\n        this.START = 'START';\r\n        this.templates = this.makeTemplates(pieceWidth, pieceHeight, borderSize)\r\n    }\r\n\r\n    makeTemplates(pW, pH, b) {\r\n        const templates = {};\r\n\r\n        templates[this.START] = `M ${b} ${pH - b} `;\r\n\r\n        templates[BUMP + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`    \r\n            + `C ${b - o} ${pH / 2 + c1} ${0} ${pH / 2 + c2} ${0} ${pH / 2} `\r\n            + `C ${0} ${pH / 2 - c2} ${b - o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[RECESS + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`\r\n            + `C ${b + o} ${pH / 2 + c1} ${b * 2} ${pH / 2 + c2} ${b * 2} ${pH / 2} `\r\n            + `C ${b * 2} ${pH / 2 - c2} ${b + o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[LEFT] = `V ${b} `;\r\n\r\n        templates[BUMP + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b - o} ${pW / 2 - c2} ${0} ${pW / 2} ${0} `\r\n            + `C ${pW / 2 + c2} ${0} ${pW / 2 + c1} ${b - o} ${(pW + w) / 2} ${b} `;\r\n        templates[RECESS + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b + o}  ${pW / 2 - c2} ${b * 2} ${pW / 2} ${b * 2} `\r\n            + `C ${pW / 2 + c2} ${b * 2} ${pW / 2 + c1} ${b + o} ${(pW + w) / 2} ${b} `;\r\n        templates[TOP] = `H ${pW - b} `;\r\n\r\n        templates[BUMP + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b + o} ${pH / 2 - c1} ${pW} ${pH / 2 - c2} ${pW} ${pH / 2} `\r\n            + `C ${pW} ${pH / 2 + c2} ${pW - b + o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RECESS + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b - o} ${pH / 2 - c1} ${pW - b * 2} ${pH / 2 - c2} ${pW - b * 2} ${pH / 2} `\r\n            + `C ${pW - b * 2} ${pH / 2 + c2} ${pW - b - o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RIGHT] = `V ${pH - b} `;\r\n\r\n        templates[BUMP + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b + o} ${pW / 2 + c2} ${pH} ${pW / 2} ${pH} `\r\n            + `C ${pW / 2 - c2} ${pH} ${pW / 2 - c1} ${pH - b + o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[RECESS + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b - o}  ${pW / 2 + c2} ${pH - b * 2} ${pW / 2} ${pH - b * 2} `\r\n            + `C ${pW / 2 - c2} ${pH - b * 2} ${pW / 2 - c1} ${pH - b - o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[BOTTOM] = `Z`;\r\n\r\n        return templates;\r\n    }\r\n\r\n    getPathString(side, edgeStyleInfo) {\r\n        const start = (side === LEFT) ? this.templates[this.START] : '';\r\n        const end = this.templates[side];\r\n\r\n        let mid = '';\r\n        if (edgeStyleInfo.type !== FLAT) {\r\n            const key = edgeStyleInfo.type + side;\r\n            mid = this.templates[key](edgeStyleInfo.w, edgeStyleInfo.o, edgeStyleInfo.c1, edgeStyleInfo.c2);\r\n        }\r\n\r\n        return start + mid + end;\r\n    }\r\n}","import { getOppositeEdge } from './Edges';\r\n\r\n\r\n// Contains the properties needed to draw a specific puzzle piece edge:\r\n// its overall type (bump, recess, flat) and any constants needed to define its shape.\r\nexport default class EdgeStyleInfo {\r\n    constructor(type, neckWidth, offset, control1, control2) {\r\n        this.type = type;\r\n        this.w = neckWidth;     // The width of the area where the bump meets the edge of the piece.\r\n        this.o = offset;        // Controls the distance between the widest part of the bump and the edge of the piece.\r\n        this.c1 = control1;     // Controls the width of the widest part of the bump.\r\n        this.c2 = control2;     // Controls the width near the tallest part of the bump (affects the smoothness/pointiness of the curve).\r\n    }\r\n\r\n    // Returns an EdgeStyleInfo object for an edge that fits with this one:\r\n    // if this is a bump edge, opposite() returns a matching recess edge, and vice-versa.\r\n    // Will fail if called on a flat edge.\r\n    opposite() {\r\n        const other = {...this};\r\n        other.type = getOppositeEdge(this.type);\r\n        return other;\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport { Sides } from './Sides';\r\n\r\n\r\nexport default class Piece extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const bgPos = this.props.model.bgPos;\r\n        // These will never change over the lifetime of the object, so just calculate them once\r\n        this.backgroundPositionString = `${bgPos.left}px ${bgPos.top}px`;\r\n        this.clipPathString = this.getClipPathString(this.props.edgeDrawer);\r\n    }\r\n    \r\n    getClipPathString(edgeDrawer) {\r\n        let clipPathString = 'path(\\'';\r\n        for (const side of Sides) {\r\n            clipPathString += edgeDrawer.getPathString(side, this.props.model.edges[side]);\r\n        }\r\n        return clipPathString + '\\')';\r\n    }\r\n\r\n    render() {\r\n        const model = this.props.model;\r\n        const className = 'puzzle-piece' + (this.props.blockPointerEvents ? ' block-pointer-events' : '');\r\n        return (\r\n            <div\r\n                className={className}\r\n                tempid={model.key}\r\n                onPointerDown={(e) => this.props.onPointerDown(e)}\r\n                style={{\r\n                    backgroundPosition: this.backgroundPositionString,\r\n                    clipPath: this.clipPathString,\r\n                    width: this.props.width,\r\n                    height: this.props.height,\r\n                    left: model.displayPos.left,\r\n                    top: model.displayPos.top,\r\n                    zIndex: (model.zIndex > 0 ? model.zIndex : 'auto')\r\n                }}>\r\n            </div>\r\n        );\r\n    }\r\n}","// Never mutate pos or displayPos's left/top properties; always set them using setPos() or setDisplayPos()\r\n// to ensure that the Piece re-renders properly and that pos and displayPos stay in sync. \r\n\r\nexport default class PieceModel {\r\n\r\n    // All parameters should be integers except:\r\n    // pos, bgPos: Objects with the properties 'left' and 'top', each set to a number.\r\n    // edges:      An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to an EdgeStyleInfo object.\r\n    // neighbors:  An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to the key of another PieceModel or undefined.  \r\n    // \r\n    constructor(key, col, row, pos, bgPos, zIndex, edges, neighbors) {\r\n        // By default, a new piece is inserted into the group with the same id as its key.\r\n        this.group = key;\r\n        \r\n        this.key = key;\r\n        this.col = col;\r\n        this.row = row;\r\n        this.bgPos = bgPos;\r\n        this.zIndex = zIndex;\r\n        this.edges = edges;\r\n        this.neighbors = neighbors;\r\n        \r\n        this.setPos(pos.left, pos.top);\r\n    }\r\n    \r\n    get pos() {\r\n        return this.actualPos;\r\n    }\r\n    \r\n    set pos(val) {\r\n        throw Error('PieceModel: Don\\'t set \"pos\" directly - use setPos() instead.');\r\n    }\r\n    \r\n    // 'pos' is the piece's original position before clamping; it doesn't change when the board is resized\r\n    // so that if the board is expanded again, the piece can return to its original position.\r\n    setPos(left, top) {\r\n        this.actualPos = {left: left, top: top};\r\n        this.displayPos = this.actualPos;\r\n    }\r\n\r\n    // 'displayPos' is the piece's clamped position; if the board is resized so that the piece would end up outside the board,\r\n    // its display position is set to keep it in bounds.\r\n    // When the piece is interacted with (picked up or merged with another piece/group), displayPos becomes the piece's actual position.\r\n    setDisplayPos(left, top) {\r\n        this.displayPos = {left: left, top: top};\r\n    }\r\n\r\n    clone() {\r\n        const copy = new PieceModel(this.key, this.col, this.row, this.pos, this.bgPos, this.zIndex, this.edges, this.neighbors);\r\n        copy.group = this.group;\r\n        copy.setDisplayPos(this.displayPos.left, this.displayPos.top);\r\n        return copy;\r\n    }\r\n}","import { LEFT, TOP, RIGHT, BOTTOM } from './Sides.js';\r\n\r\n\r\nexport default class GroupModel {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.pieces = [];\r\n        this.bounds = {[LEFT]: -1, [TOP]: -1, [RIGHT]: -1, [BOTTOM]: -1};\r\n    }\r\n\r\n    addPiece(key, row, col) {\r\n        this.pieces.push(key);\r\n        if (this.bounds[LEFT] < 0 || col < this.bounds[LEFT]) {\r\n            this.bounds[LEFT] = col;\r\n        }\r\n        if (this.bounds[RIGHT] < 0 || col > this.bounds[RIGHT]) {\r\n            this.bounds[RIGHT] = col;\r\n        }\r\n        if (this.bounds[TOP] < 0 || row < this.bounds[TOP]) {\r\n            this.bounds[TOP] = row;\r\n        }\r\n        if (this.bounds[BOTTOM] < 0 || row > this.bounds[BOTTOM]) {\r\n            this.bounds[BOTTOM] = row;\r\n        }\r\n    }\r\n\r\n    mergeWith(other) {\r\n        this.pieces = this.pieces.concat(other.pieces);\r\n        if (other.bounds[LEFT] < this.bounds[LEFT]) {\r\n            this.bounds[LEFT] = other.bounds[LEFT];\r\n        }\r\n        if (other.bounds[RIGHT] > this.bounds[RIGHT]) {\r\n            this.bounds[RIGHT] = other.bounds[RIGHT];\r\n        }\r\n        if (other.bounds[TOP] < this.bounds[TOP]) {\r\n            this.bounds[TOP] = other.bounds[TOP];\r\n        }\r\n        if (other.bounds[BOTTOM] > this.bounds[BOTTOM]) {\r\n            this.bounds[BOTTOM] = other.bounds[BOTTOM];\r\n        }\r\n    }\r\n}","import { Component } from 'react';\r\n\r\n\r\nexport default class PuzzleCompleteImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...this.props.startPos};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Change on the second frame to ensure the image is drawn at the original position at least once.\r\n        requestAnimationFrame(() => requestAnimationFrame(() => this.setState({...this.props.destPos})));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='puzzle-complete-img' onTransitionEnd={this.props.onTransitionEnd} \r\n                style={{width: this.props.width, height: this.props.height, left: this.state.left, top: this.state.top}}>\r\n            </div>\r\n        ); \r\n    }\r\n}","import { Component } from 'react';\r\nimport EdgePathDrawer from './EdgePathDrawer';\r\nimport EdgeStyleInfo from './EdgeStyleInfo';\r\nimport Piece from './Piece';\r\nimport PieceModel from './PieceModel';\r\nimport GroupModel from './GroupModel';\r\nimport PuzzleCompleteImage from './PuzzleCompleteImage';\r\n\r\nimport { getRandomEdgeType } from './Edges';\r\nimport { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM, Sides } from './Sides';\r\nimport { range, randomInt } from '../util';\r\n\r\nimport './Puzzle.css';\r\n\r\n\r\nconst MAX_WIDTH_SCALE = .7;   // The maximum percentage of the window width that the puzzle image should take up. \r\nconst MAX_HEIGHT_SCALE = .7;  // The maximum percentage of the window height that the puzzle image should take up. \r\n\r\nexport default class Puzzle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.innerWidth =  this.props.imgWidth / this.props.cols;\r\n        this.innerHeight = this.props.imgHeight / this.props.rows;\r\n        this.borderSize = Math.min(this.innerHeight, this.innerWidth) / 4;\r\n        this.pieceWidth = 2 * this.borderSize + this.innerWidth;\r\n        this.pieceHeight = 2 * this.borderSize + this.innerHeight;\r\n\r\n        this.pointerDownHandlers = range(this.props.rows * this.props.cols).map(i => this.handlePointerDown.bind(this, i));\r\n        this.handlePointerMove = this.handlePointerMove.bind(this);\r\n        this.handlePointerUp = this.handlePointerUp.bind(this);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\r\n\r\n        this.edgeDrawer = new EdgePathDrawer(this.pieceWidth, this.pieceHeight, this.borderSize);\r\n        this.nextzIndex = 1;\r\n\r\n        const pieces = this.createPieces();\r\n        this.groups = this.createGroups(pieces);\r\n\r\n        this.state = {\r\n            pieces: pieces,\r\n            gameComplete: false,\r\n            draggedPiece: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setScaleFactor();\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    setScaleFactor() {\r\n        const widthScale = MAX_WIDTH_SCALE * document.documentElement.clientWidth / this.props.imgWidth;\r\n        const heightScale = MAX_HEIGHT_SCALE * document.documentElement.clientHeight / this.props.imgHeight;\r\n        const scaleFactor = Math.min(widthScale, heightScale);\r\n        this.setState({scaleFactor: scaleFactor});\r\n        return scaleFactor;\r\n    }\r\n\r\n    clampPiecesToBoardBounds(scaleFactor) {\r\n        const bg = document.querySelector('.puzzle-background');\r\n        const maxBoundX = bg.clientWidth / scaleFactor - this.pieceWidth;\r\n        const maxBoundY = bg.clientHeight / scaleFactor - this.pieceHeight;\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        for (const [i, piece] of pieces.entries()) {\r\n            const group = this.groups[piece.group];\r\n            const xBound = maxBoundX - (this.innerWidth * (group.bounds[RIGHT] - piece.col));\r\n            const yBound = maxBoundY - (this.innerHeight * (group.bounds[BOTTOM] - piece.row));\r\n\r\n            console.log(group);\r\n\r\n            pieces[i] = piece.clone();\r\n            pieces[i].setDisplayPos(\r\n                piece.pos.left > xBound ? xBound : piece.pos.left,\r\n                piece.pos.top > yBound ? yBound : piece.pos.top);\r\n        }\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    getGridPosition(col, row, spacing) {\r\n        const left = (this.innerWidth + spacing) * col - this.borderSize;\r\n        const top = (this.innerHeight + spacing) * row - this.borderSize;\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    getRandomPosition() {\r\n        const left = Math.random() * (.2 * this.props.imgWidth);\r\n        const top = Math.random() * (this.props.imgHeight - this.pieceHeight);\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    getBackgroundPosition(col, row) {\r\n        const left = - (this.innerWidth * col) + this.borderSize;\r\n        const top = -(this.innerHeight * row) + this.borderSize;\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    createEdge(type) {\r\n        const neckWidth = this.borderSize * (.8 + Math.random() * .45);\r\n        const offset = this.borderSize * (.4 + Math.random() * .1);\r\n        const c1 = (neckWidth > this.borderSize) ? neckWidth * (.75 + Math.random() * .25)\r\n                    : this.borderSize * (.85 + Math.random() * .35);\r\n        const c2 = neckWidth * (.5 + Math.random() * .15);\r\n        return new EdgeStyleInfo(type, neckWidth, offset, c1, c2);\r\n    }\r\n\r\n    createPieces() {\r\n        const pieces = [];\r\n        const availableKeys = range(this.props.cols * this.props.rows);\r\n        // Use map() instead of fill() to ensure that each inner array is a unique object.\r\n        const keysByGridPos = Array(this.props.cols).fill(null).map(() => Array(this.props.rows));\r\n        \r\n        for (let col = 0; col < this.props.cols; col++) {\r\n            for (let row = 0; row < this.props.rows; row++) {\r\n                const keyIndex = randomInt(availableKeys.length);\r\n                const key = availableKeys.splice(keyIndex, 1)[0];\r\n                keysByGridPos[col][row] = key;\r\n                \r\n                // const pos = this.getGridPosition(col, row, 0);\r\n                const pos = this.getRandomPosition();\r\n                const bgPos = this.getBackgroundPosition(col, row);\r\n\r\n                const neighbors = {};\r\n                if (col > 0) {\r\n                    neighbors[LEFT] = keysByGridPos[col - 1][row];\r\n                    pieces[neighbors[LEFT]].neighbors[RIGHT] = key;\r\n                }\r\n                if (row > 0) {\r\n                    neighbors[TOP] = keysByGridPos[col][row - 1];\r\n                    pieces[neighbors[TOP]].neighbors[BOTTOM] = key;\r\n                }\r\n\r\n                const edges = {};\r\n                edges[LEFT] = (col === 0) ? this.createEdge(FLAT) : pieces[neighbors[LEFT]].edges[RIGHT].opposite();\r\n                edges[TOP] = (row === 0) ? this.createEdge(FLAT) : pieces[neighbors[TOP]].edges[BOTTOM].opposite();\r\n                edges[RIGHT] = (col === this.props.cols - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType());\r\n                edges[BOTTOM] = (row === this.props.rows - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType());\r\n                \r\n                pieces[key] = new PieceModel(key, col, row, pos, bgPos, 0, edges, neighbors);\r\n            }\r\n        }\r\n        this.topLeftKey = keysByGridPos[0][0];\r\n        return pieces;\r\n    }\r\n\r\n    createGroups(pieces) {\r\n        const groups = {};\r\n        for (const piece of pieces) {\r\n            const g = new GroupModel(piece.key);\r\n            g.addPiece(piece.key, piece.row, piece.col);\r\n            groups[piece.key] = g;\r\n        }\r\n        return groups;\r\n    }\r\n\r\n    alignPiece(piece, alignWith) {\r\n        piece.setPos(alignWith.displayPos.left + this.innerWidth * (piece.col - alignWith.col),\r\n                     alignWith.displayPos.top + this.innerHeight * (piece.row - alignWith.row));\r\n    }\r\n    \r\n    isTouching(piece, side, other) {\r\n        const snapRange = 7 / this.state.scaleFactor;\r\n        if (side === RIGHT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((other.displayPos.left - piece.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === LEFT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((piece.displayPos.left - other.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === TOP) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((piece.displayPos.top - other.displayPos.top) - this.innerHeight) <= snapRange;\r\n        } else if (side === BOTTOM) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((other.displayPos.top - piece.displayPos.top) - this.innerHeight) <= snapRange;\r\n        }\r\n    }\r\n\r\n    mergeGroups(pieces, g1, g2) {\r\n        // Update all pieces in the merged group with their new position and z-index\r\n        const refPiece = pieces[this.groups[g1].pieces[0]];\r\n        for (const k of this.groups[g2].pieces) {\r\n            const p = pieces[k].clone();\r\n            p.group = g1;\r\n            p.zIndex = refPiece.zIndex;\r\n            this.alignPiece(p, refPiece);\r\n            pieces[k] = p;\r\n        }\r\n\r\n        // Merge GroupModels\r\n        this.groups[g1].mergeWith(this.groups[g2]);\r\n\r\n        delete this.groups[g2];\r\n    }\r\n\r\n    handlePointerDown(key, e) {\r\n        if (this.state.draggedPiece !== null || !e.isPrimary || (e.pointerType === 'mouse' && e.button !== 0)) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups[groupKey].pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            pieces[k].zIndex = this.nextzIndex;\r\n            pieces[k].setPos(pieces[k].displayPos.left, pieces[k].displayPos.top);\r\n        }\r\n        this.nextzIndex++;\r\n\r\n        this.setState({\r\n            pieces: pieces,\r\n            draggedPiece: key,\r\n            offsetX: e.clientX - (pieces[key].pos.left * this.state.scaleFactor),\r\n            offsetY: e.clientY - (pieces[key].pos.top * this.state.scaleFactor)\r\n        });\r\n\r\n    }\r\n\r\n    handlePointerMove(e) {\r\n        if (this.state.draggedPiece === null || !e.isPrimary) {\r\n            return;\r\n        }\r\n        \r\n        // Ignore events from touches that started within puzzle area but moved out of bounds\r\n        const hitElement = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (!hitElement || !hitElement.classList.contains('puzzle-area')) {\r\n            return;\r\n        }\r\n\r\n        const key = this.state.draggedPiece;\r\n        const pieces = this.state.pieces.slice();\r\n        \r\n        const p = pieces[key].clone();\r\n        pieces[key] = p;\r\n        \r\n        const left = (e.clientX - this.state.offsetX) / this.state.scaleFactor;\r\n        const top = (e.clientY - this.state.offsetY) / this.state.scaleFactor;\r\n        p.setPos(left, top);\r\n\r\n        const group = this.groups[p.group];\r\n        for (const k of group.pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            this.alignPiece(pieces[k], p);\r\n        }\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    handlePointerUp() {\r\n        if (this.state.draggedPiece === null) {\r\n            return;\r\n        }\r\n\r\n        const key = this.state.draggedPiece;\r\n        const pieces = this.state.pieces.slice();\r\n\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups[groupKey].pieces) {\r\n            const p = pieces[k];\r\n            for (const side of Sides) {\r\n                const neighbor = pieces[p.neighbors[side]];\r\n                if (neighbor && neighbor.group !== p.group && this.isTouching(p, side, neighbor)) {\r\n                    this.mergeGroups(pieces, p.group, neighbor.group);\r\n                }\r\n            }\r\n        }\r\n\r\n        const gameComplete = Object.keys(this.groups).length === 1;\r\n        this.setState({pieces: pieces, draggedPiece: null, gameComplete: gameComplete});\r\n    }\r\n\r\n    handleResize() {\r\n        const scaleFactor = this.setScaleFactor();\r\n        this.clampPiecesToBoardBounds(scaleFactor);\r\n    }\r\n\r\n    handleTransitionEnd() {\r\n        this.setState({endAnimationComplete: true});\r\n    }\r\n\r\n    getTopLeftPos() {\r\n        const pos = this.state.pieces[this.topLeftKey].displayPos;\r\n        return {left: pos.left + this.borderSize, top: pos.top + this.borderSize};\r\n    }\r\n\r\n    getCenteredImagePos() {\r\n        const bg = document.querySelector('.puzzle-background');\r\n        const destLeft = (bg.clientWidth / this.state.scaleFactor - this.props.imgWidth) / 2;\r\n        const destTop = (bg.clientHeight / this.state.scaleFactor - this.props.imgHeight) / 2;\r\n        return {left: destLeft, top: destTop};\r\n    }\r\n\r\n    renderPiece(model) {\r\n        return (\r\n            <Piece key={model.key}\r\n                model={model}\r\n                width={this.pieceWidth}\r\n                height={this.pieceHeight}\r\n                // isDragged={model.group === this.state.pieces[this.state.draggedPiece].group}\r\n                blockPointerEvents={this.state.draggedPiece !== null}\r\n                edgeDrawer={this.edgeDrawer}\r\n                onPointerDown={this.pointerDownHandlers[model.key]}/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const boardStyle = {transform: `scale(${this.state.scaleFactor})`, width: (100 / this.state.scaleFactor) + '%', height: (100 / this.state.scaleFactor) + '%'};\r\n\r\n        let board;\r\n        if (this.state.gameComplete && this.state.endAnimationComplete) {\r\n            board = (<div className='puzzle-area puzzle-complete' style={boardStyle}></div>);\r\n        } else if (this.state.gameComplete) {\r\n            board = (\r\n                <div className='puzzle-area' style={boardStyle}>\r\n                    <PuzzleCompleteImage startPos={this.getTopLeftPos()} destPos={this.getCenteredImagePos()}\r\n                    width={this.props.imgWidth} height={this.props.imgHeight} onTransitionEnd={this.handleTransitionEnd}/>\r\n                </div>);\r\n        } else {\r\n            const children = this.state.pieces.map(model => this.renderPiece(model));\r\n            board = (\r\n                <div \r\n                    className={'puzzle-area' + (this.state.draggedPiece !== null ? ' no-scroll' : '')}\r\n                    onPointerMove={this.handlePointerMove}\r\n                    onPointerUp={this.handlePointerUp}\r\n                    style={boardStyle}>\r\n                    { children }\r\n                </div>);\r\n        }\r\n        \r\n        return (\r\n            <div className='puzzle-container mt-2'>\r\n                <div className='puzzle-background'></div>\r\n                {board}\r\n                {/* Use a separate div for padding because adding padding directly to the puzzle container\r\n                    can cause the game-completed image to jump at the end of its motion */}\r\n                <div className='pb-3'></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n\r\nexport default class DetailsModal extends Component {\r\n    render() {\r\n        const image = this.props.image;\r\n        \r\n        let body = '';\r\n        if (image && image.source) {\r\n                const credit = (image.source.nameIsTitle ? image.name : 'Photo') + ' by ' + image.author;\r\n                body = ( \r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col md='8'><img src={image.url} alt='Image preview' width='100%'/></Col>\r\n                            <Col md='4' className='mt-3 mt-md-0 pl-md-0'>\r\n                                <p>{credit}</p>\r\n                                <p>Source: {image.source.sourceName}</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='mt-md-3'>\r\n                            <Col>\r\n                                <p class=\"text-break\">\r\n                                    See the original at: <a href={image.source.sourceUrl} target='_blank' rel='external noopener'>{image.source.sourceUrl}</a>\r\n                                </p>\r\n                                {image.source.description ? <p>{image.source.description}</p> : null}\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                ); \r\n            }\r\n\r\n        return(\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}> \r\n                <ModalHeader toggle={this.props.toggleModal}>Image details</ModalHeader>\r\n                {body}\r\n            </Modal>\r\n        );  \r\n    }\r\n}","import { Component } from 'react';\r\nimport DetailsModal from './DetailsModal';\r\n\r\n\r\nexport default class PuzzleTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {modalOpen: false};\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return {modalOpen: !state.modalOpen} });\r\n    }\r\n\r\n    render() {\r\n        const puzzleImage = this.props.puzzleImage;\r\n        if (!puzzleImage) {\r\n            return null;\r\n        }\r\n\r\n        const isPhoto = puzzleImage.source && puzzleImage.source.isPhoto;\r\n        const nameIsTitle = puzzleImage.source && puzzleImage.source.nameIsTitle;\r\n\r\n        const title = nameIsTitle ? <em>{puzzleImage.name}</em> : '';\r\n        let author = '';\r\n        if (puzzleImage.author) {\r\n            if (nameIsTitle) {\r\n                author += `, ${isPhoto ? ' photo' : ''} by `;\r\n            } else if (isPhoto) {\r\n                author += 'Photo by ';\r\n            } else {\r\n                author += 'By '\r\n            }\r\n            author += puzzleImage.author;\r\n        }\r\n        const info = puzzleImage.source ? <button type='button' className='btn btn-link btn-sm text-muted px-1' onClick={this.toggleModal}>more info</button> : '';\r\n\r\n        return (\r\n            <div className='container-fluid container-md mt-3'>\r\n                <div className='row justify-content-center flex-sm-nowrap mx-n2'>\r\n                    <div className='col-2 d-none d-md-block px-2'> </div> \r\n                    <div className='col-auto flex-shrink-1 px-2'>\r\n                        <p className='h5'>{title}{author}</p>\r\n                    </div>\r\n                    <div className='col-auto col-sm-2 px-2'>{info}</div>\r\n                </div>\r\n                <DetailsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} image={puzzleImage} />\r\n            </div>);\r\n    }\r\n}","export class ImageInfo {\r\n    constructor(name, url, defaultRows, defaultCols, author, source, shortName) {\r\n        this.name = name;\r\n        this.url = url;\r\n        this.defaultRows = defaultRows;\r\n        this.defaultCols = defaultCols;\r\n        this.author = author;\r\n        this.source = source;\r\n        this.shortName = shortName ?? name;\r\n    }\r\n}\r\n\r\nexport class ImageSource {\r\n    constructor(sourceName, nameIsTitle=false, isPhoto=false, sourceUrl='', description='') {\r\n        this.sourceName = sourceName;\r\n        this.nameIsTitle = nameIsTitle;\r\n        this.sourceUrl = sourceUrl;\r\n        this.isPhoto = isPhoto;\r\n        this.description = description;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.a8f36cd5.jpg\";","export default __webpack_public_path__ + \"static/media/david-clode-eOSqRq2Qm1c-unsplash.42540cb6.jpg\";","export default __webpack_public_path__ + \"static/media/casey-horner-80UR4DM2Rz0-unsplash.001ae9f7.jpg\";","export default __webpack_public_path__ + \"static/media/van-gogh-roses-nga.8fa9d120.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-lYzgtps0UtQ-unsplash.509dd0a5.jpg\";","export default __webpack_public_path__ + \"static/media/travel-sourced-FsmcD6uKcHk-unsplash.97041d06.jpg\";","import { ImageInfo, ImageSource } from './ImageInfo';\r\n\r\nimport img1 from './images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg';\r\nimport img2 from './images/david-clode-eOSqRq2Qm1c-unsplash.jpg';\r\nimport img3 from './images/casey-horner-80UR4DM2Rz0-unsplash.jpg';\r\nimport img4 from './images/van-gogh-roses-nga.jpg';\r\nimport img5 from './images/scott-webb-lYzgtps0UtQ-unsplash.jpg';\r\nimport img6 from './images/travel-sourced-FsmcD6uKcHk-unsplash.jpg';\r\n\r\n\r\nconst providedImages = [\r\n    new ImageInfo('Red Parrot on the Branch of a Tree', img1, 6, 8, 'Itō Jakuchū', \r\n        new ImageSource('Metropolitan Museum of Art', true, false, 'https://www.metmuseum.org/art/collection/search/57123'), 'Red Parrot'),\r\n    new ImageInfo('Coral', img2, 7, 10, 'David Clode',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/eOSqRq2Qm1c')),\r\n    new ImageInfo('Starry Sky', img3, 7, 10, 'Casey Horner',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/80UR4DM2Rz0')),\r\n    new ImageInfo('Roses', img4, 8, 10, 'Vincent van Gogh',\r\n        new ImageSource('National Gallery of Art', true, false, 'https://www.nga.gov/collection/art-object-page.72328.html')),\r\n    new ImageInfo('Succulents', img5, 8, 5, 'Scott Webb',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/lYzgtps0UtQ')),\r\n    new ImageInfo('Jellyfish', img6, 7, 10, 'Travel Sourced',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/FsmcD6uKcHk'))\r\n];\r\n\r\nexport default providedImages;","import React, { Component } from 'react';\r\nimport { CustomInput, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport { ImageInfo } from './ImageInfo';\r\nimport { clamp } from '../util';\r\nimport presetImages from './providedImages';\r\n\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport './ImagePicker.css';\r\n\r\n\r\nexport default class ImagePicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileInput = React.createRef();\r\n\r\n        this.selectedPreset = presetImages[0];\r\n        this.userImage = null;\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n        this.handleRadioKeyDown = this.handleRadioKeyDown.bind(this);\r\n        this.useUserImage = this.useUserImage.bind(this);\r\n        this.usePresetImage = this.usePresetImage.bind(this);\r\n\r\n        this.state = {\r\n            usingUserImage: false,\r\n            invalidUserImage: false\r\n        };\r\n    }\r\n    \r\n    usePresetImage() {\r\n        this.setState({usingUserImage: false});\r\n        this.props.setSelectedImage(this.selectedPreset);\r\n    }\r\n\r\n    useUserImage() {\r\n        this.setState({usingUserImage: true});\r\n        this.props.setSelectedImage(this.userImage);\r\n    }\r\n    \r\n    // Maintain arrow key navigation between the radio buttons even though they aren't\r\n    // actually part of the same radio group (so that they can be separate tab stops).\r\n    handleRadioKeyDown(e) {\r\n        switch(e.key) {\r\n            case 'ArrowLeft':\r\n            case 'ArrowUp':\r\n            case 'Left':\r\n            case 'Up':\r\n                if (e.target.id === 'radioBtn2') {\r\n                    document.getElementById('radioBtn1').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n            case 'ArrowRight':\r\n            case 'ArrowDown':\r\n            case 'Down':\r\n            case 'Right':\r\n                if (e.target.id === 'radioBtn1') {\r\n                    document.getElementById('radioBtn2').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n        }\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        this.usePresetImage();\r\n\r\n        const select = e.target;\r\n        if (select.selectedIndex !== -1) {\r\n            this.selectedPreset = presetImages[select.selectedIndex];\r\n            this.props.setSelectedImage(this.selectedPreset);            \r\n        }\r\n    }\r\n\r\n    handleFileChange() {\r\n        this.useUserImage();\r\n        \r\n        const file = this.fileInput.current.files[0];\r\n        const fileUrl = URL.createObjectURL(file);\r\n        \r\n        const testLoader = new Image();\r\n        testLoader.onerror = () => {\r\n            URL.revokeObjectURL(fileUrl);\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            this.userImage = null;            \r\n            this.setState({invalidUserImage: true});\r\n            this.props.setSelectedImage(null);\r\n        };\r\n        testLoader.onload = () => {\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            const dim = this.generateDefaultDimensions(testLoader.naturalWidth, testLoader.naturalHeight);\r\n            this.userImage = new ImageInfo(file.name, fileUrl, dim.rows, dim.cols);\r\n            this.setState({invalidUserImage: false});\r\n            this.props.setSelectedImage(this.userImage);\r\n        };\r\n        testLoader.src = fileUrl;\r\n    }\r\n\r\n    // Tries to choose a good default based on the image aspect ratio;\r\n    // could go further and tailor the target rows+columns to the viewport size\r\n    generateDefaultDimensions(width, height) {\r\n        const target = 15;\r\n        const minBound = this.props.minPuzzleDimension;\r\n        const aspect = width / height;\r\n\r\n        // cols = (width / height) * rows\r\n        // cols + rows = target\r\n        const rows = clamp(Math.round(target / (aspect + 1)), minBound, target - minBound);\r\n        const cols = target - rows;\r\n\r\n        return {rows: rows, cols: cols};\r\n    }\r\n\r\n    renderSelectOptions() {\r\n        const options = [];\r\n        for (let i = 0; i < presetImages.length; i++) {\r\n            const img = presetImages[i];\r\n            options.push(<option key={i} value={img.url}>{img.shortName}</option>);\r\n        }\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const presetBtnStyle = this.state.usingUserImage ? 'btn-outline-dark' : 'btn-dark';\r\n        const userBtnStyle = this.state.usingUserImage ? 'btn-dark' : 'btn-outline-dark';\r\n\r\n        return (\r\n            <div className='input-group'>\r\n                <div className='input-group-prepend col-12 col-lg-6 pr-lg-0'>\r\n                    <div className={`btn ${presetBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100`} onClick={this.usePresetImage}>\r\n                        <input readOnly className='col-auto' id='radioBtn1' type='radio'\r\n                            checked={!this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown}/>\r\n                        <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn1'>Choose an image:</label>\r\n                        <div className='w-100 d-sm-none'></div>\r\n                        <label className='sr-only' htmlFor='puzzle-image-select'>Select image</label>\r\n                        <select className='custom-select col mr-lg-4' id='puzzle-image-select' onChange={this.handleSelectChange}>\r\n                            {this.renderSelectOptions()}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='input-group-append col-12 col-lg-6 pl-lg-0'>\r\n                    <div className={`btn ${userBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100`} onClick={this.useUserImage}>\r\n                        <input readOnly className='col-auto order-first order-lg-last ml-lg-3' id='radioBtn2' type='radio'\r\n                            checked={this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown}/>\r\n                        <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn2'>Or use your own:</label>\r\n                        <div className='w-100 d-sm-none'></div>\r\n                        <CustomInput className='col text-left' id='file-input' type='file' accept='image/*' innerRef={this.fileInput}\r\n                            invalid={this.state.invalidUserImage} onChange={this.handleFileChange}/>\r\n                        <a className='unstyled ml-2' id='show-tooltip' href='#' onClick={(e) => {e.preventDefault(); e.stopPropagation();}}>\r\n                            <i className='bi-info-circle'></i>\r\n                        </a>\r\n                        <UncontrolledTooltip placement='top' target='show-tooltip'>\r\n                            Images are only used locally in your browser and are never uploaded or sent over the Internet.\r\n                        </UncontrolledTooltip>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\n\r\nimport ImagePicker from './ImagePicker';\r\nimport presetImages from './providedImages';\r\n\r\n\r\nconst minPuzzleDimension = 2;\r\nconst maxPuzzleDimension = 25;\r\n\r\nexport default class PuzzleControls extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleDimensionsChange = this.handleDimensionsChange.bind(this);\r\n        this.handleDimensionsBlur = this.handleDimensionsBlur.bind(this);\r\n        \r\n        this.setSelectedImage = this.setSelectedImage.bind(this);\r\n        this.newPuzzle = this.newPuzzle.bind(this);\r\n        \r\n        this.state = {\r\n            selectedImage: presetImages[0],\r\n            rows: presetImages[0].defaultRows,\r\n            cols: presetImages[0].defaultCols\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.newPuzzle();\r\n    }\r\n\r\n    handleDimensionsChange(e) {\r\n        this.setState({[e.target.name]: e.target.valueAsNumber});\r\n    }\r\n\r\n    handleDimensionsBlur(e) {\r\n        this.setState({[e.target.name]: this.validateDimension(e.target.value)});\r\n    }\r\n\r\n    validateDimension(val) {\r\n        let result = parseInt(val, 10);\r\n        if (isNaN(result) || result < minPuzzleDimension) {\r\n            result = minPuzzleDimension;\r\n        } else if (result > maxPuzzleDimension) {\r\n            result = maxPuzzleDimension;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    setSelectedImage(imageInfo) {\r\n        const rows = imageInfo ? imageInfo.defaultRows : this.state.rows;\r\n        const cols = imageInfo ? imageInfo.defaultCols : this.state.cols;\r\n        this.setState({selectedImage: imageInfo, rows: rows, cols: cols});\r\n    }\r\n\r\n    newPuzzle() {\r\n        if (!this.state.selectedImage) {\r\n            return;\r\n        }\r\n\r\n        const rows = this.validateDimension(this.state.rows);\r\n        const cols = this.validateDimension(this.state.cols);\r\n\r\n        const img = this.state.selectedImage;\r\n        document.documentElement.style.setProperty('--puzzle-img', `url(${img.url})`);\r\n        \r\n        const sizeTester = new Image();\r\n        sizeTester.onerror = () => console.log(\"Failed to load image\");\r\n        sizeTester.onload = () => this.props.newPuzzle(sizeTester.naturalWidth, sizeTester.naturalHeight, rows, cols, img);\r\n        sizeTester.src = img.url;\r\n    };\r\n\r\n    render() {\r\n        const rowsVal = isNaN(this.state.rows) ? '' : this.state.rows;\r\n        const colsVal = isNaN(this.state.cols) ? '' : this.state.cols;\r\n\r\n        return (\r\n            <form className='container mt-4'>\r\n                <div className='form-group row'>\r\n                    <ImagePicker setSelectedImage={this.setSelectedImage} minPuzzleDimension={minPuzzleDimension}/>\r\n                </div>\r\n\r\n                <div className='form-group row justify-content-center'>\r\n                    <label className='mr-2 my-2 col-form-label' htmlFor='row-input'>Rows:</label>\r\n                    <input className='mr-2 my-2' id={'row-input'} type='number' min={minPuzzleDimension} max={maxPuzzleDimension}\r\n                        name='rows' value={rowsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur}/>\r\n                    \r\n                    <label className='mr-2 my-2 col-form-label' htmlFor='col-input'>Columns:</label>\r\n                    <input className='mr-4 my-2' id='col-input' type='number' min={minPuzzleDimension} max={maxPuzzleDimension} \r\n                        name='cols' value={colsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur}/>\r\n                    \r\n                    <button className='btn btn-dark btn-lg' type='button' disabled={!this.state.selectedImage} onClick={this.newPuzzle}>New puzzle</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Puzzle from './puzzle/Puzzle.js';\nimport PuzzleTitle from './title/PuzzleTitle.js';\nimport PuzzleControls from './controls/PuzzleControls.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nlet puzzleKey = 1;\n\nfunction renderPuzzle(width, height, rows, columns, image) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <PuzzleControls newPuzzle={renderPuzzle} />\n            <PuzzleTitle puzzleImage={image} />\n            <Puzzle key={++puzzleKey} imgWidth={width} imgHeight={height} rows={rows} cols={columns} />\n        </React.StrictMode>,\n        document.getElementById('react-root')\n    );\n}\n\n// Initial render so that PuzzleControls can set up, which then calls renderPuzzle() when loaded (is there a better way to design this?)\nReactDOM.render(\n    <React.StrictMode>\n        <PuzzleControls newPuzzle={renderPuzzle} />\n    </React.StrictMode>,\n    document.getElementById('react-root')\n);\n"],"sourceRoot":""}