{"version":3,"sources":["puzzle/Sides.js","puzzle/ClipPath.js","puzzle/ClipPathContainer.js","util.js","puzzle/Edges.js","puzzle/EdgePathDrawer.js","puzzle/EdgeStyleInfo.js","puzzle/GroupModel.js","puzzle/Piece.js","puzzle/PieceModel.js","puzzle/PuzzleCompleteImage.js","puzzle/Puzzle.js","title/DetailsModal.js","title/PuzzleTitle.js","controls/ImageInfo.js","controls/ImageSearchModalErrorMessage.js","controls/ImageSearchModalResults.js","controls/Pagination.js","controls/ImageSearchModal.js","controls/images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg","controls/images/david-clode-eOSqRq2Qm1c-unsplash.jpg","controls/images/casey-horner-80UR4DM2Rz0-unsplash.jpg","controls/images/van-gogh-roses-nga.jpg","controls/images/scott-webb-lYzgtps0UtQ-unsplash.jpg","controls/images/travel-sourced-FsmcD6uKcHk-unsplash.jpg","controls/providedImages.js","controls/ImagePicker.js","controls/SettingsModal.js","controls/PuzzleControls.js","info/CompatibilityInfoModal.js","info/CompatibilityInfo.js","index.js"],"names":["LEFT","TOP","RIGHT","BOTTOM","Sides","Symbol","iterator","ClipPath","edges","clipPathString","side","this","props","edgeDrawer","getPathString","id","pieceKey","d","getClipPathString","PureComponent","ClipPathContainer","model","key","children","pieces","map","renderClipPath","width","height","range","i","Array","from","keys","randomInt","max","Math","floor","random","clamp","x","min","Error","BUMP","RECESS","FLAT","getRandomEdgeType","types","length","EdgePathDrawer","pieceWidth","pieceHeight","borderSize","START","templates","makeTemplates","pW","pH","b","w","o","c1","c2","edgeStyleInfo","start","end","mid","type","EdgeStyleInfo","neckWidth","offset","control1","control2","other","edge","getOppositeEdge","GroupModel","bounds","row","col","push","concat","Piece","className","blockPointerEvents","style","left","displayPos","top","position","clipPath","zIndex","onPointerDown","href","imgUrl","bgPos","y","onDragStart","e","preventDefault","PieceModel","pos","neighbors","group","setPos","actualPos","val","copy","setDisplayPos","PuzzleCompleteImage","state","startPos","requestAnimationFrame","setState","destPos","src","onTransitionEnd","Component","Puzzle","innerWidth","imgWidth","cols","innerHeight","imgHeight","rows","pointerDownHandlers","handlePointerDown","bind","handlePointerMove","handlePointerUp","handleResize","handleTransitionEnd","nextzIndex","gameComplete","draggedPiece","scaleFactor","setScaleFactor","window","addEventListener","createPieces","groups","createGroups","removeEventListener","widthScale","document","documentElement","clientWidth","heightScale","clientHeight","board","querySelector","dim","getBoardDimensions","maxBoundX","maxBoundY","slice","entries","piece","xBound","yBound","clone","spacing","availableKeys","keysByGridPos","fill","keyIndex","splice","getRandomPosition","getBackgroundPosition","createEdge","opposite","topLeftKey","g","addPiece","alignWith","snapRange","abs","g1","g2","refPiece","k","p","alignPiece","mergeWith","isPrimary","pointerType","button","groupKey","offsetX","clientX","offsetY","clientY","hitElement","elementFromPoint","classList","contains","neighbor","isTouching","mergeGroups","Object","clampPiecesToBoardBounds","endAnimationComplete","boardStyle","transform","getTopLeftPos","getCenteredImagePos","renderPiece","onPointerMove","onPointerUp","DetailsModal","image","body","source","credit","nameIsTitle","name","author","ModalBody","Row","Col","md","url","alt","sourceName","sourceUrl","target","rel","description","Modal","toggle","toggleModal","isOpen","centered","ModalHeader","PuzzleTitle","modalOpen","puzzleImage","isPhoto","title","info","onClick","ImageInfo","defaultRows","defaultCols","shortName","ImageSource","ErrorInfo","statusCode","details","ImageSearchModalErrorMessage","err","error","text","errInfo","errDetails","errDisplay","getErrorDisplay","role","ImageSearchModalResults","index","chooseImage","images","page","tagName","img","isSelected","selectedImage","tabIndex","handleImageClick","onKeyDown","handleKeyDown","paddingTop","urls","small","alt_description","user","links","html","initialText","noResultsText","spinner","isLoading","renderImage","Pagination","newPage","onPageChange","currentPage","numPageLinks","minPage","content","maxPage","handleNavigate","ariaLabel","customAttributes","outerClassName","outerAriaLabel","isFirst","isLast","pageLinks","renderPageLinks","defaultProps","Number","MAX_SAFE_INTEGER","ImageSearchModal","handleInputChange","handleInputKeyDown","handlePageChange","handleSearchButtonClick","handleChooseButtonClick","selectImage","proxyUrl","process","searchBoxRef","React","createRef","searchString","isSearchStringValid","isSearchLoading","value","current","scrollIntoView","searchImages","query","encodeURIComponent","photoId","newImages","totalPages","generateDefaultDimensions","setImage","regular","trackDownload","isValid","test","validateQuery","fetch","getSearchUrl","then","response","ok","console","warn","status","statusText","json","upstreamResponse","errors","join","addImages","results","total_pages","catch","TypeError","message","finally","getDownloadUrl","hasResults","scrollable","size","ref","htmlFor","onChange","ModalFooter","disabled","providedImages","img1","img2","img3","img4","img5","img6","ImagePicker","fileInput","selectedPreset","presetImages","userImage","useUserImage","usePresetImage","setPresetImage","setUnsplashImage","handleSelectChange","handleFileChange","handleRadioKeyDown","selectedOption","usingUserImage","invalidUserImage","unsplashImage","setSelectedImage","getElementById","focus","select","selectedIndex","file","files","fileUrl","URL","createObjectURL","testLoader","Image","onerror","revokeObjectURL","onload","naturalWidth","naturalHeight","minBound","minPuzzleDimension","aspect","round","options","presetBtnStyle","userBtnStyle","readOnly","checked","renderSelectOptions","color","CustomInput","accept","innerRef","invalid","stopPropagation","UncontrolledTooltip","placement","SettingsModal","handleDimensionsChange","handleDimensionsBlur","handleColorChange","getPropertyValue","setDimension","valueAsNumber","validateDimension","setProperty","result","parseInt","isNaN","maxPuzzleDimension","rowsVal","colsVal","onBlur","Input","PuzzleControls","newPuzzle","imageInfo","sizeTester","log","CompatibilityInfoModal","CompatibilityInfo","puzzleKey","ReactDOM","render","StrictMode","renderPuzzle","columns"],"mappings":"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","file":"static/js/main.e32c7599.chunk.js","sourcesContent":["export const LEFT = 'Left';\r\nexport const TOP = 'Top';\r\nexport const RIGHT = 'Right';\r\nexport const BOTTOM = 'Bottom';\r\n\r\n// Use this to iterate through all four sides in a consistent order.\r\nexport const Sides = {\r\n    *[Symbol.iterator]() {\r\n        yield LEFT;\r\n        yield TOP;\r\n        yield RIGHT;\r\n        yield BOTTOM;\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport { Sides } from './Sides.js';\r\n\r\n\r\nexport default class ClipPath extends PureComponent {\r\n    getClipPathString(edges) {\r\n        let clipPathString = '';\r\n        for (const side of Sides) {\r\n            clipPathString += this.props.edgeDrawer.getPathString(side, edges[side]);\r\n        }\r\n        return clipPathString;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <clipPath id={'clip-' + this.props.pieceKey}>\r\n                <path d={this.getClipPathString(this.props.edges)}/>\r\n            </clipPath>\r\n        );\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport ClipPath from './ClipPath.js';\r\n\r\n\r\nexport default class ClipPathContainer extends PureComponent {\r\n    renderClipPath(model) {\r\n        return <ClipPath key={model.key} edgeDrawer={this.props.edgeDrawer} pieceKey={model.key} edges={model.edges}/>;\r\n    }\r\n\r\n    render() {\r\n        const children = this.props.pieces ? this.props.pieces.map(model => this.renderClipPath(model)) : null;\r\n        return (\r\n            <svg width='0' height='0'>\r\n                {children}\r\n            </svg>\r\n        );\r\n    }\r\n}","// Returns an array containing int values from 0 (inclusive) to i (exclusive).\r\nexport function range(i) {\r\n    return Array.from(Array(i).keys());\r\n}\r\n\r\n// Returns a random integer between 0 (inclusive) and max (exclusive).\r\nexport function randomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n// Restricts x to the range between min and max (inclusive).\r\nexport function clamp(x, min, max) {\r\n    if (min > max) {\r\n        throw Error(`clamp: min (${min}) is greater than max (${max}).`);\r\n    }\r\n    return Math.max(Math.min(x, max), min);\r\n}\r\n\r\n// Creates an object where the \"keys\" iterable provides the keys\r\n// and each value is the result of passing its corresponding key to keyToValueFunc.\r\nexport function objectMap(keys, keyToValueFunc) {\r\n    const obj = {};\r\n    for (const i of keys) {\r\n        obj[i] = keyToValueFunc(i);\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function isEmptyOrWhitespace(str) {\r\n    const regExp = /^\\s*$/;\r\n    return regExp.test(str);\r\n}","import { randomInt } from '../util';\r\n\r\n\r\nexport const BUMP = 'b';\r\nexport const RECESS = 'r';\r\nexport const FLAT = 'f';\r\n\r\n// Excludes FLAT since that edge type isn't assigned randomly.\r\nexport function getRandomEdgeType() {\r\n    const types = [BUMP, RECESS];\r\n    return types[randomInt(types.length)];\r\n}\r\n\r\nexport function getOppositeEdge(edge) {\r\n    switch(edge) {\r\n        case BUMP:\r\n            return RECESS;\r\n        case RECESS:\r\n            return BUMP;\r\n        default:\r\n            throw Error(`getOppositeEdge: ${edge} does not have an opposite edge type`);\r\n    }\r\n}","import { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM } from './Sides';\r\n\r\n\r\nexport default class EdgePathDrawer {\r\n    constructor(pieceWidth, pieceHeight, borderSize) {\r\n        this.START = 'START';\r\n        this.templates = this.makeTemplates(pieceWidth, pieceHeight, borderSize)\r\n    }\r\n\r\n    makeTemplates(pW, pH, b) {\r\n        const templates = {};\r\n\r\n        templates[this.START] = `M ${b} ${pH - b} `;\r\n\r\n        templates[BUMP + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`    \r\n            + `C ${b - o} ${pH / 2 + c1} ${0} ${pH / 2 + c2} ${0} ${pH / 2} `\r\n            + `C ${0} ${pH / 2 - c2} ${b - o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[RECESS + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`\r\n            + `C ${b + o} ${pH / 2 + c1} ${b * 2} ${pH / 2 + c2} ${b * 2} ${pH / 2} `\r\n            + `C ${b * 2} ${pH / 2 - c2} ${b + o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[LEFT] = `V ${b} `;\r\n\r\n        templates[BUMP + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b - o} ${pW / 2 - c2} ${0} ${pW / 2} ${0} `\r\n            + `C ${pW / 2 + c2} ${0} ${pW / 2 + c1} ${b - o} ${(pW + w) / 2} ${b} `;\r\n        templates[RECESS + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b + o}  ${pW / 2 - c2} ${b * 2} ${pW / 2} ${b * 2} `\r\n            + `C ${pW / 2 + c2} ${b * 2} ${pW / 2 + c1} ${b + o} ${(pW + w) / 2} ${b} `;\r\n        templates[TOP] = `H ${pW - b} `;\r\n\r\n        templates[BUMP + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b + o} ${pH / 2 - c1} ${pW} ${pH / 2 - c2} ${pW} ${pH / 2} `\r\n            + `C ${pW} ${pH / 2 + c2} ${pW - b + o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RECESS + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b - o} ${pH / 2 - c1} ${pW - b * 2} ${pH / 2 - c2} ${pW - b * 2} ${pH / 2} `\r\n            + `C ${pW - b * 2} ${pH / 2 + c2} ${pW - b - o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RIGHT] = `V ${pH - b} `;\r\n\r\n        templates[BUMP + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b + o} ${pW / 2 + c2} ${pH} ${pW / 2} ${pH} `\r\n            + `C ${pW / 2 - c2} ${pH} ${pW / 2 - c1} ${pH - b + o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[RECESS + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b - o}  ${pW / 2 + c2} ${pH - b * 2} ${pW / 2} ${pH - b * 2} `\r\n            + `C ${pW / 2 - c2} ${pH - b * 2} ${pW / 2 - c1} ${pH - b - o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[BOTTOM] = `Z`;\r\n\r\n        return templates;\r\n    }\r\n\r\n    getPathString(side, edgeStyleInfo) {\r\n        const start = (side === LEFT) ? this.templates[this.START] : '';\r\n        const end = this.templates[side];\r\n\r\n        let mid = '';\r\n        if (edgeStyleInfo.type !== FLAT) {\r\n            const key = edgeStyleInfo.type + side;\r\n            mid = this.templates[key](edgeStyleInfo.w, edgeStyleInfo.o, edgeStyleInfo.c1, edgeStyleInfo.c2);\r\n        }\r\n\r\n        return start + mid + end;\r\n    }\r\n}","import { getOppositeEdge } from './Edges';\r\n\r\n\r\n// Contains the properties needed to draw a specific puzzle piece edge:\r\n// its overall type (bump, recess, flat) and any constants needed to define its shape.\r\nexport default class EdgeStyleInfo {\r\n    constructor(type, neckWidth, offset, control1, control2) {\r\n        this.type = type;\r\n        this.w = neckWidth;     // The width of the area where the bump meets the edge of the piece.\r\n        this.o = offset;        // Controls the distance between the widest part of the bump and the edge of the piece.\r\n        this.c1 = control1;     // Controls the width of the widest part of the bump.\r\n        this.c2 = control2;     // Controls the width near the tallest part of the bump (affects the smoothness/pointiness of the curve).\r\n    }\r\n\r\n    // Returns an EdgeStyleInfo object for an edge that fits with this one:\r\n    // if this is a bump edge, opposite() returns a matching recess edge, and vice-versa.\r\n    // Will fail if called on a flat edge.\r\n    opposite() {\r\n        const other = {...this};\r\n        other.type = getOppositeEdge(this.type);\r\n        return other;\r\n    }\r\n}","import { LEFT, TOP, RIGHT, BOTTOM } from './Sides.js';\r\n\r\n\r\nexport default class GroupModel {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.pieces = [];\r\n        this.bounds = {[LEFT]: -1, [TOP]: -1, [RIGHT]: -1, [BOTTOM]: -1};\r\n    }\r\n\r\n    addPiece(key, row, col) {\r\n        this.pieces.push(key);\r\n        if (this.bounds[LEFT] < 0 || col < this.bounds[LEFT]) {\r\n            this.bounds[LEFT] = col;\r\n        }\r\n        if (this.bounds[RIGHT] < 0 || col > this.bounds[RIGHT]) {\r\n            this.bounds[RIGHT] = col;\r\n        }\r\n        if (this.bounds[TOP] < 0 || row < this.bounds[TOP]) {\r\n            this.bounds[TOP] = row;\r\n        }\r\n        if (this.bounds[BOTTOM] < 0 || row > this.bounds[BOTTOM]) {\r\n            this.bounds[BOTTOM] = row;\r\n        }\r\n    }\r\n\r\n    mergeWith(other) {\r\n        this.pieces = this.pieces.concat(other.pieces);\r\n        if (other.bounds[LEFT] < this.bounds[LEFT]) {\r\n            this.bounds[LEFT] = other.bounds[LEFT];\r\n        }\r\n        if (other.bounds[RIGHT] > this.bounds[RIGHT]) {\r\n            this.bounds[RIGHT] = other.bounds[RIGHT];\r\n        }\r\n        if (other.bounds[TOP] < this.bounds[TOP]) {\r\n            this.bounds[TOP] = other.bounds[TOP];\r\n        }\r\n        if (other.bounds[BOTTOM] > this.bounds[BOTTOM]) {\r\n            this.bounds[BOTTOM] = other.bounds[BOTTOM];\r\n        }\r\n    }\r\n}","import { PureComponent } from 'react';\r\n\r\n\r\nexport default class Piece extends PureComponent {\r\n    render() {\r\n        const model = this.props.model;\r\n        const className = 'puzzle-piece' + (this.props.blockPointerEvents ? ' block-pointer-events' : '');\r\n        return (\r\n            // Set the position on a wrapper div because if it's set directly on the svg, Firefox fails to re-render\r\n            // with the updated position when pieces 'snap' together, for some reason\r\n            <div style={{left: model.displayPos.left, top: model.displayPos.top, position: 'absolute'}}>\r\n                <svg className={className}\r\n                     data-id={model.key}\r\n                     width={this.props.width}\r\n                     height={this.props.height}\r\n                     clipPath={'url(#clip-' + model.key + ')'}\r\n                     style={{zIndex: (model.zIndex > 0 ? model.zIndex : 'auto')}}\r\n                     onPointerDown={this.props.onPointerDown}>\r\n                    <image href={this.props.imgUrl}\r\n                           x={this.props.model.bgPos.left}\r\n                           y={this.props.model.bgPos.top} \r\n                           onDragStart={(e) => e.preventDefault()}/>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","// Never mutate pos or displayPos's left/top properties; always set them using setPos() or setDisplayPos()\r\n// to ensure that the Piece re-renders properly and that pos and displayPos stay in sync. \r\n\r\nexport default class PieceModel {\r\n\r\n    // All parameters should be integers except:\r\n    // pos, bgPos: Objects with the properties 'left' and 'top', each set to a number.\r\n    // edges:      An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to an EdgeStyleInfo object.\r\n    // neighbors:  An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to the key of another PieceModel or undefined.  \r\n    // \r\n    constructor(key, col, row, pos, bgPos, zIndex, edges, neighbors) {\r\n        // By default, a new piece is inserted into the group with the same id as its key.\r\n        this.group = key;\r\n        \r\n        this.key = key;\r\n        this.col = col;\r\n        this.row = row;\r\n        this.bgPos = bgPos;\r\n        this.zIndex = zIndex;\r\n        this.edges = edges;\r\n        this.neighbors = neighbors;\r\n        \r\n        this.setPos(pos.left, pos.top);\r\n    }\r\n    \r\n    get pos() {\r\n        return this.actualPos;\r\n    }\r\n    \r\n    set pos(val) {\r\n        throw Error('PieceModel: Don\\'t set \"pos\" directly - use setPos() instead.');\r\n    }\r\n    \r\n    // 'pos' is the piece's original position before clamping; it doesn't change when the board is resized\r\n    // so that if the board is expanded again, the piece can return to its original position.\r\n    setPos(left, top) {\r\n        this.actualPos = {left: left, top: top};\r\n        this.displayPos = this.actualPos;\r\n    }\r\n\r\n    // 'displayPos' is the piece's clamped position; if the board is resized so that the piece would end up outside the board,\r\n    // its display position is set to keep it in bounds.\r\n    // When the piece is interacted with (picked up or merged with another piece/group), displayPos becomes the piece's actual position.\r\n    setDisplayPos(left, top) {\r\n        this.displayPos = {left: left, top: top};\r\n    }\r\n\r\n    clone() {\r\n        const copy = new PieceModel(this.key, this.col, this.row, this.pos, this.bgPos, this.zIndex, this.edges, this.neighbors);\r\n        copy.group = this.group;\r\n        copy.setDisplayPos(this.displayPos.left, this.displayPos.top);\r\n        return copy;\r\n    }\r\n}","import { Component } from 'react';\r\n\r\n\r\nexport default class PuzzleCompleteImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...this.props.startPos};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Change on the second frame to ensure the image is drawn at the original position at least once.\r\n        requestAnimationFrame(() => requestAnimationFrame(() => this.setState({...this.props.destPos})));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <img className='puzzle-complete-img'\r\n                 src={this.props.imgUrl}\r\n                 width={this.props.width}\r\n                 height={this.props.height}\r\n                 style={{left: this.state.left, top: this.state.top}}\r\n                 onTransitionEnd={this.props.onTransitionEnd}/>\r\n        ); \r\n    }\r\n}","import { Component } from 'react';\r\nimport ClipPathContainer from './ClipPathContainer';\r\nimport EdgePathDrawer from './EdgePathDrawer';\r\nimport EdgeStyleInfo from './EdgeStyleInfo';\r\nimport GroupModel from './GroupModel';\r\nimport Piece from './Piece';\r\nimport PieceModel from './PieceModel';\r\nimport PuzzleCompleteImage from './PuzzleCompleteImage';\r\n\r\nimport { getRandomEdgeType } from './Edges';\r\nimport { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM, Sides } from './Sides';\r\nimport { range, randomInt } from '../util';\r\n\r\nimport './Puzzle.css';\r\n\r\n\r\nconst MAX_WIDTH_SCALE = .7;   // The maximum percentage of the window width that the puzzle image should take up. \r\nconst MAX_HEIGHT_SCALE = .7;  // The maximum percentage of the window height that the puzzle image should take up. \r\n\r\nexport default class Puzzle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.innerWidth =  this.props.imgWidth / this.props.cols;\r\n        this.innerHeight = this.props.imgHeight / this.props.rows;\r\n        this.borderSize = Math.min(this.innerHeight, this.innerWidth) / 4;\r\n        this.pieceWidth = 2 * this.borderSize + this.innerWidth;\r\n        this.pieceHeight = 2 * this.borderSize + this.innerHeight;\r\n\r\n        this.pointerDownHandlers = range(this.props.rows * this.props.cols).map(i => this.handlePointerDown.bind(this, i));\r\n        this.handlePointerMove = this.handlePointerMove.bind(this);\r\n        this.handlePointerUp = this.handlePointerUp.bind(this);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\r\n\r\n        this.edgeDrawer = new EdgePathDrawer(this.pieceWidth, this.pieceHeight, this.borderSize);\r\n        this.nextzIndex = 1;\r\n\r\n        this.state = {\r\n            gameComplete: false,\r\n            draggedPiece: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const scaleFactor = this.setScaleFactor();\r\n        window.addEventListener('resize', this.handleResize);\r\n\r\n        const pieces = this.createPieces(scaleFactor);\r\n        this.groups = this.createGroups(pieces);\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    setScaleFactor() {\r\n        const widthScale = MAX_WIDTH_SCALE * document.documentElement.clientWidth / this.props.imgWidth;\r\n        const heightScale = MAX_HEIGHT_SCALE * document.documentElement.clientHeight / this.props.imgHeight;\r\n        const scaleFactor = Math.min(widthScale, heightScale);\r\n        this.setState({scaleFactor: scaleFactor});\r\n        return scaleFactor;\r\n    }\r\n    \r\n    getBoardDimensions() {\r\n        // Return a dummy value if board not found? Or just let it throw an error?\r\n        const board = document.querySelector('.puzzle-background');\r\n        return {width: board.clientWidth, height: board.clientHeight};\r\n    }\r\n\r\n    clampPiecesToBoardBounds(scaleFactor) {\r\n        const dim = this.getBoardDimensions();\r\n        const maxBoundX = dim.width / scaleFactor - this.pieceWidth;\r\n        const maxBoundY = dim.height / scaleFactor - this.pieceHeight;\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        for (const [i, piece] of pieces.entries()) {\r\n            const group = this.groups[piece.group];\r\n            const xBound = maxBoundX - (this.innerWidth * (group.bounds[RIGHT] - piece.col));\r\n            const yBound = maxBoundY - (this.innerHeight * (group.bounds[BOTTOM] - piece.row));\r\n\r\n            pieces[i] = piece.clone();\r\n            pieces[i].setDisplayPos(\r\n                piece.pos.left > xBound ? xBound : piece.pos.left,\r\n                piece.pos.top > yBound ? yBound : piece.pos.top);\r\n        }\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    getGridPosition(col, row, spacing) {\r\n        const left = (this.innerWidth + spacing) * col - this.borderSize;\r\n        const top = (this.innerHeight + spacing) * row - this.borderSize;\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    getRandomPosition(scaleFactor) {\r\n        const dim = this.getBoardDimensions();\r\n\r\n        let left, top;\r\n        if (dim.width > dim.height) {\r\n            left = Math.random() * (.15 * dim.width / scaleFactor);\r\n            top = Math.random() * (dim.height / scaleFactor - this.pieceHeight) ;\r\n        } else {\r\n            left = Math.random() * (dim.width / scaleFactor - this.pieceWidth);\r\n            top = Math.random() * (.15 * dim.height) / scaleFactor;\r\n        }\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    getBackgroundPosition(col, row) {\r\n        const left = - (this.innerWidth * col) + this.borderSize;\r\n        const top = -(this.innerHeight * row) + this.borderSize;\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    createEdge(type) {\r\n        const neckWidth = this.borderSize * (.8 + Math.random() * .45);\r\n        const offset = this.borderSize * (.4 + Math.random() * .1);\r\n        const c1 = (neckWidth > this.borderSize) ? neckWidth * (.75 + Math.random() * .25)\r\n                    : this.borderSize * (.85 + Math.random() * .35);\r\n        const c2 = neckWidth * (.5 + Math.random() * .15);\r\n        return new EdgeStyleInfo(type, neckWidth, offset, c1, c2);\r\n    }\r\n\r\n    createPieces(scaleFactor) {\r\n        const pieces = [];\r\n        const availableKeys = range(this.props.cols * this.props.rows);\r\n        // Use map() instead of fill() to ensure that each inner array is a unique object.\r\n        const keysByGridPos = Array(this.props.cols).fill(null).map(() => Array(this.props.rows));\r\n        \r\n        for (let col = 0; col < this.props.cols; col++) {\r\n            for (let row = 0; row < this.props.rows; row++) {\r\n                const keyIndex = randomInt(availableKeys.length);\r\n                const key = availableKeys.splice(keyIndex, 1)[0];\r\n                keysByGridPos[col][row] = key;\r\n                \r\n                // const pos = this.getGridPosition(col, row, 0);\r\n                const pos = this.getRandomPosition(scaleFactor);\r\n                const bgPos = this.getBackgroundPosition(col, row);\r\n\r\n                const neighbors = {};\r\n                if (col > 0) {\r\n                    neighbors[LEFT] = keysByGridPos[col - 1][row];\r\n                    pieces[neighbors[LEFT]].neighbors[RIGHT] = key;\r\n                }\r\n                if (row > 0) {\r\n                    neighbors[TOP] = keysByGridPos[col][row - 1];\r\n                    pieces[neighbors[TOP]].neighbors[BOTTOM] = key;\r\n                }\r\n\r\n                const edges = {};\r\n                edges[LEFT] = (col === 0) ? this.createEdge(FLAT) : pieces[neighbors[LEFT]].edges[RIGHT].opposite();\r\n                edges[TOP] = (row === 0) ? this.createEdge(FLAT) : pieces[neighbors[TOP]].edges[BOTTOM].opposite();\r\n                edges[RIGHT] = (col === this.props.cols - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType());\r\n                edges[BOTTOM] = (row === this.props.rows - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType());\r\n                \r\n                pieces[key] = new PieceModel(key, col, row, pos, bgPos, 0, edges, neighbors);\r\n            }\r\n        }\r\n        this.topLeftKey = keysByGridPos[0][0];\r\n        return pieces;\r\n    }\r\n\r\n    createGroups(pieces) {\r\n        const groups = {};\r\n        for (const piece of pieces) {\r\n            const g = new GroupModel(piece.key);\r\n            g.addPiece(piece.key, piece.row, piece.col);\r\n            groups[piece.key] = g;\r\n        }\r\n        return groups;\r\n    }\r\n\r\n    alignPiece(piece, alignWith) {\r\n        piece.setPos(alignWith.displayPos.left + this.innerWidth * (piece.col - alignWith.col),\r\n                     alignWith.displayPos.top + this.innerHeight * (piece.row - alignWith.row));\r\n    }\r\n    \r\n    isTouching(piece, side, other) {\r\n        const snapRange = 7 / this.state.scaleFactor;\r\n        if (side === RIGHT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((other.displayPos.left - piece.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === LEFT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((piece.displayPos.left - other.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === TOP) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((piece.displayPos.top - other.displayPos.top) - this.innerHeight) <= snapRange;\r\n        } else if (side === BOTTOM) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((other.displayPos.top - piece.displayPos.top) - this.innerHeight) <= snapRange;\r\n        }\r\n    }\r\n\r\n    mergeGroups(pieces, g1, g2) {\r\n        // First, update all the PieceModels in the group to be merged\r\n        const refPiece = pieces[this.groups[g1].pieces[0]];\r\n        for (const k of this.groups[g2].pieces) {\r\n            const p = pieces[k].clone();\r\n            p.group = g1;\r\n            p.zIndex = refPiece.zIndex;\r\n            this.alignPiece(p, refPiece);\r\n            pieces[k] = p;\r\n        }\r\n\r\n        // Then, merge the GroupModels\r\n        this.groups[g1].mergeWith(this.groups[g2]);\r\n\r\n        delete this.groups[g2];\r\n    }\r\n\r\n    handlePointerDown(key, e) {\r\n        if (this.state.draggedPiece !== null || !e.isPrimary || (e.pointerType === 'mouse' && e.button !== 0)) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups[groupKey].pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            pieces[k].zIndex = this.nextzIndex;\r\n            pieces[k].setPos(pieces[k].displayPos.left, pieces[k].displayPos.top);\r\n        }\r\n        this.nextzIndex++;\r\n\r\n        this.setState({\r\n            pieces: pieces,\r\n            draggedPiece: key,\r\n            offsetX: e.clientX - (pieces[key].pos.left * this.state.scaleFactor),\r\n            offsetY: e.clientY - (pieces[key].pos.top * this.state.scaleFactor)\r\n        });\r\n\r\n    }\r\n\r\n    handlePointerMove(e) {\r\n        if (this.state.draggedPiece === null || !e.isPrimary) {\r\n            return;\r\n        }\r\n        \r\n        // Ignore events from touches that started within puzzle area but moved out of bounds\r\n        const hitElement = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (!hitElement || !hitElement.classList.contains('puzzle-area')) {\r\n            return;\r\n        }\r\n\r\n        const key = this.state.draggedPiece;\r\n        const pieces = this.state.pieces.slice();\r\n        \r\n        const p = pieces[key].clone();\r\n        pieces[key] = p;\r\n        \r\n        const left = (e.clientX - this.state.offsetX) / this.state.scaleFactor;\r\n        const top = (e.clientY - this.state.offsetY) / this.state.scaleFactor;\r\n        p.setPos(left, top);\r\n\r\n        const group = this.groups[p.group];\r\n        for (const k of group.pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            this.alignPiece(pieces[k], p);\r\n        }\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    handlePointerUp() {\r\n        if (this.state.draggedPiece === null) {\r\n            return;\r\n        }\r\n\r\n        const key = this.state.draggedPiece;\r\n        const pieces = this.state.pieces.slice();\r\n\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups[groupKey].pieces) {\r\n            const p = pieces[k];\r\n            for (const side of Sides) {\r\n                const neighbor = pieces[p.neighbors[side]];\r\n                if (neighbor && neighbor.group !== p.group && this.isTouching(p, side, neighbor)) {\r\n                    this.mergeGroups(pieces, p.group, neighbor.group);\r\n                }\r\n            }\r\n        }\r\n\r\n        const gameComplete = Object.keys(this.groups).length === 1;\r\n        this.setState({pieces: pieces, draggedPiece: null, gameComplete: gameComplete});\r\n    }\r\n\r\n    handleResize() {\r\n        const scaleFactor = this.setScaleFactor();\r\n        this.clampPiecesToBoardBounds(scaleFactor);\r\n    }\r\n\r\n    handleTransitionEnd() {\r\n        this.setState({endAnimationComplete: true});\r\n    }\r\n\r\n    getTopLeftPos() {\r\n        const pos = this.state.pieces[this.topLeftKey].displayPos;\r\n        return {left: pos.left + this.borderSize, top: pos.top + this.borderSize};\r\n    }\r\n\r\n    getCenteredImagePos() {\r\n        const dim = this.getBoardDimensions();\r\n        const destLeft = (dim.width / this.state.scaleFactor - this.props.imgWidth) / 2;\r\n        const destTop = (dim.height / this.state.scaleFactor - this.props.imgHeight) / 2;\r\n        return {left: destLeft, top: destTop};\r\n    }\r\n\r\n    renderPiece(model) {\r\n        return (\r\n            <Piece key={model.key}\r\n                   model={model}\r\n                   width={this.pieceWidth}\r\n                   height={this.pieceHeight}\r\n                   imgUrl={this.props.imgUrl}\r\n                   blockPointerEvents={this.state.draggedPiece !== null}\r\n                   onPointerDown={this.pointerDownHandlers[model.key]}/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const boardStyle = {\r\n            transform: `scale(${this.state.scaleFactor})`,\r\n            width: (100 / this.state.scaleFactor) + '%',\r\n            height: (100 / this.state.scaleFactor) + '%'\r\n        };\r\n\r\n        let board;\r\n        if (this.state.gameComplete && this.state.endAnimationComplete) {\r\n            board = (<div className='puzzle-area puzzle-complete' style={boardStyle}></div>);\r\n        } else if (this.state.gameComplete) {\r\n            board = (\r\n                <div className='puzzle-area' style={boardStyle}>\r\n                    <PuzzleCompleteImage imgUrl={this.props.imgUrl}\r\n                                         startPos={this.getTopLeftPos()}\r\n                                         destPos={this.getCenteredImagePos()}\r\n                                         width={this.props.imgWidth}\r\n                                         height={this.props.imgHeight}\r\n                                         onTransitionEnd={this.handleTransitionEnd}/>\r\n                </div>);\r\n        } else {\r\n            const children = this.state.pieces ? this.state.pieces.map(model => this.renderPiece(model)) : null;\r\n            board = (\r\n                <div className={'puzzle-area' + (this.state.draggedPiece !== null ? ' no-scroll' : '')}\r\n                     onPointerMove={this.handlePointerMove}\r\n                     onPointerUp={this.handlePointerUp}\r\n                     style={boardStyle}>\r\n                    <ClipPathContainer edgeDrawer={this.edgeDrawer} pieces={this.state.pieces}/>\r\n                    {children}\r\n                </div>);\r\n        }\r\n        \r\n        return (\r\n            <div className='puzzle-container mt-2'>\r\n                <div className='puzzle-background'></div>\r\n                {board}\r\n                {/* Use a separate div for padding because adding padding directly to the puzzle container\r\n                    can cause the game-completed image to jump at the end of its motion */}\r\n                <div className='pb-3'></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n\r\nexport default class DetailsModal extends Component {\r\n    render() {\r\n        const image = this.props.image;\r\n        \r\n        let body = '';\r\n        if (image && image.source) {\r\n                const credit = (image.source.nameIsTitle ? image.name : 'Photo') + ' by ' + image.author;\r\n                body = ( \r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col md='8'><img src={image.url} alt='Image preview' width='100%'/></Col>\r\n                            <Col md='4' className='mt-3 mt-md-0 pl-md-0'>\r\n                                <p>{credit}</p>\r\n                                <p>Source: {image.source.sourceName}</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='mt-md-3'>\r\n                            <Col>\r\n                                <p className=\"text-break\">\r\n                                    See the original at: <a href={image.source.sourceUrl} target='_blank' rel='external noopener'>{image.source.sourceUrl}</a>\r\n                                </p>\r\n                                {image.source.description ? <p>{image.source.description}</p> : null}\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                ); \r\n            }\r\n\r\n        return(\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}> \r\n                <ModalHeader toggle={this.props.toggleModal}>Image details</ModalHeader>\r\n                {body}\r\n            </Modal>\r\n        );  \r\n    }\r\n}","import { Component } from 'react';\r\nimport DetailsModal from './DetailsModal';\r\n\r\n\r\nexport default class PuzzleTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {modalOpen: false};\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return {modalOpen: !state.modalOpen} });\r\n    }\r\n\r\n    render() {\r\n        const puzzleImage = this.props.puzzleImage;\r\n        if (!puzzleImage) {\r\n            return null;\r\n        }\r\n\r\n        const isPhoto = puzzleImage.source && puzzleImage.source.isPhoto;\r\n        const nameIsTitle = puzzleImage.source && puzzleImage.source.nameIsTitle;\r\n\r\n        const title = nameIsTitle ? <em>{puzzleImage.name}</em> : '';\r\n        let author = '';\r\n        if (puzzleImage.author) {\r\n            if (nameIsTitle) {\r\n                author += `, ${isPhoto ? ' photo' : ''} by `;\r\n            } else if (isPhoto) {\r\n                author += 'Photo by ';\r\n            } else {\r\n                author += 'By '\r\n            }\r\n            author += puzzleImage.author;\r\n        }\r\n        const info = puzzleImage.source ? <button type='button' className='btn btn-link btn-sm text-muted px-1' onClick={this.toggleModal}>more info</button> : '';\r\n\r\n        return (\r\n            <div className='container-fluid container-md mt-3'>\r\n                <div className='row justify-content-center flex-sm-nowrap mx-n2'>\r\n                    <div className='col-2 d-none d-md-block px-2'> </div> \r\n                    <div className='col-auto flex-shrink-1 px-2'>\r\n                        <p className='h5'>{title}{author}</p>\r\n                    </div>\r\n                    <div className='col-auto col-sm-2 px-2'>{info}</div>\r\n                </div>\r\n                <DetailsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} image={puzzleImage} />\r\n            </div>);\r\n    }\r\n}","export class ImageInfo {\r\n    constructor(name, url, defaultRows, defaultCols, author, source, shortName) {\r\n        this.name = name;\r\n        this.url = url;\r\n        this.defaultRows = defaultRows;\r\n        this.defaultCols = defaultCols;\r\n        this.author = author;\r\n        this.source = source;\r\n        this.shortName = shortName ?? name;\r\n    }\r\n}\r\n\r\nexport class ImageSource {\r\n    constructor(sourceName, nameIsTitle=false, isPhoto=false, sourceUrl='', description='') {\r\n        this.sourceName = sourceName;\r\n        this.nameIsTitle = nameIsTitle;\r\n        this.sourceUrl = sourceUrl;\r\n        this.isPhoto = isPhoto;\r\n        this.description = description;\r\n    }\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class ErrorInfo {\r\n    constructor(type, statusCode, details) {\r\n        this.type = type;\r\n        this.statusCode = statusCode;\r\n        this.details = details;\r\n    }\r\n}\r\n\r\nexport default class ImageSearchModalErrorMessage extends Component {\r\n    getErrorDisplay() {\r\n        const err = this.props.error;\r\n        if (err.statusCode === 429 && err.type === 'upstream') {\r\n            return { \r\n                title: 'Rate limit exceeded (API)',\r\n                text: (<>\r\n                    <p>The hourly limit for requests from this site to the Unsplash server has been reached.</p>\r\n                    <p>Feel free to <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                    {' '}to let me know - <br/>if this happens often, I can look into applying for a higher rate limit.</p>\r\n                </>)\r\n            };\r\n        } else if (err.statusCode === 429 && err.type === 'proxy') {\r\n            return { \r\n                title: 'Rate limit exceeded (API Proxy)',\r\n                text: (<p>Please try again in a moment.<br/>(If you get this error frequently, feel free to {' '}\r\n                    <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                    {' '}and let me know.)</p>)\r\n            };\r\n        } else {\r\n            const errInfo = err.type === 'network' ? 'Network error' : `Status code ${err.statusCode} (${err.type})`;\r\n            const errDetails = err.details ? ' - ' + err.details : null;\r\n            return {\r\n                title: 'Something went wrong :0',\r\n                text: (<>\r\n                    <p><small className=''>Error details: {errInfo}{errDetails}</small></p>\r\n                    <p>Please try again. If you keep getting an error, feel free to {' '}\r\n                    <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                    {' '}and let me know.</p>\r\n                </>)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.error) {\r\n            return null;\r\n        }\r\n\r\n        const errDisplay = this.getErrorDisplay();\r\n        return (\r\n            <div className='search-error alert alert-warning text-center' role='alert'>\r\n                <h6 className='alert-heading'>{errDisplay.title}</h6>\r\n                {errDisplay.text}\r\n                <p className='mt-n2'>\r\n                    You can still search photos directly on <a>Unsplash.com</a> and <a>enter an image's ID here</a>, \r\n                    or download an image to your computer and load it using the file selector.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModalErrorMessage.propTypes = {\r\n    error: PropTypes.instanceOf(ErrorInfo),\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class ImageSearchModalResults extends Component {\r\n    handleImageClick(index) {\r\n        this.props.chooseImage(this.props.images[this.props.page][index]);\r\n    }\r\n\r\n    handleKeyDown(index, e) {\r\n        if ((e.key === 'Enter' || e.key === 'Space') && e.target.tagName !== 'A') {\r\n            this.props.chooseImage(this.props.images[this.props.page][index]);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    // TODO: redo with better semantic markup\r\n    renderImage(img, index) {\r\n        const isSelected = this.props.selectedImage === img;\r\n        return(\r\n            <div data-testid='result' className={'result-container mb-2'} key={img.id} tabIndex='0'\r\n                onClick={() => this.handleImageClick(index)} onKeyDown={(e) => this.handleKeyDown(index, e)}>\r\n                <div className={`result ${isSelected ? 'result-selected' : ''}`}>\r\n                    <div className='placeholder' style={{paddingTop: (img.height / img.width) * 100 + '%'}}>\r\n                        <img src={img.urls.small} alt={img.alt_description}/>\r\n                        <span className='badge badge-dark'>\r\n                            By <a className='text-light' href={img.user.links.html} rel='external' target='_blank'>{img.user.name}</a>\r\n                            {' '}on <a className='text-light' href={img.links.html} rel='external' target='_blank'>Unsplash</a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const images = this.props.images[this.props.page];\r\n\r\n        const initialText = <div className='text-secondary'>Image results will go here, and it will be very cool.</div>;\r\n        const noResultsText = <div className='text-secondary'>No results found. :(</div>;\r\n        const spinner = (\r\n                <div className='spinner-border my-1' role='status'>\r\n                    <span className='sr-only'>Loading...</span>\r\n                </div>);\r\n\r\n        return (\r\n            <div className='search-results-container text-center'>\r\n                {!this.props.isLoading && !images ? initialText : null}\r\n                {!this.props.isLoading && images && images.length === 0 ? noResultsText : null}\r\n                {this.props.isLoading ? spinner : null}\r\n                <div className='search-results'>\r\n                    {images ? images.map((img, index) => this.renderImage(img, index)) : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModalResults.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)),\r\n    page: PropTypes.number,\r\n    isLoading: PropTypes.bool,\r\n    selectedImage: PropTypes.object,\r\n    chooseImage: PropTypes.func,\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Pagination extends Component {\r\n    handleNavigate(e, newPage) {\r\n        e.preventDefault();\r\n        if (this.props.onPageChange) {\r\n            this.props.onPageChange(newPage);\r\n        }\r\n    }\r\n\r\n    renderPageLinks() {\r\n        const links = [];\r\n\r\n        const start = this.props.currentPage - this.props.numPageLinks - 1;\r\n        const end = this.props.currentPage + this.props.numPageLinks + 1;\r\n\r\n        if (start >= this.props.minPage) {\r\n            links.push(<li key={start}>...</li>);\r\n        } else {\r\n            links.push(<li key={start} className='invisible'></li>);\r\n        }\r\n\r\n        for (let i = start + 1; i < end; i++) {\r\n            let content = null;\r\n            if (i === this.props.currentPage) {\r\n                content = <span>{i}</span>\r\n            }\r\n            else if (i >= this.props.minPage && i <= this.props.maxPage) {\r\n                content = <a href='#' onClick={(e) => this.handleNavigate(e, i)}>{i}</a>;\r\n            }\r\n            links.push(<li className={!content ? 'invisible' : null} key={i}>{content}</li>);\r\n        }\r\n\r\n        if (end <= this.props.maxPage) {\r\n            links.push(<li key={end}>...</li>);\r\n        } else {\r\n            links.push(<li key={end} className='invisible'></li>);\r\n        }\r\n\r\n        return <ul>{links}</ul>;\r\n    }\r\n\r\n    render() {\r\n        const {currentPage, minPage, maxPage, numPageLinks, onPageChange, className, ariaLabel, ...customAttributes} = this.props;\r\n\r\n        const outerClassName = 'custom-pagination container ' + (className || '');\r\n        const outerAriaLabel = ariaLabel || 'Search results pages';\r\n\r\n        const isFirst = !(this.props.currentPage > this.props.minPage);\r\n        const isLast = !(this.props.currentPage < this.props.maxPage);\r\n\r\n        const pageLinks = this.renderPageLinks();\r\n\r\n        return (\r\n            <nav className={outerClassName} aria-label={outerAriaLabel} {...customAttributes}>\r\n                <div className='row justify-content-between align-items-center'>\r\n                    <div className='col-auto p-0'>\r\n                        <a className={isFirst ? 'invisible' : null} href='#'\r\n                            onClick={isFirst ? null : (e) => this.handleNavigate(e, this.props.currentPage - 1)}>\r\n                            {'< Back'}\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className='col-auto'>\r\n                        {pageLinks}\r\n                    </div>\r\n\r\n                    <div className='col-auto p-0'>\r\n                        <a className={isLast ? 'invisible' : null} href='#'\r\n                           onClick={isLast ? null : (e) => this.handleNavigate(e, this.props.currentPage + 1)}>\r\n                            {'More >'}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n// In addition to the listed types, any unrecognized props will be added as attributes to the outer <nav> DOM node,\r\n// to allow for customization\r\nPagination.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    minPage: PropTypes.number,\r\n    maxPage: PropTypes.number,\r\n    numPageLinks: PropTypes.number,  // The number of page links shown on either side of the current page number\r\n    onPageChange: PropTypes.func,    // Callback raised when a page link is clicked; it is given one parameter, the page number to navigate to\r\n    className: PropTypes.string,     // An optional class string to append to the default classes\r\n    ariaLabel: PropTypes.string,     // An optional label string to replace the default aria-label\r\n}\r\n\r\nPagination.defaultProps = {\r\n    minPage: 1,\r\n    maxPage: Number.MAX_SAFE_INTEGER,\r\n    numPageLinks: 1,\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { clamp, isEmptyOrWhitespace } from '../util.js'\r\nimport { ImageInfo, ImageSource } from './ImageInfo.js';\r\nimport ImageSearchModalErrorMessage, { ErrorInfo } from './ImageSearchModalErrorMessage.js';\r\nimport ImageSearchModalResults from './ImageSearchModalResults.js';\r\nimport Pagination from './Pagination.js';\r\n\r\nimport './ImageSearchModal.css';\r\n\r\n\r\nconst  MAX_SEARCH_PAGES = 10;\r\n\r\nexport default class ImageSearchModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.handleSearchButtonClick = this.handleSearchButtonClick.bind(this);\r\n        this.handleChooseButtonClick = this.handleChooseButtonClick.bind(this);\r\n        this.selectImage = this.selectImage.bind(this);\r\n\r\n        this.proxyUrl = process.env.REACT_APP_PROXY_URL;\r\n\r\n        this.searchBoxRef = React.createRef();\r\n\r\n        // Note: The page count starts from 1, but the images array is zero-indexed,\r\n        // so make sure to subtract 1 when using this.state.page to accesss the images array.\r\n        this.state = {\r\n            images: [],\r\n            page: 1,\r\n            maxPage: 1,\r\n            searchString: '',\r\n            isSearchStringValid: true,\r\n            isSearchLoading: false,\r\n            error: null,\r\n            selectedImage: null\r\n        }\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({searchString: e.target.value});\r\n    }\r\n\r\n    handleInputKeyDown(e) {\r\n        if (e.key === 'Enter') {\r\n            this.handleSearchButtonClick();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    handlePageChange(newPage) {\r\n        if (this.state.isSearchLoading) {\r\n            return;\r\n        }\r\n\r\n        newPage = Math.floor(newPage);\r\n        newPage = clamp(newPage, 1, MAX_SEARCH_PAGES);\r\n\r\n        // Supposedly scrollIntoView() doesn't work with CSS 'scroll-behavior: smooth' on Chrome/Edge,\r\n        // but in manual testing it seems to be working?\r\n        requestAnimationFrame(() => this.searchBoxRef.current.scrollIntoView());\r\n\r\n        // (Could use scrollTo() or scrollTop as an alternative:)\r\n        // requestAnimationFrame(() => this.modalRef.current.querySelector('.modal-body').scrollTo(0, 0));\r\n        // requestAnimationFrame(() => this.modalRef.current.querySelector('.modal-body').scrollTop = 0);\r\n\r\n        if (!this.state.images[newPage - 1]) {\r\n            this.searchImages(newPage);\r\n        } else {\r\n            this.setState({page: newPage});\r\n        }\r\n    }\r\n\r\n    handleSearchButtonClick() {\r\n        this.setState({images: []}, () => this.searchImages(1));\r\n    }\r\n\r\n    handleChooseButtonClick() {\r\n        this.chooseImage();\r\n        this.props.toggleModal();\r\n    }\r\n\r\n    selectImage(image) {\r\n        this.setState({selectedImage: image});\r\n    }\r\n\r\n    getSearchUrl(query, page) {\r\n        return `${this.proxyUrl}/search/${encodeURIComponent(query)}/page/${page}`;\r\n    }\r\n\r\n    getDownloadUrl(photoId) {\r\n        return `${this.proxyUrl}/download/${photoId}`;\r\n    }\r\n\r\n    addImages(newImages, page, totalPages) {\r\n        const images = this.state.images.slice();\r\n        images[page - 1] = newImages;\r\n\r\n        const maxPage = Math.min(totalPages, MAX_SEARCH_PAGES);\r\n\r\n        this.setState({images: images, page: page, maxPage: maxPage});\r\n    }\r\n\r\n    chooseImage() {\r\n        const img = this.state.selectedImage;\r\n\r\n        // Note: This passes in the raw image dimensions, while the used image is likely to be smaller (1080px) -\r\n        // which is fine as long as generateDefaultDimensions only uses the aspect ratio, but that could change in the future.\r\n        const dim = this.props.generateDefaultDimensions(img.width, img.height);\r\n        \r\n        this.props.setImage(new ImageInfo(`Unsplash Photo (${img.id})`, img.urls.regular, dim.rows, dim.cols, img.user.name,\r\n            new ImageSource('Unsplash', false, true, img.links.html)));\r\n\r\n        this.trackDownload(img.id);\r\n    }\r\n\r\n    validateQuery(query) {\r\n        const isValid = query && !isEmptyOrWhitespace(query);\r\n        this.setState({isSearchStringValid: isValid});\r\n        return isValid;\r\n    }\r\n\r\n    searchImages(page) {\r\n        const query = this.state.searchString;\r\n        if (!this.validateQuery(query)) {\r\n            return;\r\n        }\r\n        \r\n        // console.log('Searching: ' + query);\r\n        this.setState({isSearchLoading: true});\r\n\r\n        fetch(this.getSearchUrl(query, page)).then(response => {\r\n            if (!response.ok) {\r\n                console.warn(`Proxy server returned an error: ${response.status}, ${response.statusText}`);\r\n                this.setState({error: new ErrorInfo('proxy', response.status, response.statusText)});\r\n                throw new Error(`Failed response: ${response.status}, ${response.statusText}`);\r\n            }\r\n            return response.json();\r\n        }).then(upstreamResponse => {\r\n            // console.log(upstreamResponse);\r\n\r\n            if (upstreamResponse.errors) {\r\n                console.warn(`Upstream server returned an error (status code ${upstreamResponse.status}):\r\n                    ${upstreamResponse.errors.join(', ')}`);\r\n                this.setState({error: new ErrorInfo('upstream', upstreamResponse.status, upstreamResponse.errors.join(', '))});\r\n                throw new Error(`Upstream failed response (status code ${upstreamResponse.status}):\r\n                    ${upstreamResponse.errors.join(', ')}`);\r\n            }\r\n\r\n            this.setState({error: null});\r\n            this.addImages(upstreamResponse.response.results, page, upstreamResponse.response.total_pages);\r\n        }).catch(err => {\r\n            if (err instanceof TypeError) {\r\n                this.setState({error: new ErrorInfo('network')});\r\n            }\r\n            console.warn(`${err.name}: ${err.message}`);\r\n        }).finally(() => {\r\n            this.setState({isSearchLoading: false})\r\n        });\r\n    }\r\n\r\n    trackDownload(photoId) {\r\n        fetch(this.getDownloadUrl(photoId)).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error(`${response.status} ${response.statusText}`);\r\n            }\r\n        }).then(upstreamResponse => {\r\n            if (upstreamResponse.type === 'success') {\r\n                // console.log(`Image ${photoId} download notified successfully.`);\r\n                // console.log(upstreamResponse)\r\n            } else {\r\n                throw new Error(`${upstreamResponse.status} - ${upstreamResponse.errors.join(', ')} (upstream)`);\r\n            }\r\n        }).catch(err =>\r\n            console.warn(`Image ${photoId} download failed. Error:`, err.message)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const hasResults = this.state.images[this.state.page - 1] && this.state.images[this.state.page - 1].length > 0;\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} scrollable={true} size='lg' centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Find images</ModalHeader>\r\n\r\n                <ModalBody>\r\n                    <p>Browse images from Unsplash.com by searching below.</p>\r\n\r\n                    <div className={`form-group row mx-0`} ref={this.searchBoxRef}>\r\n                        <label className='col-form-label mr-2' htmlFor='img-search-input'>Search by keyword</label>\r\n                        <input className={`col col-lg-4 form-control ${!this.state.isSearchStringValid? 'is-invalid' : ''} px-2 mr-2`}\r\n                            id='img-search-input' type='text' value={this.state.searchString} aria-describedby='searchValidationFeedback'\r\n                            onKeyDown={this.handleInputKeyDown} onChange={this.handleInputChange}/>\r\n                        <button className='btn btn-dark mr-auto' type='button' onClick={this.handleSearchButtonClick}>Search</button>\r\n                        <div className='w-100 d-lg-none'></div>\r\n                        <div className='col invalid-feedback align-self-center' id='searchValidationFeedback'>\r\n                            Please enter a search term.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ImageSearchModalErrorMessage error={this.state.error}/>\r\n\r\n                    <ImageSearchModalResults images={this.state.images} page={this.state.page - 1} isLoading={this.state.isSearchLoading}\r\n                        selectedImage={this.state.selectedImage} chooseImage={this.selectImage} />\r\n                </ModalBody>\r\n\r\n                <ModalFooter className='flex-sm-nowrap'>\r\n                    {hasResults ?\r\n                        <Pagination className='mr-sm-3'\r\n                                    currentPage={this.state.page}\r\n                                    maxPage={this.state.maxPage}\r\n                                    onPageChange={this.handlePageChange}/>\r\n                        : null}\r\n\r\n                    <button className='btn btn-dark flex-shrink-0' type='button' disabled={!this.state.selectedImage}\r\n                        onClick={this.handleChooseButtonClick}>\r\n                        Use selected image\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModal.propTypes = {\r\n    // The ImageSearchModal will call this with a new ImageInfo object when the user selects an image to use from the search.\r\n    setImage: PropTypes.func.isRequired,\r\n    // Calculates default puzzle dimensions (rows+columns) from an image's width and height.\r\n    generateDefaultDimensions: PropTypes.func.isRequired,\r\n    // A function the modal can call to close itself.\r\n    toggleModal: PropTypes.func.isRequired,\r\n    // Whether the modal should be shown.\r\n    isOpen: PropTypes.bool.isRequired,\r\n}","export default __webpack_public_path__ + \"static/media/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.a8f36cd5.jpg\";","export default __webpack_public_path__ + \"static/media/david-clode-eOSqRq2Qm1c-unsplash.42540cb6.jpg\";","export default __webpack_public_path__ + \"static/media/casey-horner-80UR4DM2Rz0-unsplash.001ae9f7.jpg\";","export default __webpack_public_path__ + \"static/media/van-gogh-roses-nga.8fa9d120.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-lYzgtps0UtQ-unsplash.509dd0a5.jpg\";","export default __webpack_public_path__ + \"static/media/travel-sourced-FsmcD6uKcHk-unsplash.97041d06.jpg\";","import { ImageInfo, ImageSource } from './ImageInfo';\r\n\r\nimport img1 from './images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg';\r\nimport img2 from './images/david-clode-eOSqRq2Qm1c-unsplash.jpg';\r\nimport img3 from './images/casey-horner-80UR4DM2Rz0-unsplash.jpg';\r\nimport img4 from './images/van-gogh-roses-nga.jpg';\r\nimport img5 from './images/scott-webb-lYzgtps0UtQ-unsplash.jpg';\r\nimport img6 from './images/travel-sourced-FsmcD6uKcHk-unsplash.jpg';\r\n\r\n\r\nconst providedImages = [\r\n    new ImageInfo('Red Parrot on the Branch of a Tree', img1, 6, 8, 'Itō Jakuchū', \r\n        new ImageSource('Metropolitan Museum of Art', true, false, 'https://www.metmuseum.org/art/collection/search/57123'), 'Red Parrot'),\r\n    new ImageInfo('Coral', img2, 7, 10, 'David Clode',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/eOSqRq2Qm1c')),\r\n    new ImageInfo('Starry Sky', img3, 7, 10, 'Casey Horner',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/80UR4DM2Rz0')),\r\n    new ImageInfo('Roses', img4, 8, 10, 'Vincent van Gogh',\r\n        new ImageSource('National Gallery of Art', true, false, 'https://www.nga.gov/collection/art-object-page.72328.html')),\r\n    new ImageInfo('Succulents', img5, 8, 5, 'Scott Webb',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/lYzgtps0UtQ')),\r\n    new ImageInfo('Jellyfish', img6, 7, 10, 'Travel Sourced',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/FsmcD6uKcHk'))\r\n];\r\n\r\nexport default providedImages;","import React, { Component } from 'react';\r\nimport { CustomInput, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport ImageSearchModal from './ImageSearchModal.js';\r\nimport { ImageInfo } from './ImageInfo';\r\nimport { clamp } from '../util';\r\nimport presetImages from './providedImages';\r\n\r\nimport './ImagePicker.css';\r\n\r\n\r\nexport default class ImagePicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileInput = React.createRef();\r\n\r\n        this.selectedPreset = presetImages[0];\r\n        this.userImage = null;\r\n\r\n        this.useUserImage = this.useUserImage.bind(this);\r\n        this.usePresetImage = this.usePresetImage.bind(this);\r\n        this.setPresetImage = this.setPresetImage.bind(this);\r\n        this.setUnsplashImage = this.setUnsplashImage.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n        this.handleRadioKeyDown = this.handleRadioKeyDown.bind(this);\r\n        this.generateDefaultDimensions = this.generateDefaultDimensions.bind(this);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n\r\n        this.state = {\r\n            selectedOption: 'preset0',\r\n            usingUserImage: false,\r\n            invalidUserImage: false,\r\n            unsplashImage: null,\r\n            modalOpen: false,\r\n        };\r\n    }\r\n    \r\n    usePresetImage() {\r\n        this.setState({usingUserImage: false});\r\n        this.props.setSelectedImage(this.selectedPreset);\r\n    }\r\n\r\n    useUserImage() {\r\n        this.setState({usingUserImage: true});\r\n        this.props.setSelectedImage(this.userImage);\r\n    }\r\n\r\n    setPresetImage(image) {\r\n        this.selectedPreset = image;\r\n        this.props.setSelectedImage(image);\r\n    }\r\n\r\n    setUnsplashImage(image) {\r\n        this.setState({\r\n            unsplashImage: image, selectedOption: 'unsplash'});\r\n        this.setPresetImage(image);\r\n    }\r\n    \r\n    // Maintain arrow key navigation between the radio buttons even though they aren't\r\n    // actually part of the same radio group (so that they can be separate tab stops).\r\n    handleRadioKeyDown(e) {\r\n        switch(e.key) {\r\n            case 'ArrowLeft':\r\n            case 'ArrowUp':\r\n            case 'Left':\r\n            case 'Up':\r\n                if (e.target.id === 'radioBtn2') {\r\n                    document.getElementById('radioBtn1').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n            case 'ArrowRight':\r\n            case 'ArrowDown':\r\n            case 'Down':\r\n            case 'Right':\r\n                if (e.target.id === 'radioBtn1') {\r\n                    document.getElementById('radioBtn2').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n        }\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        this.usePresetImage();\r\n\r\n        const select = e.target;\r\n        if (select.selectedIndex === select.length - 1) {\r\n            this.toggleModal();\r\n        } else if (select.selectedIndex === select.length - 2 && this.state.unsplashImage) {\r\n            this.setPresetImage(this.state.unsplashImage);\r\n            this.setState({selectedOption: 'unsplash'});\r\n        } else if (select.selectedIndex !== -1) {\r\n            this.setPresetImage(presetImages[select.selectedIndex]);\r\n            this.setState({selectedOption: 'preset' + select.selectedIndex});\r\n        }\r\n    }\r\n\r\n    handleFileChange() {\r\n        this.useUserImage();\r\n        \r\n        const file = this.fileInput.current.files[0];\r\n        const fileUrl = URL.createObjectURL(file);\r\n        \r\n        const testLoader = new Image();\r\n        testLoader.onerror = () => {\r\n            URL.revokeObjectURL(fileUrl);\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            this.userImage = null;            \r\n            this.setState({invalidUserImage: true});\r\n            this.props.setSelectedImage(null);\r\n        };\r\n        testLoader.onload = () => {\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            const dim = this.generateDefaultDimensions(testLoader.naturalWidth, testLoader.naturalHeight);\r\n            this.userImage = new ImageInfo(file.name, fileUrl, dim.rows, dim.cols);\r\n            this.setState({invalidUserImage: false});\r\n            this.props.setSelectedImage(this.userImage);\r\n        };\r\n        testLoader.src = fileUrl;\r\n    }\r\n\r\n    // Tries to choose a good default based on the image aspect ratio;\r\n    // could go further and tailor the target rows+columns to the viewport size\r\n    generateDefaultDimensions(width, height) {\r\n        const target = 12;\r\n        const minBound = this.props.minPuzzleDimension;\r\n        const aspect = width / height;\r\n\r\n        // cols = (width / height) * rows\r\n        // cols + rows = target\r\n        const rows = clamp(Math.round(target / (aspect + 1)), minBound, target - minBound);\r\n        const cols = target - rows;\r\n\r\n        return {rows: rows, cols: cols};\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({modalOpen: !this.state.modalOpen});\r\n    }\r\n\r\n    renderSelectOptions() {\r\n        const options = [];\r\n        for (let i = 0; i < presetImages.length; i++) {\r\n            const img = presetImages[i];\r\n            options.push(<option key={i} value={'preset' + i}>{img.shortName}</option>);\r\n        }\r\n        options.push(<option key={-1} disabled>―――――――</option>)\r\n        if (this.state.unsplashImage) {\r\n            options.push(<option key={-2} value={'unsplash'}>{`Unsplash photo by ${this.state.unsplashImage.author}`}</option>)\r\n        }\r\n        options.push(<option key={-3}>More...</option>)\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const presetBtnStyle = this.state.usingUserImage ? 'btn-outline-dark' : 'btn-dark';\r\n        const userBtnStyle = this.state.usingUserImage ? 'btn-dark' : 'btn-outline-dark';\r\n\r\n        return (\r\n            <>\r\n                <div className='input-group'>\r\n                    <div className='input-group-prepend col-12 col-lg-6 pr-lg-0'>\r\n                        <div className={`btn ${presetBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.usePresetImage}>\r\n                            <input readOnly className='col-auto' id='radioBtn1' type='radio'\r\n                                checked={!this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown}/>\r\n                            <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn1'>Choose an image:</label>\r\n                            <div className='w-100 d-sm-none'></div>\r\n                            <label className='sr-only' htmlFor='puzzle-image-select'>Select image</label>\r\n                            <select className='custom-select col' id='puzzle-image-select' value={this.state.selectedOption} onChange={this.handleSelectChange}>\r\n                                {this.renderSelectOptions()}\r\n                            </select>\r\n                            <button className='btn btn-link p-0 ml-2' type='button' aria-label='Find more images' style={{ color: 'inherit' }} onClick={this.toggleModal}>\r\n                                <i className='bi-search icon-lg'></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='input-group-append col-12 col-lg-6 pl-lg-0'>\r\n                        <div className={`btn ${userBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.useUserImage}>\r\n                            <input readOnly className='col-auto order-first order-lg-last ml-lg-3' id='radioBtn2' type='radio'\r\n                                checked={this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown}/>\r\n                            <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn2'>Or use your own:</label>\r\n                            <div className='w-100 d-sm-none'></div>\r\n                            <CustomInput className='col text-left' id='file-input' type='file' accept='image/*' innerRef={this.fileInput}\r\n                                invalid={this.state.invalidUserImage} onChange={this.handleFileChange}/>\r\n                            <button className='btn btn-link p-0 ml-2' id='show-tooltip' type='button' style={{ color: 'inherit' }}\r\n                                onClick={(e) => {e.preventDefault(); e.stopPropagation();}}>\r\n                                <i className='bi-info-circle icon-lg'></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <UncontrolledTooltip placement='top' target='show-tooltip'>\r\n                    Images are only used locally in your browser and are never uploaded or sent over the Internet.\r\n                </UncontrolledTooltip>\r\n                <ImageSearchModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} setImage={this.setUnsplashImage} generateDefaultDimensions={this.generateDefaultDimensions}/>\r\n            </>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\n\r\nexport default class SettingsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleDimensionsChange = this.handleDimensionsChange.bind(this);\r\n        this.handleDimensionsBlur = this.handleDimensionsBlur.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const color = document.documentElement.style.getPropertyValue('--puzzle-bg');\r\n        this.setState({color: color ? color : '#adb5bd'});\r\n    }\r\n\r\n    handleDimensionsChange(e) {\r\n        this.props.setDimension(e.target.name, e.target.valueAsNumber);\r\n    }\r\n\r\n    handleDimensionsBlur(e) {\r\n        this.props.setDimension(e.target.name, this.validateDimension(e.target.value));\r\n    }\r\n\r\n    handleColorChange(e) {\r\n        const color = e.target.value;\r\n        this.setState({color: color});\r\n        document.documentElement.style.setProperty('--puzzle-bg', color);\r\n    }\r\n    \r\n    validateDimension(val) {\r\n        let result = parseInt(val, 10);\r\n        if (isNaN(result) || result < this.props.minPuzzleDimension) {\r\n            result = this.props.minPuzzleDimension;\r\n        } else if (result > this.props.maxPuzzleDimension) {\r\n            result = this.props.maxPuzzleDimension;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const rowsVal = isNaN(this.props.rows) ? '' : this.props.rows;\r\n        const colsVal = isNaN(this.props.cols) ? '' : this.props.cols;\r\n\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Settings</ModalHeader>\r\n                <ModalBody>\r\n                    <form className='container'>\r\n                        <div className='form-group row mb-4'>\r\n                            <label className='col-form-label mr-2 my-2' htmlFor='row-input'>Rows:</label>\r\n                            <input className='mr-2 my-2' id='row-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension}\r\n                                name='rows' value={rowsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur}/>\r\n                            \r\n                            <label className='col-form-label mr-2 my-2' htmlFor='col-input'>Columns:</label>\r\n                            <input className='mr-2 my-2' id='col-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension} \r\n                                name='cols' value={colsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur}/>\r\n                            \r\n                            <small className='col text-muted'>Changes to rows and columns take effect the next time a new puzzle is started.</small>\r\n                        </div>\r\n\r\n                        <div className='form-group row mb-4'>\r\n                            <label className='col-auto col-form-label pl-0' htmlFor='color-input'>Background color:</label>\r\n                            <Input className='col' id='color-input' type='color' value={this.state.color} onChange={this.handleColorChange}/>\r\n                        </div>\r\n                        \r\n                        <div className='form-group row justify-content-end'>\r\n                            <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.props.toggleModal}>Done</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\n\r\nimport ImagePicker from './ImagePicker';\r\nimport SettingsModal from './SettingsModal';\r\nimport presetImages from './providedImages';\r\n\r\n\r\nconst minPuzzleDimension = 2;\r\nconst maxPuzzleDimension = 25;\r\n\r\nexport default class PuzzleControls extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.setSelectedImage = this.setSelectedImage.bind(this);\r\n        this.setDimension = this.setDimension.bind(this);\r\n        this.newPuzzle = this.newPuzzle.bind(this);\r\n        \r\n        this.state = {\r\n            modalOpen: false,\r\n            selectedImage: presetImages[0],\r\n            rows: presetImages[0].defaultRows,\r\n            cols: presetImages[0].defaultCols\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.newPuzzle();\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return {modalOpen: !state.modalOpen} });\r\n    }\r\n    \r\n    setSelectedImage(imageInfo) {\r\n        if (imageInfo !== this.state.selectedImage) {\r\n            const rows = imageInfo ? imageInfo.defaultRows : this.state.rows;\r\n            const cols = imageInfo ? imageInfo.defaultCols : this.state.cols;\r\n            this.setState({selectedImage: imageInfo, rows: rows, cols: cols});\r\n        }\r\n    }\r\n    \r\n    setDimension(name, val) {\r\n        this.setState({[name]: val});\r\n    }\r\n\r\n    newPuzzle() {\r\n        if (!this.state.selectedImage) {\r\n            return;\r\n        }\r\n\r\n        const img = this.state.selectedImage;\r\n        document.documentElement.style.setProperty('--puzzle-img', `url(${img.url})`);\r\n        \r\n        const sizeTester = new Image();\r\n        sizeTester.onerror = () => console.log(\"Failed to load image\");\r\n        sizeTester.onload = () => this.props.newPuzzle(\r\n            sizeTester.naturalWidth,\r\n            sizeTester.naturalHeight,\r\n            this.state.rows,\r\n            this.state.cols,\r\n            img\r\n        );\r\n        sizeTester.src = img.url;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='container mt-4'>\r\n                <div className='row mb-3'>\r\n                    <ImagePicker setSelectedImage={this.setSelectedImage} minPuzzleDimension={minPuzzleDimension}/>\r\n                </div>\r\n\r\n                <div className='row justify-content-center align-items-end mx-n1'>\r\n                    <div className='col d-none d-md-block px-2'></div>\r\n                    \r\n                    <div className='col-auto px-2'>\r\n                        <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.newPuzzle}\r\n                            disabled={!this.state.selectedImage}>\r\n                            New puzzle\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='col-auto col-md px-2'>\r\n                        <button className='btn btn-outline-dark' type='button' onClick={this.toggleModal}>\r\n                            <i className='bi bi-gear-fill pr-2'></i>Settings\r\n                        </button>\r\n                    </div>\r\n\r\n                    <SettingsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} rows={this.state.rows} cols={this.state.cols} setDimension={this.setDimension}\r\n                        minPuzzleDimension={minPuzzleDimension} maxPuzzleDimension={maxPuzzleDimension}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\n\r\nexport default class CompatibilityInfoModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} centered={true}>\r\n                <ModalHeader toggle={this.props.toggle}>Browser compatibility</ModalHeader>\r\n                <ModalBody>\r\n                    <p>\r\n                        For the best experience, it's recommended to view this website in a recent version of <b>Firefox</b>, <b>Chrome</b>, or <b>Edge</b> on desktop,\r\n                        {' '}or <b>Chrome</b> on mobile.\r\n                    </p>\r\n                    <p>\r\n                        Safari is mostly supported, but there is an issue where the clickable area of each puzzle piece extends past the visible image\r\n                        {' '}(due to the clip-path property not masking the mouse hit area).\r\n                    </p>\r\n                    <p>This site does not work in Internet Explorer.</p>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport CompatibilityInfoModal from './CompatibilityInfoModal.js';\r\n\r\n\r\nexport default class CompatibilityInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {modalOpen: false};\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({modalOpen: !this.state.modalOpen});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <i className='bi bi-list-check text-light mr-2'></i>\r\n                <a className='text-light' href='#' onClick={this.toggleModal}>\r\n                    <small className='align-text-top'>Browser support</small>\r\n                </a>\r\n                <CompatibilityInfoModal toggle={this.toggleModal} isOpen={this.state.modalOpen} />\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Puzzle from './puzzle/Puzzle.js';\nimport PuzzleTitle from './title/PuzzleTitle.js';\nimport PuzzleControls from './controls/PuzzleControls.js';\nimport CompatibilityInfo from './info/CompatibilityInfo.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\n\n\nlet puzzleKey = 1;\n\nfunction renderPuzzle(width, height, rows, columns, image) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <PuzzleControls newPuzzle={renderPuzzle} />\n            <PuzzleTitle puzzleImage={image} />\n            <Puzzle key={++puzzleKey} imgUrl={image.url} imgWidth={width} imgHeight={height} rows={rows} cols={columns} />\n        </React.StrictMode>,\n        document.getElementById('react-root')\n    );\n}\n\n// Initial render so that PuzzleControls can set up, which then calls renderPuzzle() when loaded (is there a better way to design this?)\nReactDOM.render(\n    <React.StrictMode>\n        <PuzzleControls newPuzzle={renderPuzzle} />\n    </React.StrictMode>,\n    document.getElementById('react-root')\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <CompatibilityInfo />\n    </React.StrictMode>,\n    document.getElementById('compatibility-info-root')\n);"],"sourceRoot":""}