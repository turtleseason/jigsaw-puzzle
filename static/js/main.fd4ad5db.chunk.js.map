{"version":3,"sources":["puzzle/PieceModel.js","util.js","puzzle/Edges.js","puzzle/EdgeStyleInfo.js","puzzle/Sides.js","puzzle/GroupModel.js","puzzle/ClipPath.js","puzzle/ClipPathContainer.js","puzzle/EdgePathDrawer.js","puzzle/Piece.js","puzzle/PuzzleCompleteImage.js","puzzle/PuzzleBoard.js","puzzle/Puzzle.js","controls/ImageInfo.js","controls/ImageSearchModalErrorMessage.js","controls/ImageSearchModalResults.js","controls/Pagination.js","controls/ImageSearchModal.js","controls/images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg","controls/images/david-clode-eOSqRq2Qm1c-unsplash.jpg","controls/images/casey-horner-80UR4DM2Rz0-unsplash.jpg","controls/images/van-gogh-roses-nga.jpg","controls/images/scott-webb-lYzgtps0UtQ-unsplash.jpg","controls/images/travel-sourced-FsmcD6uKcHk-unsplash.jpg","controls/presetImages.js","controls/ImagePicker.js","controls/SettingsModal.js","controls/PuzzleControls.js","puzzle/PuzzleState.js","title/DetailsModal.js","title/PuzzleTitle.js","App.js","info/CompatibilityInfoModal.js","info/CompatibilityInfo.js","index.js"],"names":["PieceModel","key","col","row","pos","imageOffset","zIndex","edges","neighbors","this","group","_pos","left","top","_displayPos","copy","displayPos","range","i","Array","from","keys","randomInt","max","Math","floor","random","clamp","x","min","Error","BUMP","RECESS","FLAT","getRandomEdgeType","types","length","getOppositeEdge","edge","EdgeStyleInfo","type","neckWidth","offset","control1","control2","w","o","c1","c2","Object","assign","LEFT","TOP","RIGHT","BOTTOM","Sides","Symbol","iterator","GroupModel","piece","pieces","bounds","push","other","concat","ClipPath","clipPathString","side","props","edgeDrawer","getPathString","id","pieceKey","d","getClipPathString","PureComponent","ClipPathContainer","model","children","map","renderClipPath","width","height","EdgePathDrawer","pieceWidth","pieceHeight","borderSize","templates","makeTemplates","pW","pH","b","edgeStyleInfo","start","end","mid","Piece","style","position","className","clipPath","onPointerDown","href","imgUrl","y","onDragStart","e","preventDefault","PuzzleCompleteImage","state","startPos","handleTransitionEnd","setState","animationComplete","requestAnimationFrame","src","alt","onTransitionEnd","Component","PuzzleBoard","imgWidth","imgHeight","boardSize","getBoardDimensions","topLeftKey","find","topLeftPiece","centerLeft","scaleFactor","centerTop","pointerDownHandlers","draggedPiece","gameComplete","onPointerMove","onPointerUp","boardStyle","transform","board","getPuzzleOffsetFromCenter","renderPiece","Puzzle","innerWidth","cols","innerHeight","rows","nextzIndex","undefined","offsetX","offsetY","endAnimationComplete","handlePointerDown","isPrimary","pointerType","button","slice","groupKey","groups","get","k","clone","clientX","clientY","handlePointerMove","document","elementsFromPoint","some","element","classList","contains","alignPiece","handlePointerUp","p","neighbor","isTouching","mergeGroups","size","handleResize","setScaleFactor","clampPiecesToBoardBounds","getGameState","bind","window","addEventListener","createGroups","createPieces","removeEventListener","widthScale","documentElement","clientWidth","heightScale","clientHeight","querySelector","dimensions","maxBoundX","maxBoundY","entries","xBound","yBound","spacing","availableKeys","keysByGridPos","fill","splice","getRandomPosition","getPieceImageOffset","createEdge","opposite","Map","forEach","addPiece","set","alignWith","snapRange","abs","g1","g2","refPiece","mergeWith","delete","ImageInfo","name","url","defaultRows","defaultCols","author","source","shortName","ImageSource","sourceName","nameIsTitle","isPhoto","sourceUrl","description","ErrorInfo","statusCode","details","ImageSearchModalErrorMessage","err","error","title","text","rel","errInfo","errDetails","errDisplay","getErrorDisplay","role","target","ImageSearchModalResults","index","chooseImage","images","page","tagName","img","isSelected","selectedImage","tabIndex","onClick","handleImageClick","onKeyDown","handleKeyDown","paddingTop","urls","small","alt_description","user","links","html","initialText","noResultsText","spinner","isLoading","renderImage","Pagination","newPage","onPageChange","currentPage","numPageLinks","minPage","cursor","content","maxPage","handleNavigate","ariaLabel","customAttributes","outerClassName","outerAriaLabel","isFirst","isLast","pageLinks","renderPageLinks","defaultProps","Number","MAX_SAFE_INTEGER","ImageSearchModal","proxyUrl","process","searchBoxRef","React","createRef","searchString","isSearchStringValid","isSearchLoading","handleInputChange","value","handleInputKeyDown","handleSearchButtonClick","handlePageChange","current","scrollIntoView","searchImages","handleChooseButtonClick","toggleModal","selectImage","image","query","encodeURIComponent","photoId","newImages","totalPages","dim","generateDefaultDimensions","setImage","regular","trackDownload","isValid","test","validateQuery","fetch","getSearchUrl","then","response","ok","console","warn","status","statusText","json","upstreamResponse","errors","join","addImages","results","total_pages","catch","TypeError","message","finally","getDownloadUrl","hasResults","Modal","toggle","isOpen","scrollable","centered","ModalHeader","ModalBody","ref","htmlFor","onChange","ModalFooter","disabled","providedImages","img1","img2","img3","img4","img5","img6","ImagePicker","fileInput","selectedPreset","presetImages","userImage","selectedOption","usingUserImage","invalidUserImage","unsplashImage","modalOpen","usePresetImage","setSelectedImage","useUserImage","setPresetImage","setUnsplashImage","handleRadioKeyDown","getElementById","focus","handleSelectChange","select","selectedIndex","handleFileChange","file","files","fileUrl","URL","createObjectURL","testLoader","Image","onerror","revokeObjectURL","onload","naturalWidth","naturalHeight","minBound","minPuzzleDimension","aspect","round","options","presetBtnStyle","userBtnStyle","readOnly","checked","renderSelectOptions","color","CustomInput","accept","innerRef","invalid","stopPropagation","UncontrolledTooltip","placement","SettingsModal","saveComplete","handleOpened","handleDimensionsChange","setDimension","valueAsNumber","handleDimensionsBlur","validateDimension","handleColorChange","setProperty","handleSave","a","saveGame","success","getPropertyValue","val","result","parseInt","isNaN","maxPuzzleDimension","rowsVal","colsVal","onOpened","onBlur","Input","loadGame","PuzzleControls","newPuzzle","sizeTester","log","savePuzzle","loadPuzzle","PuzzleState","imageWidth","imageHeight","imageInfo","DetailsModal","body","credit","Row","Col","md","PuzzleTitle","puzzleImage","info","App","puzzle","puzzleKey","savedPieces","oldImage","saveUserImage","blob","Promise","resolve","reader","FileReader","onloadend","localStorage","setItem","readAsDataURL","getItem","removeItem","JSON","stringify","save","parse","handleToastDismiss","Toast","ToastHeader","ToastBody","CompatibilityInfoModal","CompatibilityInfo","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fd4ad5db.chunk.js","sourcesContent":["// Stores the state of a single puzzle piece.\r\n//\r\n// Don't mutate pos or displayPos's left/top properties directly; always set them using the property setters\r\n// to ensure that the Piece re-renders properly and that pos and displayPos stay in sync.\r\n\r\nexport default class PieceModel {\r\n\r\n    // All parameters should be integers except:\r\n    // pos, bgPos: { left: number, top: number }\r\n    // edges:      An object with properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to an EdgeStyleInfo object.\r\n    // neighbors:  An object with properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to the key of another PieceModel or undefined.  \r\n    // \r\n    constructor(key, col, row, pos, imageOffset, zIndex, edges, neighbors) {\r\n        // By default, a new piece is inserted into the group with the same id as its key.\r\n        this.group = key;\r\n\r\n        this.key = key;\r\n        this.col = col;\r\n        this.row = row;\r\n        this.pos = pos ?? {};\r\n        this.imageOffset = imageOffset;\r\n        this.zIndex = zIndex;\r\n        this.edges = edges;\r\n        this.neighbors = neighbors;\r\n    }\r\n\r\n    // 'pos' is the piece's original position before clamping; it doesn't change when the board is resized\r\n    // so that if the board is expanded again, the piece can return to its original position.\r\n    get pos() {\r\n        return this._pos;\r\n    }\r\n\r\n    set pos({ left, top }) {\r\n        this._pos = { left, top };\r\n        this._displayPos = this._pos;\r\n    }\r\n\r\n    // 'displayPos' is the piece's clamped position; if the board is resized so that the piece would end up outside the board,\r\n    // its display position is set to keep it in bounds.\r\n    // When the piece is interacted with (picked up or merged with another piece/group), displayPos becomes the piece's actual position.\r\n    get displayPos() {\r\n        return this._displayPos;\r\n    }\r\n\r\n    set displayPos({ left, top }) {\r\n        this._displayPos = { left, top };\r\n    }\r\n\r\n    clone() {\r\n        const copy = new PieceModel(this.key, this.col, this.row, this.pos, this.imageOffset,\r\n            this.zIndex, this.edges, this.neighbors);\r\n        copy.group = this.group;\r\n        copy.displayPos = this.displayPos;\r\n        return copy;\r\n    }\r\n}","// Returns an array containing int values from 0 (inclusive) to i (exclusive).\r\nexport function range(i) {\r\n    return Array.from(Array(i).keys());\r\n}\r\n\r\n// Returns a random integer between 0 (inclusive) and max (exclusive).\r\nexport function randomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n// Restricts x to the range between min and max (inclusive).\r\nexport function clamp(x, min, max) {\r\n    if (min > max) {\r\n        throw Error(`clamp: min (${min}) is greater than max (${max}).`);\r\n    }\r\n    return Math.max(Math.min(x, max), min);\r\n}\r\n\r\n// Creates an object where the \"keys\" iterable provides the keys\r\n// and each value is the result of passing its corresponding key to keyToValueFunc.\r\nexport function objectMap(keys, keyToValueFunc) {\r\n    const obj = {};\r\n    for (const i of keys) {\r\n        obj[i] = keyToValueFunc(i);\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function isEmptyOrWhitespace(str) {\r\n    const regExp = /^\\s*$/;\r\n    return regExp.test(str);\r\n}","import { randomInt } from '../util';\r\n\r\n\r\nexport const BUMP = 'b';\r\nexport const RECESS = 'r';\r\nexport const FLAT = 'f';\r\n\r\n// Excludes FLAT since that edge type isn't assigned randomly.\r\nexport function getRandomEdgeType() {\r\n    const types = [BUMP, RECESS];\r\n    return types[randomInt(types.length)];\r\n}\r\n\r\nexport function getOppositeEdge(edge) {\r\n    switch (edge) {\r\n        case BUMP:\r\n            return RECESS;\r\n        case RECESS:\r\n            return BUMP;\r\n        case FLAT:\r\n            throw Error(`getOppositeEdge: Flat edge has no opposite type`);\r\n        default:\r\n            throw Error(`getOppositeEdge: Unknown edge type ${edge}`);\r\n    }\r\n}","import { getOppositeEdge } from './Edges';\r\n\r\n// Contains the properties needed to draw a specific puzzle piece edge:\r\n// its overall type (bump, recess, flat) and any constants needed to define its shape.\r\nexport default class EdgeStyleInfo {\r\n    constructor(type, neckWidth, offset, control1, control2) {\r\n        this.type = type;\r\n        this.w = neckWidth;     // The width of the area where the bump meets the edge of the piece.\r\n        this.o = offset;        // Controls the distance between the widest part of the bump and the edge of the piece.\r\n        this.c1 = control1;     // Controls the width of the widest part of the bump.\r\n        this.c2 = control2;     // Controls the width near the tallest part of the bump (affects the smoothness/pointiness of the curve).\r\n    }\r\n\r\n    // Returns an EdgeStyleInfo object for an edge that fits with this one:\r\n    // if this is a bump edge, opposite() returns a matching recess edge, and vice-versa.\r\n    // Will fail if called on a flat edge.\r\n    opposite() {\r\n        return Object.assign(new EdgeStyleInfo(), this, { type: getOppositeEdge(this.type) });\r\n    }\r\n}","export const LEFT = 'Left';\r\nexport const TOP = 'Top';\r\nexport const RIGHT = 'Right';\r\nexport const BOTTOM = 'Bottom';\r\n\r\n// Use this to iterate through all four sides in a consistent order.\r\nexport const Sides = {\r\n    *[Symbol.iterator]() {\r\n        yield LEFT;\r\n        yield TOP;\r\n        yield RIGHT;\r\n        yield BOTTOM;\r\n    }\r\n};","import { LEFT, TOP, RIGHT, BOTTOM } from './Sides.js';\r\n\r\nexport default class GroupModel {\r\n    // If a separate key is not provided, the piece's key is used as the group key.\r\n    constructor(piece, key) {\r\n        this.key = key ?? piece.key;\r\n        this.pieces = [piece.key];\r\n        this.bounds = { [LEFT]: piece.col, [TOP]: piece.row, [RIGHT]: piece.col, [BOTTOM]: piece.row };\r\n    }\r\n\r\n    addPiece(piece) {\r\n        this.pieces.push(piece.key);\r\n\r\n        this.bounds[LEFT] = Math.min(this.bounds[LEFT], piece.col);\r\n        this.bounds[RIGHT] = Math.max(this.bounds[RIGHT], piece.col);\r\n        this.bounds[TOP] = Math.min(this.bounds[TOP], piece.row);\r\n        this.bounds[BOTTOM] = Math.max(this.bounds[BOTTOM], piece.row);\r\n    }\r\n\r\n    mergeWith(other) {\r\n        this.pieces = this.pieces.concat(other.pieces);\r\n\r\n        this.bounds[LEFT] = Math.min(this.bounds[LEFT], other.bounds[LEFT]);\r\n        this.bounds[RIGHT] = Math.max(this.bounds[RIGHT], other.bounds[RIGHT]);\r\n        this.bounds[TOP] = Math.min(this.bounds[TOP], other.bounds[TOP]);\r\n        this.bounds[BOTTOM] = Math.max(this.bounds[BOTTOM], other.bounds[BOTTOM]);\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport { Sides } from './Sides.js';\r\n\r\n\r\nexport default class ClipPath extends PureComponent {\r\n    getClipPathString(edges) {\r\n        let clipPathString = '';\r\n        for (const side of Sides) {\r\n            clipPathString += this.props.edgeDrawer.getPathString(side, edges[side]);\r\n        }\r\n        return clipPathString;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <clipPath id={'clip-' + this.props.pieceKey}>\r\n                <path d={this.getClipPathString(this.props.edges)} />\r\n            </clipPath>\r\n        );\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport ClipPath from './ClipPath.js';\r\n\r\n\r\nexport default class ClipPathContainer extends PureComponent {\r\n    renderClipPath(model) {\r\n        return <ClipPath key={model.key} edgeDrawer={this.props.edgeDrawer} pieceKey={model.key} edges={model.edges} />;\r\n    }\r\n\r\n    render() {\r\n        const children = this.props.pieces?.map(model => this.renderClipPath(model));\r\n        return (\r\n            <svg width='0' height='0' aria-hidden='true' data-testid='clip-path-container'>\r\n                {children}\r\n            </svg>\r\n        );\r\n    }\r\n}","import { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM } from './Sides';\r\n\r\n\r\nconst START = 'START';\r\n\r\nexport default class EdgePathDrawer {\r\n    constructor(pieceWidth, pieceHeight, borderSize) {\r\n        this.templates = this.makeTemplates(pieceWidth, pieceHeight, borderSize);\r\n    }\r\n\r\n    makeTemplates(pW, pH, b) {\r\n        const templates = {};\r\n\r\n        templates[START] = `M ${b} ${pH - b} `;\r\n\r\n        templates[BUMP + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`\r\n            + `C ${b - o} ${pH / 2 + c1} ${0} ${pH / 2 + c2} ${0} ${pH / 2} `\r\n            + `C ${0} ${pH / 2 - c2} ${b - o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[RECESS + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`\r\n            + `C ${b + o} ${pH / 2 + c1} ${b * 2} ${pH / 2 + c2} ${b * 2} ${pH / 2} `\r\n            + `C ${b * 2} ${pH / 2 - c2} ${b + o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[LEFT] = `V ${b} `;\r\n\r\n        templates[BUMP + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b - o} ${pW / 2 - c2} ${0} ${pW / 2} ${0} `\r\n            + `C ${pW / 2 + c2} ${0} ${pW / 2 + c1} ${b - o} ${(pW + w) / 2} ${b} `;\r\n        templates[RECESS + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b + o}  ${pW / 2 - c2} ${b * 2} ${pW / 2} ${b * 2} `\r\n            + `C ${pW / 2 + c2} ${b * 2} ${pW / 2 + c1} ${b + o} ${(pW + w) / 2} ${b} `;\r\n        templates[TOP] = `H ${pW - b} `;\r\n\r\n        templates[BUMP + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b + o} ${pH / 2 - c1} ${pW} ${pH / 2 - c2} ${pW} ${pH / 2} `\r\n            + `C ${pW} ${pH / 2 + c2} ${pW - b + o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RECESS + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b - o} ${pH / 2 - c1} ${pW - b * 2} ${pH / 2 - c2} ${pW - b * 2} ${pH / 2} `\r\n            + `C ${pW - b * 2} ${pH / 2 + c2} ${pW - b - o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RIGHT] = `V ${pH - b} `;\r\n\r\n        templates[BUMP + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b + o} ${pW / 2 + c2} ${pH} ${pW / 2} ${pH} `\r\n            + `C ${pW / 2 - c2} ${pH} ${pW / 2 - c1} ${pH - b + o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[RECESS + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b - o}  ${pW / 2 + c2} ${pH - b * 2} ${pW / 2} ${pH - b * 2} `\r\n            + `C ${pW / 2 - c2} ${pH - b * 2} ${pW / 2 - c1} ${pH - b - o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[BOTTOM] = `Z`;\r\n\r\n        return templates;\r\n    }\r\n\r\n    getPathString(side, edgeStyleInfo) {\r\n        const start = (side === LEFT) ? this.templates[START] : '';\r\n        const end = this.templates[side];\r\n\r\n        let mid = '';\r\n        if (edgeStyleInfo.type !== FLAT) {\r\n            const key = edgeStyleInfo.type + side;\r\n            mid = this.templates[key](edgeStyleInfo.w, edgeStyleInfo.o, edgeStyleInfo.c1, edgeStyleInfo.c2);\r\n        }\r\n\r\n        return start + mid + end;\r\n    }\r\n}","import { PureComponent } from 'react';\r\n\r\nexport default class Piece extends PureComponent {\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            // Set the position on a wrapper div because if it's set directly on the svg, Firefox fails to re-render\r\n            // with the updated position when pieces 'snap' together, for some reason\r\n            <div style={{ left: model.displayPos.left, top: model.displayPos.top, position: 'absolute' }}>\r\n                <svg\r\n                    className='puzzle-piece'\r\n                    aria-label='Puzzle piece'\r\n                    data-id={model.key}\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                    clipPath={`url(#clip-${model.key})`}\r\n                    style={{ zIndex: (model.zIndex > 0 ? model.zIndex : 'auto') }}\r\n                    onPointerDown={this.props.onPointerDown}>\r\n                    <image\r\n                        href={this.props.imgUrl}\r\n                        x={this.props.model.imageOffset.left}\r\n                        y={this.props.model.imageOffset.top}\r\n                        onDragStart={(e) => e.preventDefault()} />\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","// When the puzzle is finished, the separate pieces merge together into a single image and animate towards the center of the board.\r\n//\r\n// (Once the animation completes, this image is replaced with a background image on the puzzle board\r\n//  because the background image can automatically adjust its position when the page is resized,\r\n//  which is simpler and easier than keeping it centered manually.)\r\n\r\nimport { Component } from 'react';\r\n\r\nexport default class PuzzleCompleteImage extends Component {\r\n    state = { ...this.props.startPos };\r\n\r\n    componentDidMount() {\r\n        // Change on the second frame to ensure the image is drawn at the original position at least once.\r\n        requestAnimationFrame(() => requestAnimationFrame(() => this.setState({ top: 0, left: 0 })));\r\n    }\r\n\r\n    handleTransitionEnd = () => {\r\n        this.setState({ animationComplete: true });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <img\r\n                className='puzzle-complete-img'\r\n                src={this.props.imgUrl}\r\n                alt='Completed puzzle'\r\n                width={this.props.width}\r\n                height={this.props.height}\r\n                style={this.state}\r\n                onTransitionEnd={this.handleTransitionEnd} />\r\n        );\r\n    }\r\n}","// Handles displaying the puzzle using state passed down from Puzzle.\r\n\r\nimport { Component } from \"react\";\r\n\r\nimport ClipPathContainer from './ClipPathContainer';\r\nimport EdgePathDrawer from './EdgePathDrawer';\r\nimport Piece from './Piece';\r\nimport PuzzleCompleteImage from './PuzzleCompleteImage';\r\n\r\nexport default class PuzzleBoard extends Component {\r\n    imgUrl = this.props.imgUrl;\r\n    imgWidth = this.props.imgWidth;\r\n    imgHeight = this.props.imgHeight;\r\n    pieceWidth = this.props.pieceWidth;\r\n    pieceHeight = this.props.pieceHeight;\r\n\r\n    edgeDrawer = new EdgePathDrawer(this.props.pieceWidth, this.props.pieceHeight, this.props.borderSize);\r\n\r\n    // Gets the offset of the puzzle's current position (measured by the top left piece)\r\n    // from the position where it would be centered within the game board.\r\n    getPuzzleOffsetFromCenter() {\r\n        const boardSize = this.props.getBoardDimensions();\r\n        const topLeftKey = this.props.pieces.find(piece => piece.row === 0 && piece.col === 0).key;\r\n        const topLeftPiece = this.props.pieces[topLeftKey].pos;\r\n\r\n        const centerLeft = (boardSize.width / this.props.scaleFactor - this.props.imgWidth) / 2;\r\n        const centerTop = (boardSize.height / this.props.scaleFactor - this.props.imgHeight) / 2;\r\n\r\n        const imageLeft = topLeftPiece.left + this.props.borderSize;\r\n        const imageTop = topLeftPiece.top + this.props.borderSize;\r\n\r\n        return { left: imageLeft - centerLeft, top: imageTop - centerTop, };\r\n    }\r\n\r\n    renderPiece(model) {\r\n        return (\r\n            <Piece\r\n                key={model.key}\r\n                model={model}\r\n                width={this.pieceWidth}\r\n                height={this.pieceHeight}\r\n                imgUrl={this.imgUrl}\r\n                onPointerDown={this.props.pointerDownHandlers[model.key]} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { scaleFactor, pieces, draggedPiece, gameComplete, onPointerMove, onPointerUp } = this.props;\r\n\r\n        const boardStyle = {\r\n            transform: `scale(${scaleFactor})`,\r\n            width: (100 / scaleFactor) + '%',\r\n            height: (100 / scaleFactor) + '%'\r\n        };\r\n\r\n        const board = gameComplete ? (\r\n            <div className='puzzle-area' style={boardStyle}>\r\n                <PuzzleCompleteImage\r\n                    imgUrl={this.imgUrl}\r\n                    startPos={this.getPuzzleOffsetFromCenter()}\r\n                    width={this.imgWidth}\r\n                    height={this.imgHeight}\r\n                />\r\n            </div>\r\n        ) : (\r\n            <div\r\n                className={'puzzle-area' + (draggedPiece !== null ? ' no-scroll' : '')}\r\n                style={boardStyle}\r\n                onPointerMove={onPointerMove}\r\n                onPointerUp={onPointerUp}\r\n            >\r\n                <ClipPathContainer edgeDrawer={this.edgeDrawer} pieces={pieces} />\r\n                {pieces?.map(model => this.renderPiece(model))}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className='puzzle-container pt-2 pb-3'>\r\n                <div className='puzzle-background'></div>\r\n                {board}\r\n            </div>\r\n        );\r\n    }\r\n}","// Handles the main puzzle logic.\r\n\r\nimport { Component } from 'react';\r\nimport EdgeStyleInfo from './EdgeStyleInfo';\r\nimport GroupModel from './GroupModel';\r\nimport PieceModel from './PieceModel';\r\nimport PuzzleBoard from './PuzzleBoard';\r\n\r\nimport { getRandomEdgeType } from './Edges';\r\nimport { FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM, Sides } from './Sides';\r\nimport { range, randomInt } from '../util';\r\n\r\nimport './Puzzle.css';\r\n\r\nconst MAX_WIDTH_SCALE = .7;   // The maximum percentage of the window width that the puzzle image should take up. \r\nconst MAX_HEIGHT_SCALE = .7;  // The maximum percentage of the window height that the puzzle image should take up. \r\n\r\nexport default class Puzzle extends Component {\r\n    innerWidth = this.props.imgWidth / this.props.cols;\r\n    innerHeight = this.props.imgHeight / this.props.rows;\r\n    borderSize = Math.min(this.innerHeight, this.innerWidth) / 4;\r\n    pieceWidth = 2 * this.borderSize + this.innerWidth;\r\n    pieceHeight = 2 * this.borderSize + this.innerHeight;\r\n\r\n    groups;\r\n    nextzIndex = 1;\r\n\r\n    state = {\r\n        scaleFactor: undefined,\r\n        offsetX: undefined,\r\n        offsetY: undefined,\r\n        pieces: undefined,\r\n        draggedPiece: null,\r\n        gameComplete: false,\r\n        endAnimationComplete: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.pointerDownHandlers = range(this.props.rows * this.props.cols).map(i => this.handlePointerDown.bind(this, i));\r\n    }\r\n\r\n    componentDidMount() {\r\n        const scaleFactor = this.setScaleFactor();\r\n        window.addEventListener('resize', this.handleResize);\r\n\r\n        if (this.props.pieces) {\r\n            const pieces = this.props.pieces;\r\n            this.groups = this.createGroups(pieces);\r\n            this.setState({ pieces }, () => this.clampPiecesToBoardBounds(this.state.scaleFactor));\r\n        } else {\r\n            const pieces = this.createPieces(scaleFactor);\r\n            this.groups = this.createGroups(pieces);\r\n            this.setState({ pieces });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    setScaleFactor() {\r\n        const widthScale = MAX_WIDTH_SCALE * document.documentElement.clientWidth / this.props.imgWidth;\r\n        const heightScale = MAX_HEIGHT_SCALE * document.documentElement.clientHeight / this.props.imgHeight;\r\n        const scaleFactor = Math.min(widthScale, heightScale);\r\n        this.setState({ scaleFactor });\r\n        return scaleFactor;\r\n    }\r\n\r\n    getBoardDimensions() {\r\n        // Return a dummy value if board not found? Or just let it throw an error?\r\n        const board = document.querySelector('.puzzle-background');\r\n        return { width: board.clientWidth, height: board.clientHeight };\r\n    }\r\n\r\n    clampPiecesToBoardBounds(scaleFactor) {\r\n        const dimensions = this.getBoardDimensions();\r\n        const maxBoundX = dimensions.width / scaleFactor - this.pieceWidth;\r\n        const maxBoundY = dimensions.height / scaleFactor - this.pieceHeight;\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        for (const [i, piece] of pieces.entries()) {\r\n            const group = this.groups.get(piece.group);\r\n            const xBound = maxBoundX - (this.innerWidth * (group.bounds[RIGHT] - piece.col));\r\n            const yBound = maxBoundY - (this.innerHeight * (group.bounds[BOTTOM] - piece.row));\r\n\r\n            pieces[i] = piece.clone();\r\n            pieces[i].displayPos = {\r\n                left: Math.min(piece.pos.left, xBound),\r\n                top: Math.min(piece.pos.top, yBound),\r\n            };\r\n        }\r\n        this.setState({ pieces });\r\n    }\r\n\r\n    getGridPosition(col, row, spacing) {\r\n        const left = (this.innerWidth + spacing) * col - this.borderSize;\r\n        const top = (this.innerHeight + spacing) * row - this.borderSize;\r\n        return { left, top };\r\n    }\r\n\r\n    getRandomPosition(scaleFactor) {\r\n        const dimensions = this.getBoardDimensions();\r\n\r\n        return dimensions.width > dimensions.height ? {\r\n            left: Math.random() * (.15 * dimensions.width / scaleFactor),\r\n            top: Math.random() * (dimensions.height / scaleFactor - this.pieceHeight),\r\n        } : {\r\n            left: Math.random() * (dimensions.width / scaleFactor - this.pieceWidth),\r\n            top: Math.random() * (.15 * dimensions.height) / scaleFactor,\r\n        };\r\n    }\r\n\r\n    // Gets the offset position (relative to the top left corner of the full puzzle image) for a piece at this row/column.\r\n    getPieceImageOffset(col, row) {\r\n        const left = -(this.innerWidth * col) + this.borderSize;\r\n        const top = -(this.innerHeight * row) + this.borderSize;\r\n        return { left, top };\r\n    }\r\n\r\n    createEdge(type) {\r\n        const neckWidth = this.borderSize * (.8 + Math.random() * .45);\r\n        const offset = this.borderSize * (.4 + Math.random() * .1);\r\n        const c1 = (neckWidth > this.borderSize) ? neckWidth * (.75 + Math.random() * .25)\r\n            : this.borderSize * (.85 + Math.random() * .35);\r\n        const c2 = neckWidth * (.5 + Math.random() * .15);\r\n        return new EdgeStyleInfo(type, neckWidth, offset, c1, c2);\r\n    }\r\n\r\n    createPieces(scaleFactor) {\r\n        const pieces = [];\r\n        const availableKeys = range(this.props.cols * this.props.rows);\r\n        // Use map() instead of fill() to ensure that each inner array is a unique object.\r\n        const keysByGridPos = Array(this.props.cols).fill(null).map(() => Array(this.props.rows));\r\n\r\n        for (let col = 0; col < this.props.cols; col++) {\r\n            for (let row = 0; row < this.props.rows; row++) {\r\n                const key = availableKeys.splice(randomInt(availableKeys.length), 1)[0];\r\n                keysByGridPos[col][row] = key;\r\n\r\n                // const pos = this.getGridPosition(col, row, 0);  // Arranges pieces in a grid instead of scattered randomly (for testing)\r\n                const pos = this.getRandomPosition(scaleFactor);\r\n                const imageOffset = this.getPieceImageOffset(col, row);\r\n\r\n                const neighbors = {};\r\n                if (col > 0) {\r\n                    neighbors[LEFT] = keysByGridPos[col - 1][row];\r\n                    pieces[neighbors[LEFT]].neighbors[RIGHT] = key;\r\n                }\r\n                if (row > 0) {\r\n                    neighbors[TOP] = keysByGridPos[col][row - 1];\r\n                    pieces[neighbors[TOP]].neighbors[BOTTOM] = key;\r\n                }\r\n\r\n                const edges = {\r\n                    [LEFT]: (col === 0) ? this.createEdge(FLAT) : pieces[neighbors[LEFT]].edges[RIGHT].opposite(),\r\n                    [TOP]: (row === 0) ? this.createEdge(FLAT) : pieces[neighbors[TOP]].edges[BOTTOM].opposite(),\r\n                    [RIGHT]: (col === this.props.cols - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType()),\r\n                    [BOTTOM]: (row === this.props.rows - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType()),\r\n                };\r\n\r\n                pieces[key] = new PieceModel(key, col, row, pos, imageOffset, 0, edges, neighbors);\r\n            }\r\n        }\r\n        return pieces;\r\n    }\r\n\r\n    createGroups(pieces) {\r\n        const groups = new Map();\r\n        pieces.forEach(piece => {\r\n            const group = groups.get(piece.group);\r\n            if (!group) {\r\n                groups.set(piece.group, new GroupModel(piece, piece.group));\r\n            } else {\r\n                group.addPiece(piece);\r\n            }\r\n        });\r\n        return groups;\r\n    }\r\n\r\n    alignPiece(piece, alignWith) {\r\n        piece.pos = {\r\n            left: alignWith.displayPos.left + this.innerWidth * (piece.col - alignWith.col),\r\n            top: alignWith.displayPos.top + this.innerHeight * (piece.row - alignWith.row)\r\n        };\r\n    }\r\n\r\n    isTouching(piece, side, other) {\r\n        const snapRange = 7 / this.state.scaleFactor;\r\n        if (side === RIGHT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((other.displayPos.left - piece.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === LEFT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((piece.displayPos.left - other.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === TOP) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((piece.displayPos.top - other.displayPos.top) - this.innerHeight) <= snapRange;\r\n        } else if (side === BOTTOM) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((other.displayPos.top - piece.displayPos.top) - this.innerHeight) <= snapRange;\r\n        }\r\n    }\r\n\r\n    mergeGroups(pieces, g1, g2) {\r\n        // First, update all the PieceModels in the group we're about to merge\r\n        const refPiece = pieces[this.groups.get(g1).pieces[0]];\r\n        for (const key of this.groups.get(g2).pieces) {\r\n            const p = pieces[key].clone();\r\n            p.group = g1;\r\n            p.zIndex = refPiece.zIndex;\r\n            this.alignPiece(p, refPiece);\r\n            pieces[key] = p;\r\n        }\r\n\r\n        // Then, merge the GroupModels\r\n        this.groups.get(g1).mergeWith(this.groups.get(g2));\r\n\r\n        this.groups.delete(g2);\r\n    }\r\n\r\n    handlePointerDown = (key, e) => {\r\n        if (this.state.draggedPiece !== null || !e.isPrimary || (e.pointerType === 'mouse' && e.button !== 0)) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups.get(groupKey).pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            pieces[k].zIndex = this.nextzIndex;\r\n            pieces[k].pos = pieces[k].displayPos;\r\n        }\r\n\r\n        this.nextzIndex++;\r\n\r\n        this.setState({\r\n            pieces,\r\n            draggedPiece: key,\r\n            offsetX: e.clientX - (pieces[key].pos.left * this.state.scaleFactor),\r\n            offsetY: e.clientY - (pieces[key].pos.top * this.state.scaleFactor)\r\n        });\r\n\r\n    };\r\n\r\n    handlePointerMove = (e) => {\r\n        if (this.state.draggedPiece === null || !e.isPrimary) {\r\n            return;\r\n        }\r\n\r\n        // Ignore events from touches that started within puzzle area but moved out of bounds\r\n        const hitElements = document.elementsFromPoint(e.clientX, e.clientY);\r\n        if (!hitElements.some(element => element.classList.contains('puzzle-area'))) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n\r\n        const draggedPiece = pieces[this.state.draggedPiece].clone();\r\n        pieces[this.state.draggedPiece] = draggedPiece;\r\n\r\n        const left = (e.clientX - this.state.offsetX) / this.state.scaleFactor;\r\n        const top = (e.clientY - this.state.offsetY) / this.state.scaleFactor;\r\n        draggedPiece.pos = { left, top };\r\n\r\n        const group = this.groups.get(draggedPiece.group);\r\n        for (const key of group.pieces) {\r\n            if (key !== this.state.draggedPiece) {\r\n                pieces[key] = pieces[key].clone();\r\n                this.alignPiece(pieces[key], draggedPiece);\r\n            }\r\n        }\r\n        this.setState({ pieces });\r\n    };\r\n\r\n    handlePointerUp = () => {\r\n        if (this.state.draggedPiece === null) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n\r\n        const groupKey = pieces[this.state.draggedPiece].group;\r\n        for (const key of this.groups.get(groupKey).pieces) {\r\n            const p = pieces[key];\r\n            for (const side of Sides) {\r\n                const neighbor = pieces[p.neighbors[side]];\r\n                if (neighbor && neighbor.group !== p.group && this.isTouching(p, side, neighbor)) {\r\n                    this.mergeGroups(pieces, p.group, neighbor.group);\r\n                }\r\n            }\r\n        }\r\n\r\n        const gameComplete = this.groups.size === 1;\r\n        this.setState({ pieces, gameComplete, draggedPiece: null });\r\n    };\r\n\r\n    handleResize = () => {\r\n        const scaleFactor = this.setScaleFactor();\r\n        this.clampPiecesToBoardBounds(scaleFactor);\r\n    };\r\n\r\n    // Exports state needed to save the game.\r\n    getGameState = () => {\r\n        return this.state.pieces;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PuzzleBoard\r\n                imgUrl={this.props.imgUrl}\r\n                imgWidth={this.props.imgWidth}\r\n                imgHeight={this.props.imgHeight}\r\n                pieceWidth={this.pieceWidth}\r\n                pieceHeight={this.pieceHeight}\r\n                borderSize={this.borderSize}\r\n                scaleFactor={this.state.scaleFactor}\r\n                gameComplete={this.state.gameComplete}\r\n                pieces={this.state.pieces}\r\n                draggedPiece={this.state.draggedPiece}\r\n                getBoardDimensions={this.getBoardDimensions}\r\n                onPointerMove={this.handlePointerMove}\r\n                onPointerUp={this.handlePointerUp}\r\n                pointerDownHandlers={this.pointerDownHandlers} />\r\n        );\r\n    }\r\n}","export class ImageInfo {\r\n    // type: 'preset' | 'unsplash' | 'user'\r\n    constructor(type, name, url, defaultRows, defaultCols, author, source, shortName) {\r\n        this.type = type;\r\n        this.name = name;\r\n        this.url = url;\r\n        this.defaultRows = defaultRows;\r\n        this.defaultCols = defaultCols;\r\n        this.author = author;\r\n        this.source = source;\r\n        this.shortName = shortName ?? name;\r\n    }\r\n}\r\n\r\nexport class ImageSource {\r\n    constructor(sourceName, nameIsTitle = false, isPhoto = false, sourceUrl = '', description = '') {\r\n        this.sourceName = sourceName;\r\n        this.nameIsTitle = nameIsTitle;\r\n        this.sourceUrl = sourceUrl;\r\n        this.isPhoto = isPhoto;\r\n        this.description = description;\r\n    }\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ErrorInfo {\r\n    constructor(type, statusCode, details) {\r\n        this.type = type;\r\n        this.statusCode = statusCode;\r\n        this.details = details;\r\n    }\r\n}\r\n\r\nexport default class ImageSearchModalErrorMessage extends Component {\r\n    getErrorDisplay() {\r\n        const err = this.props.error;\r\n        if (err.statusCode === 429 && err.type === 'upstream') {\r\n            return {\r\n                title: 'Rate limit exceeded (API)',\r\n                text: (<>\r\n                    <p>The hourly limit for requests from this site to the Unsplash server has been reached.</p>\r\n                    <p>Feel free to <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                        {' '}to let me know - <br />if this happens often, I can look into applying for a higher rate limit.</p>\r\n                </>)\r\n            };\r\n        } else if (err.statusCode === 429 && err.type === 'proxy') {\r\n            return {\r\n                title: 'Rate limit exceeded (API Proxy)',\r\n                text: (<p>Please try again in a moment.<br />(If you get this error frequently, feel free to {' '}\r\n                    <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                    {' '}and let me know.)</p>)\r\n            };\r\n        } else {\r\n            const errInfo = err.type === 'network' ? 'Network error' : `Status code ${err.statusCode} (${err.type})`;\r\n            const errDetails = err.details ? ' - ' + err.details : null;\r\n            return {\r\n                title: 'Something went wrong :0',\r\n                text: (<>\r\n                    <p><small className=''>Error details: {errInfo}{errDetails}</small></p>\r\n                    <p>Please try again. If you keep getting an error, feel free to {' '}\r\n                        <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                        {' '}and let me know.</p>\r\n                </>)\r\n            };\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.error) {\r\n            return null;\r\n        }\r\n\r\n        const errDisplay = this.getErrorDisplay();\r\n        return (\r\n            <div className='search-error alert alert-warning text-center' role='alert'>\r\n                <h6 className='alert-heading'>{errDisplay.title}</h6>\r\n                {errDisplay.text}\r\n                <p className='mt-n2'>\r\n                    You can still search photos directly on <a href='https://unsplash.com/' target='_blank' rel='external noreferrer'>Unsplash.com</a>,\r\n                    {' '}download an image to your computer, and load it using the file selector.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModalErrorMessage.propTypes = {\r\n    error: PropTypes.instanceOf(ErrorInfo),\r\n};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ImageSearchModalResults extends Component {\r\n    handleImageClick(index) {\r\n        this.props.chooseImage(this.props.images[this.props.page][index]);\r\n    }\r\n\r\n    handleKeyDown(index, e) {\r\n        if ((e.key === 'Enter' || e.key === 'Space') && e.target.tagName !== 'A') {\r\n            this.props.chooseImage(this.props.images[this.props.page][index]);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    // TODO: redo with better semantic markup\r\n    renderImage(img, index) {\r\n        const isSelected = this.props.selectedImage === img;\r\n        return (\r\n            <div data-testid='result' className={'result-container mb-2'} key={img.id} tabIndex='0'\r\n                onClick={() => this.handleImageClick(index)} onKeyDown={(e) => this.handleKeyDown(index, e)}>\r\n                <div className={`result ${isSelected ? 'result-selected' : ''}`}>\r\n                    <div className='placeholder' style={{ paddingTop: (img.height / img.width) * 100 + '%' }}>\r\n                        <img src={img.urls.small} alt={img.alt_description} />\r\n                        <span className='badge badge-dark'>\r\n                            By <a className='text-light' href={img.user.links.html} rel='external noreferrer' target='_blank'>{img.user.name}</a>\r\n                            {' '}on <a className='text-light' href={img.links.html} rel='external noreferrer' target='_blank'>Unsplash</a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const images = this.props.images[this.props.page];\r\n\r\n        const initialText = <div className='text-secondary'>Image results will go here, and it will be very cool.</div>;\r\n        const noResultsText = <div className='text-secondary'>No results found. :(</div>;\r\n        const spinner = (\r\n            <div className='spinner-border my-1' role='status'>\r\n                <span className='sr-only'>Loading...</span>\r\n            </div>);\r\n\r\n        return (\r\n            <div className='search-results-container text-center'>\r\n                {!this.props.isLoading && !images ? initialText : null}\r\n                {!this.props.isLoading && images && images.length === 0 ? noResultsText : null}\r\n                {this.props.isLoading ? spinner : null}\r\n                <div className='search-results'>\r\n                    {images?.map((img, index) => this.renderImage(img, index))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModalResults.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)),\r\n    page: PropTypes.number,\r\n    isLoading: PropTypes.bool,\r\n    selectedImage: PropTypes.object,\r\n    chooseImage: PropTypes.func,\r\n};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Pagination extends Component {\r\n    handleNavigate(e, newPage) {\r\n        e.preventDefault();\r\n        if (this.props.onPageChange) {\r\n            this.props.onPageChange(newPage);\r\n        }\r\n    }\r\n\r\n    renderPageLinks() {\r\n        const links = [];\r\n\r\n        const start = this.props.currentPage - this.props.numPageLinks - 1;\r\n        const end = this.props.currentPage + this.props.numPageLinks + 1;\r\n\r\n        if (start >= this.props.minPage) {\r\n            links.push(<li key={start}><span className='btn' style={{ cursor: 'default' }}>...</span></li>);\r\n        } else {\r\n            links.push(<li key={start} className='invisible'></li>);\r\n        }\r\n\r\n        for (let i = start + 1; i < end; i++) {\r\n            let content = null;\r\n            if (i === this.props.currentPage) {\r\n                content = <span className='btn' style={{ cursor: 'default' }}>{i}</span>;\r\n            }\r\n            else if (i >= this.props.minPage && i <= this.props.maxPage) {\r\n                content = <button className='btn btn-link' type='button' onClick={(e) => this.handleNavigate(e, i)}>{i}</button>;\r\n            }\r\n            links.push(<li className={!content ? 'invisible' : null} key={i}>{content}</li>);\r\n        }\r\n\r\n        if (end <= this.props.maxPage) {\r\n            links.push(<li key={end}><span className='btn' style={{ cursor: 'default' }}>...</span></li>);\r\n        } else {\r\n            links.push(<li key={end} className='invisible'></li>);\r\n        }\r\n\r\n        return <ul>{links}</ul>;\r\n    }\r\n\r\n    render() {\r\n        const { currentPage, minPage, maxPage, numPageLinks, onPageChange, className, ariaLabel, ...customAttributes } = this.props;\r\n\r\n        const outerClassName = 'custom-pagination container ' + (className || '');\r\n        const outerAriaLabel = ariaLabel || 'Search results pages';\r\n\r\n        const isFirst = currentPage <= minPage;\r\n        const isLast = currentPage >= maxPage;\r\n\r\n        const pageLinks = this.renderPageLinks();\r\n\r\n        return (\r\n            <nav className={outerClassName} aria-label={outerAriaLabel} {...customAttributes}>\r\n                <div className='row justify-content-between align-items-center'>\r\n                    <div className='col-auto p-0'>\r\n                        <button className={'btn btn-link' + (isFirst ? ' invisible' : '')} type='button'\r\n                            onClick={isFirst ? null : (e) => this.handleNavigate(e, currentPage - 1)}>\r\n                            {'< Back'}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='col-auto'>\r\n                        {pageLinks}\r\n                    </div>\r\n\r\n                    <div className='col-auto p-0'>\r\n                        <button className={'btn btn-link' + (isLast ? ' invisible' : '')} type='button'\r\n                            onClick={isLast ? null : (e) => this.handleNavigate(e, currentPage + 1)}>\r\n                            {'More >'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n// In addition to the listed types, any unrecognized props will be added as attributes to the outer <nav> DOM node,\r\n// to allow for customization\r\nPagination.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    minPage: PropTypes.number,\r\n    maxPage: PropTypes.number,\r\n    numPageLinks: PropTypes.number,  // The number of page links shown on either side of the current page number\r\n    onPageChange: PropTypes.func,    // Callback raised when a page link is clicked; it is given one parameter, the page number to navigate to\r\n    className: PropTypes.string,     // An optional class string to append to the default classes\r\n    ariaLabel: PropTypes.string,     // An optional label string to replace the default aria-label\r\n};\r\n\r\nPagination.defaultProps = {\r\n    minPage: 1,\r\n    maxPage: Number.MAX_SAFE_INTEGER,\r\n    numPageLinks: 1,\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { clamp, isEmptyOrWhitespace } from '../util.js';\r\nimport { ImageInfo, ImageSource } from './ImageInfo.js';\r\nimport ImageSearchModalErrorMessage, { ErrorInfo } from './ImageSearchModalErrorMessage.js';\r\nimport ImageSearchModalResults from './ImageSearchModalResults.js';\r\nimport Pagination from './Pagination.js';\r\n\r\nimport './ImageSearchModal.css';\r\n\r\nconst MAX_SEARCH_PAGES = 10;\r\n\r\nexport default class ImageSearchModal extends Component {\r\n    proxyUrl = process.env.REACT_APP_PROXY_URL;\r\n\r\n    searchBoxRef = React.createRef();\r\n\r\n    // Note: The page count starts from 1, but the images array is zero-indexed,\r\n    // so make sure to subtract 1 when using this.state.page to access the images array.\r\n    state = {\r\n        images: [],\r\n        page: 1,\r\n        maxPage: 1,\r\n        searchString: '',\r\n        isSearchStringValid: true,\r\n        isSearchLoading: false,\r\n        error: null,\r\n        selectedImage: null,\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ searchString: e.target.value });\r\n    };\r\n\r\n    handleInputKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.handleSearchButtonClick();\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    handlePageChange = (newPage) => {\r\n        if (this.state.isSearchLoading) {\r\n            return;\r\n        }\r\n\r\n        newPage = Math.floor(newPage);\r\n        newPage = clamp(newPage, 1, MAX_SEARCH_PAGES);\r\n\r\n        // Supposedly scrollIntoView() doesn't work with CSS 'scroll-behavior: smooth' on Chrome/Edge,\r\n        // but in manual testing it seems to be working?\r\n        requestAnimationFrame(() => this.searchBoxRef.current.scrollIntoView());\r\n\r\n        // (Could use scrollTo() or scrollTop as an alternative:)\r\n        // requestAnimationFrame(() => this.modalRef.current.querySelector('.modal-body').scrollTo(0, 0));\r\n        // requestAnimationFrame(() => this.modalRef.current.querySelector('.modal-body').scrollTop = 0);\r\n\r\n        if (!this.state.images[newPage - 1]) {\r\n            this.searchImages(newPage);\r\n        } else {\r\n            this.setState({ page: newPage });\r\n        }\r\n    };\r\n\r\n    handleSearchButtonClick = () => {\r\n        this.setState({ images: [] }, () => this.searchImages(1));\r\n    };\r\n\r\n    handleChooseButtonClick = () => {\r\n        this.chooseImage();\r\n        this.props.toggleModal();\r\n    };\r\n\r\n    selectImage = (image) => {\r\n        this.setState({ selectedImage: image });\r\n    };\r\n\r\n    getSearchUrl(query, page) {\r\n        return `${this.proxyUrl}/search/${encodeURIComponent(query)}/page/${page}`;\r\n    }\r\n\r\n    getDownloadUrl(photoId) {\r\n        return `${this.proxyUrl}/download/${photoId}`;\r\n    }\r\n\r\n    addImages(newImages, page, totalPages) {\r\n        const images = this.state.images.slice();\r\n        images[page - 1] = newImages;\r\n\r\n        const maxPage = Math.min(totalPages, MAX_SEARCH_PAGES);\r\n\r\n        this.setState({ images, page, maxPage });\r\n    }\r\n\r\n    chooseImage() {\r\n        const img = this.state.selectedImage;\r\n\r\n        // Note: This passes in the raw image dimensions, while the used image is likely to be smaller (1080px) -\r\n        // which is fine as long as generateDefaultDimensions only uses the aspect ratio, but that could change in the future.\r\n        const dim = this.props.generateDefaultDimensions(img.width, img.height);\r\n\r\n        this.props.setImage(new ImageInfo('unsplash', `Unsplash Photo (${img.id})`, img.urls.regular, dim.rows, dim.cols, img.user.name,\r\n            new ImageSource('Unsplash', false, true, img.links.html)));\r\n\r\n        this.trackDownload(img.id);\r\n    }\r\n\r\n    validateQuery(query) {\r\n        const isValid = query && !isEmptyOrWhitespace(query);\r\n        this.setState({ isSearchStringValid: isValid });\r\n        return isValid;\r\n    }\r\n\r\n    searchImages(page) {\r\n        const query = this.state.searchString;\r\n        if (!this.validateQuery(query)) {\r\n            return;\r\n        }\r\n\r\n        // console.log('Searching: ' + query);\r\n        this.setState({ isSearchLoading: true });\r\n\r\n        fetch(this.getSearchUrl(query, page)).then(response => {\r\n            if (!response.ok) {\r\n                console.warn(`Proxy server returned an error: ${response.status}, ${response.statusText}`);\r\n                this.setState({ error: new ErrorInfo('proxy', response.status, response.statusText) });\r\n                throw new Error(`Failed response: ${response.status}, ${response.statusText}`);\r\n            }\r\n            return response.json();\r\n        }).then(upstreamResponse => {\r\n            // console.log(upstreamResponse);\r\n\r\n            if (upstreamResponse.errors) {\r\n                console.warn(`Upstream server returned an error (status code ${upstreamResponse.status}):\r\n                    ${upstreamResponse.errors.join(', ')}`);\r\n                this.setState({ error: new ErrorInfo('upstream', upstreamResponse.status, upstreamResponse.errors.join(', ')) });\r\n                throw new Error(`Upstream failed response (status code ${upstreamResponse.status}):\r\n                    ${upstreamResponse.errors.join(', ')}`);\r\n            }\r\n\r\n            this.setState({ error: null });\r\n            this.addImages(upstreamResponse.response.results, page, upstreamResponse.response.total_pages);\r\n        }).catch(err => {\r\n            if (err instanceof TypeError) {\r\n                this.setState({ error: new ErrorInfo('network') });\r\n            }\r\n            console.warn(`${err.name}: ${err.message}`);\r\n        }).finally(() => {\r\n            this.setState({ isSearchLoading: false });\r\n        });\r\n    }\r\n\r\n    trackDownload(photoId) {\r\n        fetch(this.getDownloadUrl(photoId)).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error(`${response.status} ${response.statusText}`);\r\n            }\r\n        }).then(upstreamResponse => {\r\n            if (upstreamResponse.type === 'success') {\r\n                // console.log(`Image ${photoId} download notified successfully.`);\r\n                // console.log(upstreamResponse)\r\n            } else {\r\n                throw new Error(`${upstreamResponse.status} - ${upstreamResponse.errors.join(', ')} (upstream)`);\r\n            }\r\n        }).catch(err =>\r\n            console.warn(`Image ${photoId} download failed. Error:`, err.message)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const hasResults = this.state.images[this.state.page - 1] && this.state.images[this.state.page - 1].length > 0;\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} scrollable={true} size='lg' centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Find images</ModalHeader>\r\n\r\n                <ModalBody>\r\n                    <p>Browse images from Unsplash.com by searching below.</p>\r\n\r\n                    <div className={`form-group row mx-0`} ref={this.searchBoxRef}>\r\n                        <label className='col-form-label mr-2' htmlFor='img-search-input'>Search by keyword</label>\r\n                        <input className={`col col-lg-4 form-control ${!this.state.isSearchStringValid ? 'is-invalid' : ''} px-2 mr-2`}\r\n                            id='img-search-input' type='text' value={this.state.searchString} aria-describedby='searchValidationFeedback'\r\n                            onKeyDown={this.handleInputKeyDown} onChange={this.handleInputChange} />\r\n                        <button className='btn btn-dark mr-auto' type='button' onClick={this.handleSearchButtonClick}>Search</button>\r\n                        <div className='w-100 d-lg-none'></div>\r\n                        <div className='col invalid-feedback align-self-center' id='searchValidationFeedback'>\r\n                            Please enter a search term.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ImageSearchModalErrorMessage error={this.state.error} />\r\n\r\n                    <ImageSearchModalResults images={this.state.images} page={this.state.page - 1} isLoading={this.state.isSearchLoading}\r\n                        selectedImage={this.state.selectedImage} chooseImage={this.selectImage} />\r\n                </ModalBody>\r\n\r\n                <ModalFooter className='flex-sm-nowrap'>\r\n                    {hasResults ?\r\n                        <Pagination className='mr-sm-3'\r\n                            currentPage={this.state.page}\r\n                            maxPage={this.state.maxPage}\r\n                            onPageChange={this.handlePageChange} />\r\n                        : null}\r\n\r\n                    <button className='btn btn-dark flex-shrink-0' type='button' disabled={!this.state.selectedImage}\r\n                        onClick={this.handleChooseButtonClick}>\r\n                        Use selected image\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModal.propTypes = {\r\n    // The ImageSearchModal will call this with a new ImageInfo object when the user selects an image to use from the search.\r\n    setImage: PropTypes.func.isRequired,\r\n    // Calculates default puzzle dimensions (rows+columns) from an image's width and height.\r\n    generateDefaultDimensions: PropTypes.func.isRequired,\r\n    // A function the modal can call to close itself.\r\n    toggleModal: PropTypes.func.isRequired,\r\n    // Whether the modal should be shown.\r\n    isOpen: PropTypes.bool.isRequired,\r\n};","export default __webpack_public_path__ + \"static/media/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.a8f36cd5.jpg\";","export default __webpack_public_path__ + \"static/media/david-clode-eOSqRq2Qm1c-unsplash.42540cb6.jpg\";","export default __webpack_public_path__ + \"static/media/casey-horner-80UR4DM2Rz0-unsplash.001ae9f7.jpg\";","export default __webpack_public_path__ + \"static/media/van-gogh-roses-nga.8fa9d120.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-lYzgtps0UtQ-unsplash.509dd0a5.jpg\";","export default __webpack_public_path__ + \"static/media/travel-sourced-FsmcD6uKcHk-unsplash.97041d06.jpg\";","import { ImageInfo, ImageSource } from './ImageInfo';\r\n\r\nimport img1 from './images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg';\r\nimport img2 from './images/david-clode-eOSqRq2Qm1c-unsplash.jpg';\r\nimport img3 from './images/casey-horner-80UR4DM2Rz0-unsplash.jpg';\r\nimport img4 from './images/van-gogh-roses-nga.jpg';\r\nimport img5 from './images/scott-webb-lYzgtps0UtQ-unsplash.jpg';\r\nimport img6 from './images/travel-sourced-FsmcD6uKcHk-unsplash.jpg';\r\n\r\nconst providedImages = [\r\n    new ImageInfo('preset', 'Red Parrot on the Branch of a Tree', img1, 6, 8, 'Itō Jakuchū',\r\n        new ImageSource('Metropolitan Museum of Art', true, false, 'https://www.metmuseum.org/art/collection/search/57123'), 'Red Parrot'),\r\n    new ImageInfo('preset', 'Coral', img2, 7, 10, 'David Clode',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/eOSqRq2Qm1c')),\r\n    new ImageInfo('preset', 'Starry Sky', img3, 7, 10, 'Casey Horner',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/80UR4DM2Rz0')),\r\n    new ImageInfo('preset', 'Roses', img4, 8, 10, 'Vincent van Gogh',\r\n        new ImageSource('National Gallery of Art', true, false, 'https://www.nga.gov/collection/art-object-page.72328.html')),\r\n    new ImageInfo('preset', 'Succulents', img5, 8, 5, 'Scott Webb',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/lYzgtps0UtQ')),\r\n    new ImageInfo('preset', 'Jellyfish', img6, 7, 10, 'Travel Sourced',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/FsmcD6uKcHk'))\r\n];\r\n\r\nexport default providedImages;","import React, { Component } from 'react';\r\nimport { CustomInput, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport ImageSearchModal from './ImageSearchModal.js';\r\nimport { ImageInfo } from './ImageInfo';\r\nimport { clamp } from '../util';\r\nimport presetImages from './presetImages';\r\n\r\nimport './ImagePicker.css';\r\n\r\nexport default class ImagePicker extends Component {\r\n    fileInput = React.createRef();\r\n\r\n    selectedPreset = presetImages[0];\r\n    userImage = null;\r\n\r\n    state = {\r\n        selectedOption: 'preset0',\r\n        usingUserImage: false,\r\n        invalidUserImage: false,\r\n        unsplashImage: null,\r\n        modalOpen: false,\r\n    };\r\n\r\n    usePresetImage = () => {\r\n        this.setState({ usingUserImage: false });\r\n        this.props.setSelectedImage(this.selectedPreset);\r\n    };\r\n\r\n    useUserImage = () => {\r\n        this.setState({ usingUserImage: true });\r\n        this.props.setSelectedImage(this.userImage);\r\n    };\r\n\r\n    setPresetImage = (image) => {\r\n        this.selectedPreset = image;\r\n        this.props.setSelectedImage(image);\r\n    };\r\n\r\n    setUnsplashImage = (image) => {\r\n        this.setState({ unsplashImage: image, selectedOption: 'unsplash' });\r\n        this.setPresetImage(image);\r\n    };\r\n\r\n    // Maintain arrow key navigation between the radio buttons even though they aren't\r\n    // actually part of the same radio group (so that they can be separate tab stops).\r\n    handleRadioKeyDown = (e) => {\r\n        switch (e.key) {\r\n            case 'ArrowLeft':\r\n            case 'ArrowUp':\r\n                if (e.target.id === 'radioBtn2') {\r\n                    document.getElementById('radioBtn1').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n            case 'ArrowRight':\r\n            case 'ArrowDown':\r\n                if (e.target.id === 'radioBtn1') {\r\n                    document.getElementById('radioBtn2').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    handleSelectChange = (e) => {\r\n        this.usePresetImage();\r\n\r\n        const select = e.target;\r\n        if (select.selectedIndex === select.length - 1) {\r\n            this.toggleModal();\r\n        } else if (select.selectedIndex === select.length - 2 && this.state.unsplashImage) {\r\n            this.setPresetImage(this.state.unsplashImage);\r\n            this.setState({ selectedOption: 'unsplash' });\r\n        } else if (select.selectedIndex !== -1) {\r\n            this.setPresetImage(presetImages[select.selectedIndex]);\r\n            this.setState({ selectedOption: 'preset' + select.selectedIndex });\r\n        }\r\n    };\r\n\r\n    handleFileChange = () => {\r\n        this.useUserImage();\r\n\r\n        const file = this.fileInput.current.files[0];\r\n        const fileUrl = URL.createObjectURL(file);\r\n\r\n        const testLoader = new Image();\r\n        testLoader.onerror = () => {\r\n            URL.revokeObjectURL(fileUrl);\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            this.userImage = null;\r\n            this.setState({ invalidUserImage: true });\r\n            this.props.setSelectedImage(null);\r\n        };\r\n        testLoader.onload = () => {\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            const dim = this.generateDefaultDimensions(testLoader.naturalWidth, testLoader.naturalHeight);\r\n            this.userImage = new ImageInfo('user', file.name, fileUrl, dim.rows, dim.cols);\r\n            this.setState({ invalidUserImage: false });\r\n            this.props.setSelectedImage(this.userImage);\r\n        };\r\n        testLoader.src = fileUrl;\r\n    };\r\n\r\n    // Tries to choose a good default based on the image aspect ratio;\r\n    // could go further and tailor the target rows+columns to the viewport size\r\n    generateDefaultDimensions = (width, height) => {\r\n        const target = 12;\r\n        const minBound = this.props.minPuzzleDimension;\r\n        const aspect = width / height;\r\n\r\n        // cols = (width / height) * rows\r\n        // cols + rows = target\r\n        const rows = clamp(Math.round(target / (aspect + 1)), minBound, target - minBound);\r\n        const cols = target - rows;\r\n\r\n        return { rows, cols };\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState({ modalOpen: !this.state.modalOpen });\r\n    };\r\n\r\n    renderSelectOptions() {\r\n        const options = [];\r\n        for (let i = 0; i < presetImages.length; i++) {\r\n            const img = presetImages[i];\r\n            options.push(<option key={i} value={'preset' + i}>{img.shortName}</option>);\r\n        }\r\n        options.push(<option key={-1} disabled>―――――――</option>);\r\n        if (this.state.unsplashImage) {\r\n            options.push(<option key={-2} value={'unsplash'}>{`Unsplash photo by ${this.state.unsplashImage.author}`}</option>);\r\n        }\r\n        options.push(<option key={-3}>More...</option>);\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const presetBtnStyle = this.state.usingUserImage ? 'btn-outline-dark' : 'btn-dark';\r\n        const userBtnStyle = this.state.usingUserImage ? 'btn-dark' : 'btn-outline-dark';\r\n\r\n        return (\r\n            <>\r\n                <div className='input-group'>\r\n                    <div className='input-group-prepend col-12 col-lg-6 pr-lg-0'>\r\n                        <div className={`btn ${presetBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.usePresetImage}>\r\n                            <input readOnly className='col-auto' id='radioBtn1' type='radio'\r\n                                checked={!this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown} />\r\n                            <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn1'>Choose an image:</label>\r\n                            <div className='w-100 d-sm-none'></div>\r\n                            <label className='sr-only' htmlFor='puzzle-image-select'>Select image</label>\r\n                            <select className='custom-select col' id='puzzle-image-select' value={this.state.selectedOption} onChange={this.handleSelectChange}>\r\n                                {this.renderSelectOptions()}\r\n                            </select>\r\n                            <button className='btn btn-link p-0 ml-2' type='button' aria-label='Find more images' style={{ color: 'inherit' }} onClick={this.toggleModal}>\r\n                                <i className='bi-search icon-lg'></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='input-group-append col-12 col-lg-6 pl-lg-0'>\r\n                        <div className={`btn ${userBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.useUserImage}>\r\n                            <input readOnly className='col-auto order-first order-lg-last ml-lg-3' id='radioBtn2' type='radio'\r\n                                checked={this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown} />\r\n                            <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn2'>Or use your own:</label>\r\n                            <div className='w-100 d-sm-none'></div>\r\n                            <CustomInput className='col text-left' id='file-input' type='file' accept='image/*' innerRef={this.fileInput}\r\n                                invalid={this.state.invalidUserImage} onChange={this.handleFileChange} />\r\n                            <button className='btn btn-link p-0 ml-2' id='show-tooltip' type='button' style={{ color: 'inherit' }}\r\n                                onClick={(e) => { e.preventDefault(); e.stopPropagation(); }}>\r\n                                <i className='bi-info-circle icon-lg'></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <UncontrolledTooltip placement='top' target='show-tooltip'>\r\n                    Images are only used locally in your browser and are never uploaded or sent over the Internet.\r\n                </UncontrolledTooltip>\r\n\r\n                <ImageSearchModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} setImage={this.setUnsplashImage} generateDefaultDimensions={this.generateDefaultDimensions} />\r\n            </>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\nexport default class SettingsModal extends Component {\r\n    state = {\r\n        color: null,\r\n        saveComplete: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const color = document.documentElement.style.getPropertyValue('--puzzle-bg');\r\n        this.setState({ color: color !== '' ? color : '#adb5bd' });\r\n    }\r\n\r\n    handleOpened = () => {\r\n        this.setState({ saveComplete: false });\r\n    };\r\n\r\n    handleDimensionsChange = (e) => {\r\n        this.props.setDimension(e.target.name, e.target.valueAsNumber);\r\n    };\r\n\r\n    handleDimensionsBlur = (e) => {\r\n        this.props.setDimension(e.target.name, this.validateDimension(e.target.value));\r\n    };\r\n\r\n    handleColorChange = (e) => {\r\n        const color = e.target.value;\r\n        this.setState({ color: color });\r\n        document.documentElement.style.setProperty('--puzzle-bg', color);\r\n    };\r\n\r\n    handleSave = async () => {\r\n        this.setState({ saveComplete: false });\r\n        const success = await this.props.saveGame();\r\n        this.setState({ saveComplete: success });\r\n    };\r\n\r\n    validateDimension(val) {\r\n        let result = parseInt(val, 10);\r\n        if (isNaN(result) || result < this.props.minPuzzleDimension) {\r\n            result = this.props.minPuzzleDimension;\r\n        } else if (result > this.props.maxPuzzleDimension) {\r\n            result = this.props.maxPuzzleDimension;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const rowsVal = isNaN(this.props.rows) ? '' : this.props.rows;\r\n        const colsVal = isNaN(this.props.cols) ? '' : this.props.cols;\r\n\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} onOpened={this.handleOpened} centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Settings</ModalHeader>\r\n                <ModalBody>\r\n                    <form className='container'>\r\n                        <div className='row mb-2'>\r\n                            <span>Options</span>\r\n                        </div>\r\n\r\n                        <div className='form-group row mb-4 pl-3'>\r\n                            <label className='col-form-label mr-2 my-2' htmlFor='row-input'>Rows:</label>\r\n                            <input className='mr-2 my-2' id='row-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension}\r\n                                name='rows' value={rowsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur} />\r\n\r\n                            <label className='col-form-label mr-2 my-2' htmlFor='col-input'>Columns:</label>\r\n                            <input className='mr-2 my-2' id='col-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension}\r\n                                name='cols' value={colsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur} />\r\n\r\n                            <small className='col-12 col-sm pl-0 pl-sm-3 text-muted'>\r\n                                Changes to rows and columns take effect the next time you start a new puzzle.\r\n                            </small>\r\n                        </div>\r\n\r\n                        <div className='form-group row mb-4 pl-3'>\r\n                            <label className='col-auto col-form-label pl-0' htmlFor='color-input'>Background color:</label>\r\n                            <Input className='col' id='color-input' type='color' value={this.state.color} onChange={this.handleColorChange} />\r\n                        </div>\r\n\r\n                        <div className='row mb-2'>\r\n                            <span className='col-auto col-form-label pl-0'>Save</span>\r\n                        </div>\r\n\r\n                        <div className='form-group row mb-4 px-3 align-items-center'>\r\n                            <button className='btn btn-dark col col-sm-auto mb-2 mb-sm-0' type='button' onClick={this.handleSave}>\r\n                                Save now\r\n                            </button>\r\n\r\n                            <small className='col-12 col-sm pl-0 pl-sm-3 text-muted'>\r\n                                Data is saved locally in your browser. It will be deleted if you clear your browser's local storage for this site.\r\n                            </small>\r\n\r\n                            {this.state.saveComplete &&\r\n                                <small className='col-12 text-success text-right'>\r\n                                    Saved <i className='bi bi-check'></i>\r\n                                </small>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='form-group row mb-4 px-3 align-items-center'>\r\n                            <button className='btn btn-outline-dark col col-sm-auto mb-2 mb-sm-0' type='button' onClick={this.props.loadGame}>\r\n                                Load last saved puzzle\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className='form-group row justify-content-end'>\r\n                            <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.props.toggleModal}>Done</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\n\r\nimport ImagePicker from './ImagePicker';\r\nimport SettingsModal from './SettingsModal';\r\nimport presetImages from './presetImages';\r\n\r\nconst minPuzzleDimension = 2;\r\nconst maxPuzzleDimension = 25;\r\n\r\nexport default class PuzzleControls extends Component {\r\n    state = {\r\n        modalOpen: false,\r\n        selectedImage: presetImages[0],\r\n        rows: presetImages[0].defaultRows,\r\n        cols: presetImages[0].defaultCols\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.newPuzzle();\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState((state) => { return { modalOpen: !state.modalOpen }; });\r\n    };\r\n\r\n    setSelectedImage = (selectedImage) => {\r\n        if (selectedImage !== this.state.selectedImage) {\r\n            const rows = selectedImage?.defaultRows ?? this.state.rows;\r\n            const cols = selectedImage?.defaultCols ?? this.state.cols;\r\n            this.setState({ selectedImage, rows, cols });\r\n        }\r\n    };\r\n\r\n    setDimension = (name, val) => {\r\n        this.setState({ [name]: val });\r\n    };\r\n\r\n    newPuzzle = () => {\r\n        if (!this.state.selectedImage) {\r\n            return;\r\n        }\r\n\r\n        const img = this.state.selectedImage;\r\n        document.documentElement.style.setProperty('--puzzle-img', `url(${img.url})`);\r\n\r\n        const sizeTester = new Image();\r\n        sizeTester.onerror = () => console.log(\"Failed to load image\");\r\n        sizeTester.onload = () => this.props.newPuzzle(\r\n            sizeTester.naturalWidth,\r\n            sizeTester.naturalHeight,\r\n            this.state.rows,\r\n            this.state.cols,\r\n            img\r\n        );\r\n        sizeTester.src = img.url;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='container mt-4'>\r\n                <div className='row mb-3'>\r\n                    <ImagePicker setSelectedImage={this.setSelectedImage} minPuzzleDimension={minPuzzleDimension} />\r\n                </div>\r\n\r\n                <div className='row justify-content-center align-items-end mx-n1'>\r\n                    <div className='col d-none d-md-block px-2'></div>\r\n\r\n                    <div className='col-auto px-2'>\r\n                        <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.newPuzzle} disabled={!this.state.selectedImage}>\r\n                            New puzzle\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='col-auto col-md px-2'>\r\n                        <button className='btn btn-outline-dark' type='button' onClick={this.toggleModal}>\r\n                            <i className='bi bi-gear-fill pr-2'></i>Settings\r\n                        </button>\r\n                    </div>\r\n\r\n                    <SettingsModal\r\n                        toggleModal={this.toggleModal}\r\n                        saveGame={this.props.savePuzzle}\r\n                        loadGame={this.props.loadPuzzle}\r\n                        isOpen={this.state.modalOpen}\r\n                        rows={this.state.rows}\r\n                        cols={this.state.cols}\r\n                        setDimension={this.setDimension}\r\n                        minPuzzleDimension={minPuzzleDimension}\r\n                        maxPuzzleDimension={maxPuzzleDimension}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// Used for saving and loading puzzles.\r\n\r\nexport default class PuzzleState {\r\n    // pieces: PieceModel[]\r\n    constructor(pieces, rows, cols, imageWidth, imageHeight, imageInfo) {\r\n        this.pieces = pieces;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n        this.imageWidth = imageWidth;\r\n        this.imageHeight = imageHeight;\r\n        this.imageInfo = imageInfo;\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n\r\nexport default class DetailsModal extends Component {\r\n    render() {\r\n        const image = this.props.image;\r\n\r\n        let body = '';\r\n        if (image && image.source) {\r\n            const credit = (image.source.nameIsTitle ? image.name : 'Photo') + ' by ' + image.author;\r\n            body = (\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md='8'><img src={image.url} alt='Thumbnail' width='100%' /></Col>\r\n                        <Col md='4' className='mt-3 mt-md-0 pl-md-0'>\r\n                            <p>{credit}</p>\r\n                            <p>Source: {image.source.sourceName}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-md-3'>\r\n                        <Col>\r\n                            <p className=\"text-break\">\r\n                                See the original at: <a href={image.source.sourceUrl} target='_blank' rel='external noreferrer'>{image.source.sourceUrl}</a>\r\n                            </p>\r\n                            {image.source.description ? <p>{image.source.description}</p> : null}\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Image details</ModalHeader>\r\n                {body}\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport DetailsModal from './DetailsModal';\r\n\r\n\r\nexport default class PuzzleTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = { modalOpen: false };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return { modalOpen: !state.modalOpen }; });\r\n    }\r\n\r\n    render() {\r\n        const puzzleImage = this.props.puzzleImage;\r\n        if (!puzzleImage) {\r\n            return null;\r\n        }\r\n\r\n        const isPhoto = puzzleImage.source && puzzleImage.source.isPhoto;\r\n        const nameIsTitle = puzzleImage.source && puzzleImage.source.nameIsTitle;\r\n\r\n        const title = nameIsTitle ? <em>{puzzleImage.name}</em> : '';\r\n        let author = '';\r\n        if (puzzleImage.author) {\r\n            if (nameIsTitle) {\r\n                author += `, ${isPhoto ? ' photo' : ''} by `;\r\n            } else if (isPhoto) {\r\n                author += 'Photo by ';\r\n            } else {\r\n                author += 'By ';\r\n            }\r\n            author += puzzleImage.author;\r\n        }\r\n        const info = puzzleImage.source ? <button type='button' className='btn btn-link btn-sm text-muted px-1' onClick={this.toggleModal}>more info</button> : '';\r\n\r\n        return (\r\n            <div className='container-fluid container-md mt-3'>\r\n                <div className='row justify-content-center flex-sm-nowrap mx-n2'>\r\n                    <div className='col-2 d-none d-md-block px-2'> </div>\r\n                    <div className='col-auto flex-shrink-1 px-2'>\r\n                        <p className='h5'>{title}{author}</p>\r\n                    </div>\r\n                    <div className='col-auto col-sm-2 px-2'>{info}</div>\r\n                </div>\r\n                <DetailsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} image={puzzleImage} />\r\n            </div>);\r\n    }\r\n}","import { Component, createRef } from 'react';\r\n\r\nimport { Toast, ToastHeader, ToastBody } from 'reactstrap';\r\n\r\nimport PieceModel from './puzzle/PieceModel.js';\r\nimport Puzzle from './puzzle/Puzzle.js';\r\nimport PuzzleControls from './controls/PuzzleControls.js';\r\nimport PuzzleState from './puzzle/PuzzleState.js';\r\nimport PuzzleTitle from './title/PuzzleTitle.js';\r\n\r\nexport default class App extends Component {\r\n    puzzle = createRef();\r\n\r\n    state = {\r\n        puzzleKey: 1,\r\n        image: {\r\n            width: null,\r\n            height: null,\r\n            info: null,\r\n        },\r\n        rows: null,\r\n        cols: null,\r\n        savedPieces: null,\r\n        error: null,\r\n    };\r\n\r\n    newPuzzle = (width, height, rows, cols, image) => {\r\n        const { savedPieces, image: oldImage } = this.state;\r\n        if (savedPieces && oldImage.info.type === 'user') {\r\n            URL.revokeObjectURL(oldImage.info.url);\r\n        }\r\n\r\n        this.setState(state => ({\r\n            puzzleKey: state.puzzleKey + 1,\r\n            image: {\r\n                width,\r\n                height,\r\n                info: image,\r\n            },\r\n            rows,\r\n            cols,\r\n            savedPieces: null,\r\n        }));\r\n    };\r\n\r\n    saveUserImage = async (url) => {\r\n        // Fetch the image blob using the local URL from createObjectURL().\r\n        const userImage = await fetch(url).then(response => response.blob());\r\n\r\n        return new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                if (reader.result) {\r\n                    try {\r\n                        localStorage.setItem('latestSaveImage', reader.result);\r\n                        resolve(true);\r\n                    } catch (error) {\r\n                        this.setState({\r\n                            error: 'Failed to save image; it may be too large to store in localStorage (limit: roughly 3.75MB).'\r\n                        });\r\n                        console.log(error);\r\n                        resolve(false);\r\n                    }\r\n                } else {\r\n                    this.setState({ error: 'Failed to save image: can\\'t read image.' });\r\n                    resolve(false);\r\n                }\r\n            };\r\n            reader.readAsDataURL(userImage);\r\n        });\r\n    };\r\n\r\n    savePuzzle = async () => {\r\n        // Calling a method on a child component isn't idiomatic in React, but I feel like keeping the 'pieces' state\r\n        // with the rest of the puzzle logic (vs. lifting it up to App) is worth it here.\r\n        const pieces = this.puzzle.current.getGameState();\r\n\r\n        const { image, rows, cols } = this.state;\r\n        const state = new PuzzleState(pieces, rows, cols, image.width, image.height, image.info);\r\n\r\n        try {\r\n            if (localStorage.getItem('latestSaveImage')) {\r\n                localStorage.removeItem('latestSaveImage');\r\n            }\r\n            localStorage.setItem('latestSave', JSON.stringify(state));\r\n        } catch (error) {\r\n            this.setState({\r\n                error: 'Failed to save puzzle; localStorage may be full or unavailable (e.g. in a private browsing window).'\r\n            });\r\n            console.log(error);\r\n            return false;\r\n        }\r\n\r\n        if (image.info.type === 'user') {\r\n            return await this.saveUserImage(image.info.url);\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    loadPuzzle = async () => {\r\n        let save;\r\n        try {\r\n            save = JSON.parse(localStorage.getItem('latestSave'), (key, value) => {\r\n                if (key === 'pieces') {\r\n                    return value.map(piece => Object.assign(new PieceModel(), piece));\r\n                } else {\r\n                    return value;\r\n                }\r\n            });\r\n\r\n            if (save.imageInfo.type === 'user') {\r\n                // Using even a moderately-sized image data URL directly slows down the browser, so convert it back to blob\r\n                const blob = await fetch(localStorage.getItem('latestSaveImage')).then(response => response.blob());\r\n                save.imageInfo.url = URL.createObjectURL(blob);\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.setState({ error: \"Failed to load saved puzzle.\" });\r\n            console.log(error);\r\n            return;\r\n        }\r\n\r\n        this.setState(state => ({\r\n            puzzleKey: state.puzzleKey + 1,\r\n            image: {\r\n                width: save.imageWidth,\r\n                height: save.imageHeight,\r\n                info: save.imageInfo,\r\n            },\r\n            rows: save.rows,\r\n            cols: save.cols,\r\n            savedPieces: save.pieces,\r\n        }));\r\n    };\r\n\r\n    handleToastDismiss = () => {\r\n        this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n        const { puzzleKey, image, rows, cols, savedPieces, error } = this.state;\r\n\r\n        return (<>\r\n            <PuzzleControls newPuzzle={this.newPuzzle} savePuzzle={this.savePuzzle} loadPuzzle={this.loadPuzzle} />\r\n            {image.info &&\r\n                <>\r\n                    <PuzzleTitle puzzleImage={image.info} />\r\n                    <Puzzle\r\n                        ref={this.puzzle}\r\n                        key={puzzleKey}\r\n                        imgUrl={image.info.url}\r\n                        imgWidth={image.width}\r\n                        imgHeight={image.height}\r\n                        rows={rows}\r\n                        cols={cols}\r\n                        pieces={savedPieces}\r\n                    />\r\n                </>}\r\n            <Toast isOpen={!!error}>\r\n                <ToastHeader toggle={this.handleToastDismiss}>Error</ToastHeader>\r\n                <ToastBody>{error}</ToastBody>\r\n            </Toast>\r\n        </>);\r\n    }\r\n};","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\n\r\nexport default class CompatibilityInfoModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} centered={true}>\r\n                <ModalHeader toggle={this.props.toggle}>Browser compatibility</ModalHeader>\r\n                <ModalBody>\r\n                    <p>\r\n                        For the best experience, it's recommended to view this website in a recent version of <b>Firefox</b>, <b>Chrome</b>, or <b>Edge</b> on desktop,\r\n                        {' '}or <b>Chrome</b> on mobile.\r\n                    </p>\r\n                    <p>\r\n                        Safari is mostly supported, but there is an issue where the clickable area of each puzzle piece extends past the visible image\r\n                        {' '}(due to the clip-path property not masking the mouse hit area).\r\n                    </p>\r\n                    <p>This site does not work in Internet Explorer.</p>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport CompatibilityInfoModal from './CompatibilityInfoModal.js';\r\n\r\n\r\nexport default class CompatibilityInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = { modalOpen: false };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ modalOpen: !this.state.modalOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button className='btn btn-link text-light' type='button' onClick={this.toggleModal}>\r\n                    <i className='bi bi-list-check text-light mr-2'></i>\r\n                    <small className='align-text-top'>Browser support</small>\r\n                </button>\r\n                <CompatibilityInfoModal toggle={this.toggleModal} isOpen={this.state.modalOpen} />\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.js';\nimport CompatibilityInfo from './info/CompatibilityInfo.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('react-root')\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <CompatibilityInfo />\n    </React.StrictMode>,\n    document.getElementById('compatibility-info-root')\n);"],"sourceRoot":""}