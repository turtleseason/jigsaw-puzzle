{"version":3,"sources":["puzzle/Sides.js","puzzle/ClipPath.js","puzzle/ClipPathContainer.js","util.js","puzzle/Edges.js","puzzle/EdgePathDrawer.js","puzzle/EdgeStyleInfo.js","puzzle/GroupModel.js","puzzle/Piece.js","puzzle/PieceModel.js","puzzle/PuzzleCompleteImage.js","puzzle/Puzzle.js","title/DetailsModal.js","title/PuzzleTitle.js","controls/ImageInfo.js","controls/images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg","controls/images/david-clode-eOSqRq2Qm1c-unsplash.jpg","controls/images/casey-horner-80UR4DM2Rz0-unsplash.jpg","controls/images/van-gogh-roses-nga.jpg","controls/images/scott-webb-lYzgtps0UtQ-unsplash.jpg","controls/images/travel-sourced-FsmcD6uKcHk-unsplash.jpg","controls/providedImages.js","controls/ImagePicker.js","controls/SettingsModal.js","controls/PuzzleControls.js","index.js"],"names":["LEFT","TOP","RIGHT","BOTTOM","Sides","Symbol","iterator","ClipPath","edges","clipPathString","side","this","props","edgeDrawer","getPathString","id","pieceKey","d","getClipPathString","PureComponent","ClipPathContainer","model","key","children","pieces","map","renderClipPath","width","height","range","i","Array","from","keys","randomInt","max","Math","floor","random","BUMP","RECESS","FLAT","getRandomEdgeType","types","length","EdgePathDrawer","pieceWidth","pieceHeight","borderSize","START","templates","makeTemplates","pW","pH","b","w","o","c1","c2","edgeStyleInfo","start","end","mid","type","EdgeStyleInfo","neckWidth","offset","control1","control2","other","edge","Error","getOppositeEdge","GroupModel","bounds","row","col","push","concat","Piece","bgPos","backgroundPositionString","left","top","className","blockPointerEvents","data-id","onPointerDown","e","clipPath","style","backgroundPosition","displayPos","zIndex","PieceModel","pos","neighbors","group","setPos","actualPos","val","copy","setDisplayPos","PuzzleCompleteImage","state","startPos","requestAnimationFrame","setState","destPos","onTransitionEnd","Component","Puzzle","innerWidth","imgWidth","cols","innerHeight","imgHeight","rows","min","pointerDownHandlers","handlePointerDown","bind","handlePointerMove","handlePointerUp","handleResize","handleTransitionEnd","nextzIndex","gameComplete","draggedPiece","scaleFactor","setScaleFactor","window","addEventListener","createPieces","groups","createGroups","removeEventListener","widthScale","document","documentElement","clientWidth","heightScale","clientHeight","board","querySelector","dim","getBoardDimensions","maxBoundX","maxBoundY","slice","entries","piece","xBound","yBound","clone","spacing","availableKeys","keysByGridPos","fill","keyIndex","splice","getRandomPosition","getBackgroundPosition","createEdge","opposite","topLeftKey","g","addPiece","alignWith","snapRange","abs","g1","g2","refPiece","k","p","alignPiece","mergeWith","isPrimary","pointerType","button","groupKey","offsetX","clientX","offsetY","clientY","hitElement","elementFromPoint","classList","contains","neighbor","isTouching","mergeGroups","Object","clampPiecesToBoardBounds","endAnimationComplete","boardStyle","transform","getTopLeftPos","getCenteredImagePos","renderPiece","onPointerMove","onPointerUp","DetailsModal","image","body","source","credit","nameIsTitle","name","author","ModalBody","Row","Col","md","src","url","alt","sourceName","href","sourceUrl","target","rel","description","Modal","toggle","toggleModal","isOpen","centered","ModalHeader","PuzzleTitle","modalOpen","puzzleImage","isPhoto","title","info","onClick","ImageInfo","defaultRows","defaultCols","shortName","ImageSource","providedImages","img1","img2","img3","img4","img5","img6","ImagePicker","fileInput","React","createRef","selectedPreset","presetImages","userImage","handleSelectChange","handleFileChange","handleRadioKeyDown","useUserImage","usePresetImage","usingUserImage","invalidUserImage","setSelectedImage","getElementById","focus","preventDefault","select","selectedIndex","file","current","files","fileUrl","URL","createObjectURL","testLoader","Image","onerror","revokeObjectURL","onload","generateDefaultDimensions","naturalWidth","naturalHeight","minBound","minPuzzleDimension","aspect","x","clamp","round","options","img","value","presetBtnStyle","userBtnStyle","readOnly","checked","onKeyDown","htmlFor","onChange","renderSelectOptions","CustomInput","accept","innerRef","invalid","stopPropagation","UncontrolledTooltip","placement","SettingsModal","handleDimensionsChange","handleDimensionsBlur","handleColorChange","color","getPropertyValue","setDimension","valueAsNumber","validateDimension","setProperty","result","parseInt","isNaN","maxPuzzleDimension","rowsVal","colsVal","onBlur","Input","PuzzleControls","newPuzzle","selectedImage","imageInfo","sizeTester","console","log","disabled","puzzleKey","ReactDOM","render","StrictMode","renderPuzzle","columns"],"mappings":"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","file":"static/js/main.fde7f7d5.chunk.js","sourcesContent":["export const LEFT = 'Left';\r\nexport const TOP = 'Top';\r\nexport const RIGHT = 'Right';\r\nexport const BOTTOM = 'Bottom';\r\n\r\n// Use this to iterate through all four sides in a consistent order.\r\nexport const Sides = {\r\n    *[Symbol.iterator]() {\r\n        yield LEFT;\r\n        yield TOP;\r\n        yield RIGHT;\r\n        yield BOTTOM;\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport { Sides } from './Sides.js';\r\n\r\n\r\nexport default class ClipPath extends PureComponent {\r\n    getClipPathString(edges) {\r\n        let clipPathString = '';\r\n        for (const side of Sides) {\r\n            clipPathString += this.props.edgeDrawer.getPathString(side, edges[side]);\r\n        }\r\n        return clipPathString;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <clipPath id={'clip-' + this.props.pieceKey}>\r\n                <path d={this.getClipPathString(this.props.edges)}/>\r\n            </clipPath>\r\n        );\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport ClipPath from './ClipPath.js';\r\n\r\n\r\nexport default class ClipPathContainer extends PureComponent {\r\n    renderClipPath(model) {\r\n        return <ClipPath key={model.key} edgeDrawer={this.props.edgeDrawer} pieceKey={model.key} edges={model.edges}/>;\r\n    }\r\n\r\n    render() {\r\n        const children = this.props.pieces ? this.props.pieces.map(model => this.renderClipPath(model)) : null;\r\n        return (\r\n            <svg width='0' height='0'>\r\n                {children}\r\n            </svg>\r\n        );\r\n    }\r\n}","// Returns an array containing int values from 0 (inclusive) to i (exclusive).\r\nexport function range(i) {\r\n    return Array.from(Array(i).keys());\r\n}\r\n\r\n// Returns a random integer between 0 (inclusive) and max (exclusive).\r\nexport function randomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n// Restricts x to the range between min and max (inclusive).\r\nexport function clamp(x, min, max) {\r\n    if (min > max) {\r\n        throw Error(`clamp: min (${min}) is greater than max (${max}).`);\r\n    }\r\n    return Math.max(Math.min(x, max), min);\r\n}\r\n\r\n// Creates an object where the \"keys\" iterable provides the keys\r\n// and each value is the result of passing its corresponding key to keyToValueFunc.\r\nexport function objectMap(keys, keyToValueFunc) {\r\n    const obj = {};\r\n    for (const i of keys) {\r\n        obj[i] = keyToValueFunc(i);\r\n    }\r\n    return obj;\r\n}","import { randomInt } from '../util';\r\n\r\n\r\nexport const BUMP = 'b';\r\nexport const RECESS = 'r';\r\nexport const FLAT = 'f';\r\n\r\n// Excludes FLAT since that edge type isn't assigned randomly.\r\nexport function getRandomEdgeType() {\r\n    const types = [BUMP, RECESS];\r\n    return types[randomInt(types.length)];\r\n}\r\n\r\nexport function getOppositeEdge(edge) {\r\n    switch(edge) {\r\n        case BUMP:\r\n            return RECESS;\r\n        case RECESS:\r\n            return BUMP;\r\n        default:\r\n            throw Error(`getOppositeEdge: ${edge} does not have an opposite edge type`);\r\n    }\r\n}","import { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM } from './Sides';\r\n\r\n\r\nexport default class EdgePathDrawer {\r\n    constructor(pieceWidth, pieceHeight, borderSize) {\r\n        this.START = 'START';\r\n        this.templates = this.makeTemplates(pieceWidth, pieceHeight, borderSize)\r\n    }\r\n\r\n    makeTemplates(pW, pH, b) {\r\n        const templates = {};\r\n\r\n        templates[this.START] = `M ${b} ${pH - b} `;\r\n\r\n        templates[BUMP + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`    \r\n            + `C ${b - o} ${pH / 2 + c1} ${0} ${pH / 2 + c2} ${0} ${pH / 2} `\r\n            + `C ${0} ${pH / 2 - c2} ${b - o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[RECESS + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`\r\n            + `C ${b + o} ${pH / 2 + c1} ${b * 2} ${pH / 2 + c2} ${b * 2} ${pH / 2} `\r\n            + `C ${b * 2} ${pH / 2 - c2} ${b + o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[LEFT] = `V ${b} `;\r\n\r\n        templates[BUMP + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b - o} ${pW / 2 - c2} ${0} ${pW / 2} ${0} `\r\n            + `C ${pW / 2 + c2} ${0} ${pW / 2 + c1} ${b - o} ${(pW + w) / 2} ${b} `;\r\n        templates[RECESS + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b + o}  ${pW / 2 - c2} ${b * 2} ${pW / 2} ${b * 2} `\r\n            + `C ${pW / 2 + c2} ${b * 2} ${pW / 2 + c1} ${b + o} ${(pW + w) / 2} ${b} `;\r\n        templates[TOP] = `H ${pW - b} `;\r\n\r\n        templates[BUMP + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b + o} ${pH / 2 - c1} ${pW} ${pH / 2 - c2} ${pW} ${pH / 2} `\r\n            + `C ${pW} ${pH / 2 + c2} ${pW - b + o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RECESS + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b - o} ${pH / 2 - c1} ${pW - b * 2} ${pH / 2 - c2} ${pW - b * 2} ${pH / 2} `\r\n            + `C ${pW - b * 2} ${pH / 2 + c2} ${pW - b - o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RIGHT] = `V ${pH - b} `;\r\n\r\n        templates[BUMP + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b + o} ${pW / 2 + c2} ${pH} ${pW / 2} ${pH} `\r\n            + `C ${pW / 2 - c2} ${pH} ${pW / 2 - c1} ${pH - b + o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[RECESS + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b - o}  ${pW / 2 + c2} ${pH - b * 2} ${pW / 2} ${pH - b * 2} `\r\n            + `C ${pW / 2 - c2} ${pH - b * 2} ${pW / 2 - c1} ${pH - b - o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[BOTTOM] = `Z`;\r\n\r\n        return templates;\r\n    }\r\n\r\n    getPathString(side, edgeStyleInfo) {\r\n        const start = (side === LEFT) ? this.templates[this.START] : '';\r\n        const end = this.templates[side];\r\n\r\n        let mid = '';\r\n        if (edgeStyleInfo.type !== FLAT) {\r\n            const key = edgeStyleInfo.type + side;\r\n            mid = this.templates[key](edgeStyleInfo.w, edgeStyleInfo.o, edgeStyleInfo.c1, edgeStyleInfo.c2);\r\n        }\r\n\r\n        return start + mid + end;\r\n    }\r\n}","import { getOppositeEdge } from './Edges';\r\n\r\n\r\n// Contains the properties needed to draw a specific puzzle piece edge:\r\n// its overall type (bump, recess, flat) and any constants needed to define its shape.\r\nexport default class EdgeStyleInfo {\r\n    constructor(type, neckWidth, offset, control1, control2) {\r\n        this.type = type;\r\n        this.w = neckWidth;     // The width of the area where the bump meets the edge of the piece.\r\n        this.o = offset;        // Controls the distance between the widest part of the bump and the edge of the piece.\r\n        this.c1 = control1;     // Controls the width of the widest part of the bump.\r\n        this.c2 = control2;     // Controls the width near the tallest part of the bump (affects the smoothness/pointiness of the curve).\r\n    }\r\n\r\n    // Returns an EdgeStyleInfo object for an edge that fits with this one:\r\n    // if this is a bump edge, opposite() returns a matching recess edge, and vice-versa.\r\n    // Will fail if called on a flat edge.\r\n    opposite() {\r\n        const other = {...this};\r\n        other.type = getOppositeEdge(this.type);\r\n        return other;\r\n    }\r\n}","import { LEFT, TOP, RIGHT, BOTTOM } from './Sides.js';\r\n\r\n\r\nexport default class GroupModel {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.pieces = [];\r\n        this.bounds = {[LEFT]: -1, [TOP]: -1, [RIGHT]: -1, [BOTTOM]: -1};\r\n    }\r\n\r\n    addPiece(key, row, col) {\r\n        this.pieces.push(key);\r\n        if (this.bounds[LEFT] < 0 || col < this.bounds[LEFT]) {\r\n            this.bounds[LEFT] = col;\r\n        }\r\n        if (this.bounds[RIGHT] < 0 || col > this.bounds[RIGHT]) {\r\n            this.bounds[RIGHT] = col;\r\n        }\r\n        if (this.bounds[TOP] < 0 || row < this.bounds[TOP]) {\r\n            this.bounds[TOP] = row;\r\n        }\r\n        if (this.bounds[BOTTOM] < 0 || row > this.bounds[BOTTOM]) {\r\n            this.bounds[BOTTOM] = row;\r\n        }\r\n    }\r\n\r\n    mergeWith(other) {\r\n        this.pieces = this.pieces.concat(other.pieces);\r\n        if (other.bounds[LEFT] < this.bounds[LEFT]) {\r\n            this.bounds[LEFT] = other.bounds[LEFT];\r\n        }\r\n        if (other.bounds[RIGHT] > this.bounds[RIGHT]) {\r\n            this.bounds[RIGHT] = other.bounds[RIGHT];\r\n        }\r\n        if (other.bounds[TOP] < this.bounds[TOP]) {\r\n            this.bounds[TOP] = other.bounds[TOP];\r\n        }\r\n        if (other.bounds[BOTTOM] > this.bounds[BOTTOM]) {\r\n            this.bounds[BOTTOM] = other.bounds[BOTTOM];\r\n        }\r\n    }\r\n}","import { PureComponent } from 'react';\r\n\r\n\r\nexport default class Piece extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // This never changes over the lifetime of the object, so just calculate it once\r\n        const bgPos = this.props.model.bgPos;\r\n        this.backgroundPositionString = `${bgPos.left}px ${bgPos.top}px`;\r\n    }\r\n    \r\n    render() {\r\n        const model = this.props.model;\r\n        const className = 'puzzle-piece' + (this.props.blockPointerEvents ? ' block-pointer-events' : '');\r\n        return (\r\n            <svg\r\n                className={className}\r\n                data-id={model.key}\r\n                onPointerDown={(e) => this.props.onPointerDown(e)}\r\n                clipPath={'url(#clip-' + model.key + ')'}\r\n                style={{\r\n                    backgroundPosition: this.backgroundPositionString,\r\n                    width: this.props.width,\r\n                    height: this.props.height,\r\n                    left: model.displayPos.left,\r\n                    top: model.displayPos.top,\r\n                    zIndex: (model.zIndex > 0 ? model.zIndex : 'auto')\r\n                }}>\r\n            </svg>\r\n        );\r\n    }\r\n}","// Never mutate pos or displayPos's left/top properties; always set them using setPos() or setDisplayPos()\r\n// to ensure that the Piece re-renders properly and that pos and displayPos stay in sync. \r\n\r\nexport default class PieceModel {\r\n\r\n    // All parameters should be integers except:\r\n    // pos, bgPos: Objects with the properties 'left' and 'top', each set to a number.\r\n    // edges:      An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to an EdgeStyleInfo object.\r\n    // neighbors:  An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to the key of another PieceModel or undefined.  \r\n    // \r\n    constructor(key, col, row, pos, bgPos, zIndex, edges, neighbors) {\r\n        // By default, a new piece is inserted into the group with the same id as its key.\r\n        this.group = key;\r\n        \r\n        this.key = key;\r\n        this.col = col;\r\n        this.row = row;\r\n        this.bgPos = bgPos;\r\n        this.zIndex = zIndex;\r\n        this.edges = edges;\r\n        this.neighbors = neighbors;\r\n        \r\n        this.setPos(pos.left, pos.top);\r\n    }\r\n    \r\n    get pos() {\r\n        return this.actualPos;\r\n    }\r\n    \r\n    set pos(val) {\r\n        throw Error('PieceModel: Don\\'t set \"pos\" directly - use setPos() instead.');\r\n    }\r\n    \r\n    // 'pos' is the piece's original position before clamping; it doesn't change when the board is resized\r\n    // so that if the board is expanded again, the piece can return to its original position.\r\n    setPos(left, top) {\r\n        this.actualPos = {left: left, top: top};\r\n        this.displayPos = this.actualPos;\r\n    }\r\n\r\n    // 'displayPos' is the piece's clamped position; if the board is resized so that the piece would end up outside the board,\r\n    // its display position is set to keep it in bounds.\r\n    // When the piece is interacted with (picked up or merged with another piece/group), displayPos becomes the piece's actual position.\r\n    setDisplayPos(left, top) {\r\n        this.displayPos = {left: left, top: top};\r\n    }\r\n\r\n    clone() {\r\n        const copy = new PieceModel(this.key, this.col, this.row, this.pos, this.bgPos, this.zIndex, this.edges, this.neighbors);\r\n        copy.group = this.group;\r\n        copy.setDisplayPos(this.displayPos.left, this.displayPos.top);\r\n        return copy;\r\n    }\r\n}","import { Component } from 'react';\r\n\r\n\r\nexport default class PuzzleCompleteImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...this.props.startPos};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Change on the second frame to ensure the image is drawn at the original position at least once.\r\n        requestAnimationFrame(() => requestAnimationFrame(() => this.setState({...this.props.destPos})));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='puzzle-complete-img' onTransitionEnd={this.props.onTransitionEnd} \r\n                style={{width: this.props.width, height: this.props.height, left: this.state.left, top: this.state.top}}>\r\n            </div>\r\n        ); \r\n    }\r\n}","import { Component } from 'react';\r\nimport ClipPathContainer from './ClipPathContainer';\r\nimport EdgePathDrawer from './EdgePathDrawer';\r\nimport EdgeStyleInfo from './EdgeStyleInfo';\r\nimport GroupModel from './GroupModel';\r\nimport Piece from './Piece';\r\nimport PieceModel from './PieceModel';\r\nimport PuzzleCompleteImage from './PuzzleCompleteImage';\r\n\r\nimport { getRandomEdgeType } from './Edges';\r\nimport { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM, Sides } from './Sides';\r\nimport { range, randomInt } from '../util';\r\n\r\nimport './Puzzle.css';\r\n\r\n\r\nconst MAX_WIDTH_SCALE = .7;   // The maximum percentage of the window width that the puzzle image should take up. \r\nconst MAX_HEIGHT_SCALE = .7;  // The maximum percentage of the window height that the puzzle image should take up. \r\n\r\nexport default class Puzzle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.innerWidth =  this.props.imgWidth / this.props.cols;\r\n        this.innerHeight = this.props.imgHeight / this.props.rows;\r\n        this.borderSize = Math.min(this.innerHeight, this.innerWidth) / 4;\r\n        this.pieceWidth = 2 * this.borderSize + this.innerWidth;\r\n        this.pieceHeight = 2 * this.borderSize + this.innerHeight;\r\n\r\n        this.pointerDownHandlers = range(this.props.rows * this.props.cols).map(i => this.handlePointerDown.bind(this, i));\r\n        this.handlePointerMove = this.handlePointerMove.bind(this);\r\n        this.handlePointerUp = this.handlePointerUp.bind(this);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\r\n\r\n        this.edgeDrawer = new EdgePathDrawer(this.pieceWidth, this.pieceHeight, this.borderSize);\r\n        this.nextzIndex = 1;\r\n\r\n        this.state = {\r\n            gameComplete: false,\r\n            draggedPiece: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const scaleFactor = this.setScaleFactor();\r\n        window.addEventListener('resize', this.handleResize);\r\n\r\n        const pieces = this.createPieces(scaleFactor);\r\n        this.groups = this.createGroups(pieces);\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    setScaleFactor() {\r\n        const widthScale = MAX_WIDTH_SCALE * document.documentElement.clientWidth / this.props.imgWidth;\r\n        const heightScale = MAX_HEIGHT_SCALE * document.documentElement.clientHeight / this.props.imgHeight;\r\n        const scaleFactor = Math.min(widthScale, heightScale);\r\n        this.setState({scaleFactor: scaleFactor});\r\n        return scaleFactor;\r\n    }\r\n    \r\n    getBoardDimensions() {\r\n        // Return a dummy value if board not found? Or just let it throw an error?\r\n        const board = document.querySelector('.puzzle-background');\r\n        return {width: board.clientWidth, height: board.clientHeight};\r\n    }\r\n\r\n    clampPiecesToBoardBounds(scaleFactor) {\r\n        const dim = this.getBoardDimensions();\r\n        const maxBoundX = dim.width / scaleFactor - this.pieceWidth;\r\n        const maxBoundY = dim.height / scaleFactor - this.pieceHeight;\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        for (const [i, piece] of pieces.entries()) {\r\n            const group = this.groups[piece.group];\r\n            const xBound = maxBoundX - (this.innerWidth * (group.bounds[RIGHT] - piece.col));\r\n            const yBound = maxBoundY - (this.innerHeight * (group.bounds[BOTTOM] - piece.row));\r\n\r\n            pieces[i] = piece.clone();\r\n            pieces[i].setDisplayPos(\r\n                piece.pos.left > xBound ? xBound : piece.pos.left,\r\n                piece.pos.top > yBound ? yBound : piece.pos.top);\r\n        }\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    getGridPosition(col, row, spacing) {\r\n        const left = (this.innerWidth + spacing) * col - this.borderSize;\r\n        const top = (this.innerHeight + spacing) * row - this.borderSize;\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    getRandomPosition(scaleFactor) {\r\n        const dim = this.getBoardDimensions();\r\n\r\n        let left, top;\r\n        if (dim.width > dim.height) {\r\n            left = Math.random() * (.15 * dim.width / scaleFactor);\r\n            top = Math.random() * (dim.height / scaleFactor - this.pieceHeight) ;\r\n        } else {\r\n            left = Math.random() * (dim.width / scaleFactor - this.pieceWidth);\r\n            top = Math.random() * (.15 * dim.height) / scaleFactor;\r\n        }\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    getBackgroundPosition(col, row) {\r\n        const left = - (this.innerWidth * col) + this.borderSize;\r\n        const top = -(this.innerHeight * row) + this.borderSize;\r\n        return {left: left, top: top};\r\n    }\r\n    \r\n    createEdge(type) {\r\n        const neckWidth = this.borderSize * (.8 + Math.random() * .45);\r\n        const offset = this.borderSize * (.4 + Math.random() * .1);\r\n        const c1 = (neckWidth > this.borderSize) ? neckWidth * (.75 + Math.random() * .25)\r\n                    : this.borderSize * (.85 + Math.random() * .35);\r\n        const c2 = neckWidth * (.5 + Math.random() * .15);\r\n        return new EdgeStyleInfo(type, neckWidth, offset, c1, c2);\r\n    }\r\n\r\n    createPieces(scaleFactor) {\r\n        const pieces = [];\r\n        const availableKeys = range(this.props.cols * this.props.rows);\r\n        // Use map() instead of fill() to ensure that each inner array is a unique object.\r\n        const keysByGridPos = Array(this.props.cols).fill(null).map(() => Array(this.props.rows));\r\n        \r\n        for (let col = 0; col < this.props.cols; col++) {\r\n            for (let row = 0; row < this.props.rows; row++) {\r\n                const keyIndex = randomInt(availableKeys.length);\r\n                const key = availableKeys.splice(keyIndex, 1)[0];\r\n                keysByGridPos[col][row] = key;\r\n                \r\n                // const pos = this.getGridPosition(col, row, 0);\r\n                const pos = this.getRandomPosition(scaleFactor);\r\n                const bgPos = this.getBackgroundPosition(col, row);\r\n\r\n                const neighbors = {};\r\n                if (col > 0) {\r\n                    neighbors[LEFT] = keysByGridPos[col - 1][row];\r\n                    pieces[neighbors[LEFT]].neighbors[RIGHT] = key;\r\n                }\r\n                if (row > 0) {\r\n                    neighbors[TOP] = keysByGridPos[col][row - 1];\r\n                    pieces[neighbors[TOP]].neighbors[BOTTOM] = key;\r\n                }\r\n\r\n                const edges = {};\r\n                edges[LEFT] = (col === 0) ? this.createEdge(FLAT) : pieces[neighbors[LEFT]].edges[RIGHT].opposite();\r\n                edges[TOP] = (row === 0) ? this.createEdge(FLAT) : pieces[neighbors[TOP]].edges[BOTTOM].opposite();\r\n                edges[RIGHT] = (col === this.props.cols - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType());\r\n                edges[BOTTOM] = (row === this.props.rows - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType());\r\n                \r\n                pieces[key] = new PieceModel(key, col, row, pos, bgPos, 0, edges, neighbors);\r\n            }\r\n        }\r\n        this.topLeftKey = keysByGridPos[0][0];\r\n        return pieces;\r\n    }\r\n\r\n    createGroups(pieces) {\r\n        const groups = {};\r\n        for (const piece of pieces) {\r\n            const g = new GroupModel(piece.key);\r\n            g.addPiece(piece.key, piece.row, piece.col);\r\n            groups[piece.key] = g;\r\n        }\r\n        return groups;\r\n    }\r\n\r\n    alignPiece(piece, alignWith) {\r\n        piece.setPos(alignWith.displayPos.left + this.innerWidth * (piece.col - alignWith.col),\r\n                     alignWith.displayPos.top + this.innerHeight * (piece.row - alignWith.row));\r\n    }\r\n    \r\n    isTouching(piece, side, other) {\r\n        const snapRange = 7 / this.state.scaleFactor;\r\n        if (side === RIGHT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((other.displayPos.left - piece.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === LEFT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((piece.displayPos.left - other.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === TOP) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((piece.displayPos.top - other.displayPos.top) - this.innerHeight) <= snapRange;\r\n        } else if (side === BOTTOM) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((other.displayPos.top - piece.displayPos.top) - this.innerHeight) <= snapRange;\r\n        }\r\n    }\r\n\r\n    mergeGroups(pieces, g1, g2) {\r\n        // Update all pieces in the merged group with their new position and z-index\r\n        const refPiece = pieces[this.groups[g1].pieces[0]];\r\n        for (const k of this.groups[g2].pieces) {\r\n            const p = pieces[k].clone();\r\n            p.group = g1;\r\n            p.zIndex = refPiece.zIndex;\r\n            this.alignPiece(p, refPiece);\r\n            pieces[k] = p;\r\n        }\r\n\r\n        // Merge GroupModels\r\n        this.groups[g1].mergeWith(this.groups[g2]);\r\n\r\n        delete this.groups[g2];\r\n    }\r\n\r\n    handlePointerDown(key, e) {\r\n        if (this.state.draggedPiece !== null || !e.isPrimary || (e.pointerType === 'mouse' && e.button !== 0)) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups[groupKey].pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            pieces[k].zIndex = this.nextzIndex;\r\n            pieces[k].setPos(pieces[k].displayPos.left, pieces[k].displayPos.top);\r\n        }\r\n        this.nextzIndex++;\r\n\r\n        this.setState({\r\n            pieces: pieces,\r\n            draggedPiece: key,\r\n            offsetX: e.clientX - (pieces[key].pos.left * this.state.scaleFactor),\r\n            offsetY: e.clientY - (pieces[key].pos.top * this.state.scaleFactor)\r\n        });\r\n\r\n    }\r\n\r\n    handlePointerMove(e) {\r\n        if (this.state.draggedPiece === null || !e.isPrimary) {\r\n            return;\r\n        }\r\n        \r\n        // Ignore events from touches that started within puzzle area but moved out of bounds\r\n        const hitElement = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (!hitElement || !hitElement.classList.contains('puzzle-area')) {\r\n            return;\r\n        }\r\n\r\n        const key = this.state.draggedPiece;\r\n        const pieces = this.state.pieces.slice();\r\n        \r\n        const p = pieces[key].clone();\r\n        pieces[key] = p;\r\n        \r\n        const left = (e.clientX - this.state.offsetX) / this.state.scaleFactor;\r\n        const top = (e.clientY - this.state.offsetY) / this.state.scaleFactor;\r\n        p.setPos(left, top);\r\n\r\n        const group = this.groups[p.group];\r\n        for (const k of group.pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            this.alignPiece(pieces[k], p);\r\n        }\r\n        this.setState({pieces: pieces});\r\n    }\r\n\r\n    handlePointerUp() {\r\n        if (this.state.draggedPiece === null) {\r\n            return;\r\n        }\r\n\r\n        const key = this.state.draggedPiece;\r\n        const pieces = this.state.pieces.slice();\r\n\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups[groupKey].pieces) {\r\n            const p = pieces[k];\r\n            for (const side of Sides) {\r\n                const neighbor = pieces[p.neighbors[side]];\r\n                if (neighbor && neighbor.group !== p.group && this.isTouching(p, side, neighbor)) {\r\n                    this.mergeGroups(pieces, p.group, neighbor.group);\r\n                }\r\n            }\r\n        }\r\n\r\n        const gameComplete = Object.keys(this.groups).length === 1;\r\n        this.setState({pieces: pieces, draggedPiece: null, gameComplete: gameComplete});\r\n    }\r\n\r\n    handleResize() {\r\n        const scaleFactor = this.setScaleFactor();\r\n        this.clampPiecesToBoardBounds(scaleFactor);\r\n    }\r\n\r\n    handleTransitionEnd() {\r\n        this.setState({endAnimationComplete: true});\r\n    }\r\n\r\n    getTopLeftPos() {\r\n        const pos = this.state.pieces[this.topLeftKey].displayPos;\r\n        return {left: pos.left + this.borderSize, top: pos.top + this.borderSize};\r\n    }\r\n\r\n    getCenteredImagePos() {\r\n        const dim = this.getBoardDimensions();\r\n        const destLeft = (dim.width / this.state.scaleFactor - this.props.imgWidth) / 2;\r\n        const destTop = (dim.height / this.state.scaleFactor - this.props.imgHeight) / 2;\r\n        return {left: destLeft, top: destTop};\r\n    }\r\n\r\n    renderPiece(model) {\r\n        return (\r\n            <Piece key={model.key}\r\n                model={model}\r\n                width={this.pieceWidth}\r\n                height={this.pieceHeight}\r\n                // isDragged={model.group === this.state.pieces[this.state.draggedPiece].group}\r\n                blockPointerEvents={this.state.draggedPiece !== null}\r\n                onPointerDown={this.pointerDownHandlers[model.key]}/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const boardStyle = {\r\n            transform: `scale(${this.state.scaleFactor})`,\r\n            width: (100 / this.state.scaleFactor) + '%',\r\n            height: (100 / this.state.scaleFactor) + '%'\r\n        };\r\n\r\n        let board;\r\n        if (this.state.gameComplete && this.state.endAnimationComplete) {\r\n            board = (<div className='puzzle-area puzzle-complete' style={boardStyle}></div>);\r\n        } else if (this.state.gameComplete) {\r\n            board = (\r\n                <div className='puzzle-area' style={boardStyle}>\r\n                    <PuzzleCompleteImage startPos={this.getTopLeftPos()} destPos={this.getCenteredImagePos()}\r\n                    width={this.props.imgWidth} height={this.props.imgHeight} onTransitionEnd={this.handleTransitionEnd}/>\r\n                </div>);\r\n        } else {\r\n            const children = this.state.pieces ? this.state.pieces.map(model => this.renderPiece(model)) : null;\r\n            board = (\r\n                <div \r\n                    className={'puzzle-area' + (this.state.draggedPiece !== null ? ' no-scroll' : '')}\r\n                    onPointerMove={this.handlePointerMove}\r\n                    onPointerUp={this.handlePointerUp}\r\n                    style={boardStyle}>\r\n                    <ClipPathContainer edgeDrawer={this.edgeDrawer} pieces={this.state.pieces}/>\r\n                    { children }\r\n                </div>);\r\n        }\r\n        \r\n        return (\r\n            <div className='puzzle-container mt-2'>\r\n                <div className='puzzle-background'></div>\r\n                {board}\r\n                {/* Use a separate div for padding because adding padding directly to the puzzle container\r\n                    can cause the game-completed image to jump at the end of its motion */}\r\n                <div className='pb-3'></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n\r\nexport default class DetailsModal extends Component {\r\n    render() {\r\n        const image = this.props.image;\r\n        \r\n        let body = '';\r\n        if (image && image.source) {\r\n                const credit = (image.source.nameIsTitle ? image.name : 'Photo') + ' by ' + image.author;\r\n                body = ( \r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col md='8'><img src={image.url} alt='Image preview' width='100%'/></Col>\r\n                            <Col md='4' className='mt-3 mt-md-0 pl-md-0'>\r\n                                <p>{credit}</p>\r\n                                <p>Source: {image.source.sourceName}</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='mt-md-3'>\r\n                            <Col>\r\n                                <p className=\"text-break\">\r\n                                    See the original at: <a href={image.source.sourceUrl} target='_blank' rel='external noopener'>{image.source.sourceUrl}</a>\r\n                                </p>\r\n                                {image.source.description ? <p>{image.source.description}</p> : null}\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                ); \r\n            }\r\n\r\n        return(\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}> \r\n                <ModalHeader toggle={this.props.toggleModal}>Image details</ModalHeader>\r\n                {body}\r\n            </Modal>\r\n        );  \r\n    }\r\n}","import { Component } from 'react';\r\nimport DetailsModal from './DetailsModal';\r\n\r\n\r\nexport default class PuzzleTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {modalOpen: false};\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return {modalOpen: !state.modalOpen} });\r\n    }\r\n\r\n    render() {\r\n        const puzzleImage = this.props.puzzleImage;\r\n        if (!puzzleImage) {\r\n            return null;\r\n        }\r\n\r\n        const isPhoto = puzzleImage.source && puzzleImage.source.isPhoto;\r\n        const nameIsTitle = puzzleImage.source && puzzleImage.source.nameIsTitle;\r\n\r\n        const title = nameIsTitle ? <em>{puzzleImage.name}</em> : '';\r\n        let author = '';\r\n        if (puzzleImage.author) {\r\n            if (nameIsTitle) {\r\n                author += `, ${isPhoto ? ' photo' : ''} by `;\r\n            } else if (isPhoto) {\r\n                author += 'Photo by ';\r\n            } else {\r\n                author += 'By '\r\n            }\r\n            author += puzzleImage.author;\r\n        }\r\n        const info = puzzleImage.source ? <button type='button' className='btn btn-link btn-sm text-muted px-1' onClick={this.toggleModal}>more info</button> : '';\r\n\r\n        return (\r\n            <div className='container-fluid container-md mt-3'>\r\n                <div className='row justify-content-center flex-sm-nowrap mx-n2'>\r\n                    <div className='col-2 d-none d-md-block px-2'> </div> \r\n                    <div className='col-auto flex-shrink-1 px-2'>\r\n                        <p className='h5'>{title}{author}</p>\r\n                    </div>\r\n                    <div className='col-auto col-sm-2 px-2'>{info}</div>\r\n                </div>\r\n                <DetailsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} image={puzzleImage} />\r\n            </div>);\r\n    }\r\n}","export class ImageInfo {\r\n    constructor(name, url, defaultRows, defaultCols, author, source, shortName) {\r\n        this.name = name;\r\n        this.url = url;\r\n        this.defaultRows = defaultRows;\r\n        this.defaultCols = defaultCols;\r\n        this.author = author;\r\n        this.source = source;\r\n        this.shortName = shortName ?? name;\r\n    }\r\n}\r\n\r\nexport class ImageSource {\r\n    constructor(sourceName, nameIsTitle=false, isPhoto=false, sourceUrl='', description='') {\r\n        this.sourceName = sourceName;\r\n        this.nameIsTitle = nameIsTitle;\r\n        this.sourceUrl = sourceUrl;\r\n        this.isPhoto = isPhoto;\r\n        this.description = description;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.a8f36cd5.jpg\";","export default __webpack_public_path__ + \"static/media/david-clode-eOSqRq2Qm1c-unsplash.42540cb6.jpg\";","export default __webpack_public_path__ + \"static/media/casey-horner-80UR4DM2Rz0-unsplash.001ae9f7.jpg\";","export default __webpack_public_path__ + \"static/media/van-gogh-roses-nga.8fa9d120.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-lYzgtps0UtQ-unsplash.509dd0a5.jpg\";","export default __webpack_public_path__ + \"static/media/travel-sourced-FsmcD6uKcHk-unsplash.97041d06.jpg\";","import { ImageInfo, ImageSource } from './ImageInfo';\r\n\r\nimport img1 from './images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg';\r\nimport img2 from './images/david-clode-eOSqRq2Qm1c-unsplash.jpg';\r\nimport img3 from './images/casey-horner-80UR4DM2Rz0-unsplash.jpg';\r\nimport img4 from './images/van-gogh-roses-nga.jpg';\r\nimport img5 from './images/scott-webb-lYzgtps0UtQ-unsplash.jpg';\r\nimport img6 from './images/travel-sourced-FsmcD6uKcHk-unsplash.jpg';\r\n\r\n\r\nconst providedImages = [\r\n    new ImageInfo('Red Parrot on the Branch of a Tree', img1, 6, 8, 'Itō Jakuchū', \r\n        new ImageSource('Metropolitan Museum of Art', true, false, 'https://www.metmuseum.org/art/collection/search/57123'), 'Red Parrot'),\r\n    new ImageInfo('Coral', img2, 7, 10, 'David Clode',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/eOSqRq2Qm1c')),\r\n    new ImageInfo('Starry Sky', img3, 7, 10, 'Casey Horner',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/80UR4DM2Rz0')),\r\n    new ImageInfo('Roses', img4, 8, 10, 'Vincent van Gogh',\r\n        new ImageSource('National Gallery of Art', true, false, 'https://www.nga.gov/collection/art-object-page.72328.html')),\r\n    new ImageInfo('Succulents', img5, 8, 5, 'Scott Webb',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/lYzgtps0UtQ')),\r\n    new ImageInfo('Jellyfish', img6, 7, 10, 'Travel Sourced',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/FsmcD6uKcHk'))\r\n];\r\n\r\nexport default providedImages;","import React, { Component } from 'react';\r\nimport { CustomInput, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport { ImageInfo } from './ImageInfo';\r\nimport { clamp } from '../util';\r\nimport presetImages from './providedImages';\r\n\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport './ImagePicker.css';\r\n\r\n\r\nexport default class ImagePicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileInput = React.createRef();\r\n\r\n        this.selectedPreset = presetImages[0];\r\n        this.userImage = null;\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n        this.handleRadioKeyDown = this.handleRadioKeyDown.bind(this);\r\n        this.useUserImage = this.useUserImage.bind(this);\r\n        this.usePresetImage = this.usePresetImage.bind(this);\r\n\r\n        this.state = {\r\n            usingUserImage: false,\r\n            invalidUserImage: false\r\n        };\r\n    }\r\n    \r\n    usePresetImage() {\r\n        this.setState({usingUserImage: false});\r\n        this.props.setSelectedImage(this.selectedPreset);\r\n    }\r\n\r\n    useUserImage() {\r\n        this.setState({usingUserImage: true});\r\n        this.props.setSelectedImage(this.userImage);\r\n    }\r\n    \r\n    // Maintain arrow key navigation between the radio buttons even though they aren't\r\n    // actually part of the same radio group (so that they can be separate tab stops).\r\n    handleRadioKeyDown(e) {\r\n        switch(e.key) {\r\n            case 'ArrowLeft':\r\n            case 'ArrowUp':\r\n            case 'Left':\r\n            case 'Up':\r\n                if (e.target.id === 'radioBtn2') {\r\n                    document.getElementById('radioBtn1').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n            case 'ArrowRight':\r\n            case 'ArrowDown':\r\n            case 'Down':\r\n            case 'Right':\r\n                if (e.target.id === 'radioBtn1') {\r\n                    document.getElementById('radioBtn2').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n        }\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        this.usePresetImage();\r\n\r\n        const select = e.target;\r\n        if (select.selectedIndex !== -1) {\r\n            this.selectedPreset = presetImages[select.selectedIndex];\r\n            this.props.setSelectedImage(this.selectedPreset);            \r\n        }\r\n    }\r\n\r\n    handleFileChange() {\r\n        this.useUserImage();\r\n        \r\n        const file = this.fileInput.current.files[0];\r\n        const fileUrl = URL.createObjectURL(file);\r\n        \r\n        const testLoader = new Image();\r\n        testLoader.onerror = () => {\r\n            URL.revokeObjectURL(fileUrl);\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            this.userImage = null;            \r\n            this.setState({invalidUserImage: true});\r\n            this.props.setSelectedImage(null);\r\n        };\r\n        testLoader.onload = () => {\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            const dim = this.generateDefaultDimensions(testLoader.naturalWidth, testLoader.naturalHeight);\r\n            this.userImage = new ImageInfo(file.name, fileUrl, dim.rows, dim.cols);\r\n            this.setState({invalidUserImage: false});\r\n            this.props.setSelectedImage(this.userImage);\r\n        };\r\n        testLoader.src = fileUrl;\r\n    }\r\n\r\n    // Tries to choose a good default based on the image aspect ratio;\r\n    // could go further and tailor the target rows+columns to the viewport size\r\n    generateDefaultDimensions(width, height) {\r\n        const target = 15;\r\n        const minBound = this.props.minPuzzleDimension;\r\n        const aspect = width / height;\r\n\r\n        // cols = (width / height) * rows\r\n        // cols + rows = target\r\n        const rows = clamp(Math.round(target / (aspect + 1)), minBound, target - minBound);\r\n        const cols = target - rows;\r\n\r\n        return {rows: rows, cols: cols};\r\n    }\r\n\r\n    renderSelectOptions() {\r\n        const options = [];\r\n        for (let i = 0; i < presetImages.length; i++) {\r\n            const img = presetImages[i];\r\n            options.push(<option key={i} value={img.url}>{img.shortName}</option>);\r\n        }\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const presetBtnStyle = this.state.usingUserImage ? 'btn-outline-dark' : 'btn-dark';\r\n        const userBtnStyle = this.state.usingUserImage ? 'btn-dark' : 'btn-outline-dark';\r\n\r\n        return (\r\n            <div className='input-group'>\r\n                <div className='input-group-prepend col-12 col-lg-6 pr-lg-0'>\r\n                    <div className={`btn ${presetBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.usePresetImage}>\r\n                        <input readOnly className='col-auto' id='radioBtn1' type='radio'\r\n                            checked={!this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown}/>\r\n                        <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn1'>Choose an image:</label>\r\n                        <div className='w-100 d-sm-none'></div>\r\n                        <label className='sr-only' htmlFor='puzzle-image-select'>Select image</label>\r\n                        <select className='custom-select col mr-lg-4' id='puzzle-image-select' onChange={this.handleSelectChange}>\r\n                            {this.renderSelectOptions()}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='input-group-append col-12 col-lg-6 pl-lg-0'>\r\n                    <div className={`btn ${userBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.useUserImage}>\r\n                        <input readOnly className='col-auto order-first order-lg-last ml-lg-3' id='radioBtn2' type='radio'\r\n                            checked={this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown}/>\r\n                        <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn2'>Or use your own:</label>\r\n                        <div className='w-100 d-sm-none'></div>\r\n                        <CustomInput className='col text-left' id='file-input' type='file' accept='image/*' innerRef={this.fileInput}\r\n                            invalid={this.state.invalidUserImage} onChange={this.handleFileChange}/>\r\n                        <a className='unstyled ml-2' id='show-tooltip' href='#' onClick={(e) => {e.preventDefault(); e.stopPropagation();}}>\r\n                            <i className='bi-info-circle icon-lg'></i>\r\n                        </a>\r\n                        <UncontrolledTooltip placement='top' target='show-tooltip'>\r\n                            Images are only used locally in your browser and are never uploaded or sent over the Internet.\r\n                        </UncontrolledTooltip>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\n\r\nexport default class SettingsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleDimensionsChange = this.handleDimensionsChange.bind(this);\r\n        this.handleDimensionsBlur = this.handleDimensionsBlur.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const color = document.documentElement.style.getPropertyValue('--puzzle-bg');\r\n        this.setState({color: color ? color : '#adb5bd'});\r\n    }\r\n\r\n    handleDimensionsChange(e) {\r\n        this.props.setDimension(e.target.name, e.target.valueAsNumber);\r\n    }\r\n\r\n    handleDimensionsBlur(e) {\r\n        this.props.setDimension(e.target.name, this.validateDimension(e.target.value));\r\n    }\r\n\r\n    handleColorChange(e) {\r\n        const color = e.target.value;\r\n        this.setState({color: color});\r\n        document.documentElement.style.setProperty('--puzzle-bg', color);\r\n    }\r\n    \r\n    validateDimension(val) {\r\n        let result = parseInt(val, 10);\r\n        if (isNaN(result) || result < this.props.minPuzzleDimension) {\r\n            result = this.props.minPuzzleDimension;\r\n        } else if (result > this.props.maxPuzzleDimension) {\r\n            result = this.props.maxPuzzleDimension;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const rowsVal = isNaN(this.props.rows) ? '' : this.props.rows;\r\n        const colsVal = isNaN(this.props.cols) ? '' : this.props.cols;\r\n\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Settings</ModalHeader>\r\n                <ModalBody>\r\n                    <form className='container'>\r\n                        <div className='form-group row mb-4'>\r\n                            <label className='col-form-label mr-2 my-2' htmlFor='row-input'>Rows:</label>\r\n                            <input className='mr-2 my-2' id='row-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension}\r\n                                name='rows' value={rowsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur}/>\r\n                            \r\n                            <label className='col-form-label mr-2 my-2' htmlFor='col-input'>Columns:</label>\r\n                            <input className='mr-2 my-2' id='col-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension} \r\n                                name='cols' value={colsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur}/>\r\n                            \r\n                            <small className='col text-muted'>Changes to rows and columns take effect the next time a new puzzle is started.</small>\r\n                        </div>\r\n\r\n                        <div className='form-group row mb-4'>\r\n                            <label className='col-auto col-form-label pl-0' htmlFor='color-input'>Background color:</label>\r\n                            <Input className='col' id='color-input' type='color' value={this.state.color} onChange={this.handleColorChange}/>\r\n                        </div>\r\n                        \r\n                        <div className='form-group row justify-content-end'>\r\n                            <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.props.toggleModal}>Done</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\n\r\nimport ImagePicker from './ImagePicker';\r\nimport SettingsModal from './SettingsModal';\r\nimport presetImages from './providedImages';\r\n\r\n\r\nconst minPuzzleDimension = 2;\r\nconst maxPuzzleDimension = 25;\r\n\r\nexport default class PuzzleControls extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.setSelectedImage = this.setSelectedImage.bind(this);\r\n        this.setDimension = this.setDimension.bind(this);\r\n        this.newPuzzle = this.newPuzzle.bind(this);\r\n        \r\n        this.state = {\r\n            modalOpen: false,\r\n            selectedImage: presetImages[0],\r\n            rows: presetImages[0].defaultRows,\r\n            cols: presetImages[0].defaultCols\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.newPuzzle();\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return {modalOpen: !state.modalOpen} });\r\n    }\r\n    \r\n    setSelectedImage(imageInfo) {\r\n        if (imageInfo !== this.state.selectedImage) {\r\n            const rows = imageInfo ? imageInfo.defaultRows : this.state.rows;\r\n            const cols = imageInfo ? imageInfo.defaultCols : this.state.cols;\r\n            this.setState({selectedImage: imageInfo, rows: rows, cols: cols});\r\n        }\r\n    }\r\n    \r\n    setDimension(name, val) {\r\n        this.setState({[name]: val});\r\n    }\r\n\r\n    newPuzzle() {\r\n        if (!this.state.selectedImage) {\r\n            return;\r\n        }\r\n\r\n        const img = this.state.selectedImage;\r\n        document.documentElement.style.setProperty('--puzzle-img', `url(${img.url})`);\r\n        \r\n        const sizeTester = new Image();\r\n        sizeTester.onerror = () => console.log(\"Failed to load image\");\r\n        sizeTester.onload = () => this.props.newPuzzle(\r\n            sizeTester.naturalWidth,\r\n            sizeTester.naturalHeight,\r\n            this.state.rows,\r\n            this.state.cols,\r\n            img\r\n        );\r\n        sizeTester.src = img.url;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='container mt-4'>\r\n                <div className='row mb-3'>\r\n                    <ImagePicker setSelectedImage={this.setSelectedImage} minPuzzleDimension={minPuzzleDimension}/>\r\n                </div>\r\n\r\n                <div className='row justify-content-center align-items-end mx-n1'>\r\n                    <div className='col d-none d-md-block px-2'></div>\r\n                    \r\n                    <div className='col-auto px-2'>\r\n                        <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.newPuzzle}\r\n                            disabled={!this.state.selectedImage || this.state.modalOpen}>\r\n                            New puzzle\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='col-auto col-md px-2'>\r\n                        <button className='btn btn-outline-dark' type='button' onClick={this.toggleModal}>\r\n                            <i className='bi bi-gear-fill pr-2'></i>Settings\r\n                        </button>\r\n                    </div>\r\n\r\n                    <SettingsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} rows={this.state.rows} cols={this.state.cols} setDimension={this.setDimension}\r\n                        minPuzzleDimension={minPuzzleDimension} maxPuzzleDimension={maxPuzzleDimension}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Puzzle from './puzzle/Puzzle.js';\nimport PuzzleTitle from './title/PuzzleTitle.js';\nimport PuzzleControls from './controls/PuzzleControls.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nlet puzzleKey = 1;\n\nfunction renderPuzzle(width, height, rows, columns, image) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <PuzzleControls newPuzzle={renderPuzzle} />\n            <PuzzleTitle puzzleImage={image} />\n            <Puzzle key={++puzzleKey} imgWidth={width} imgHeight={height} rows={rows} cols={columns} />\n        </React.StrictMode>,\n        document.getElementById('react-root')\n    );\n}\n\n// Initial render so that PuzzleControls can set up, which then calls renderPuzzle() when loaded (is there a better way to design this?)\nReactDOM.render(\n    <React.StrictMode>\n        <PuzzleControls newPuzzle={renderPuzzle} />\n    </React.StrictMode>,\n    document.getElementById('react-root')\n);\n"],"sourceRoot":""}