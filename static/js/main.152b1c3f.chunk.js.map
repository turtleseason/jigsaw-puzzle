{"version":3,"sources":["util.js","puzzle/Edges.js","puzzle/EdgeStyleInfo.js","puzzle/Sides.js","puzzle/GroupModel.js","puzzle/PieceModel.js","puzzle/ClipPath.js","puzzle/ClipPathContainer.js","puzzle/EdgePathDrawer.js","puzzle/Piece.js","puzzle/PuzzleCompleteImage.js","puzzle/PuzzleBoard.js","puzzle/Puzzle.js","title/DetailsModal.js","title/PuzzleTitle.js","controls/ImageInfo.js","controls/ImageSearchModalErrorMessage.js","controls/ImageSearchModalResults.js","controls/Pagination.js","controls/ImageSearchModal.js","controls/images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg","controls/images/david-clode-eOSqRq2Qm1c-unsplash.jpg","controls/images/casey-horner-80UR4DM2Rz0-unsplash.jpg","controls/images/van-gogh-roses-nga.jpg","controls/images/scott-webb-lYzgtps0UtQ-unsplash.jpg","controls/images/travel-sourced-FsmcD6uKcHk-unsplash.jpg","controls/providedImages.js","controls/ImagePicker.js","controls/SettingsModal.js","controls/PuzzleControls.js","info/CompatibilityInfoModal.js","info/CompatibilityInfo.js","index.js"],"names":["range","i","Array","from","keys","randomInt","max","Math","floor","random","clamp","x","min","Error","BUMP","RECESS","FLAT","getRandomEdgeType","types","length","getOppositeEdge","edge","EdgeStyleInfo","type","neckWidth","offset","control1","control2","this","w","o","c1","c2","Object","assign","LEFT","TOP","RIGHT","BOTTOM","Sides","Symbol","iterator","GroupModel","piece","key","pieces","bounds","col","row","other","concat","PieceModel","pos","imageOffset","zIndex","edges","neighbors","group","setPos","actualPos","_","left","top","displayPos","copy","setDisplayPos","ClipPath","clipPathString","side","props","edgeDrawer","getPathString","id","pieceKey","d","getClipPathString","PureComponent","ClipPathContainer","model","children","map","renderClipPath","width","height","EdgePathDrawer","pieceWidth","pieceHeight","borderSize","templates","makeTemplates","pW","pH","b","edgeStyleInfo","start","end","mid","Piece","style","position","className","clipPath","onPointerDown","href","imgUrl","y","onDragStart","e","preventDefault","PuzzleCompleteImage","state","startPos","handleTransitionEnd","setState","animationComplete","requestAnimationFrame","src","alt","onTransitionEnd","Component","PuzzleBoard","imgWidth","imgHeight","boardSize","getBoardDimensions","topLeftPiece","topLeftKey","centerLeft","scaleFactor","centerTop","pointerDownHandlers","draggedPiece","gameComplete","onPointerMove","onPointerUp","boardStyle","transform","board","getPuzzleOffsetFromCenter","renderPiece","Puzzle","innerWidth","cols","innerHeight","rows","nextzIndex","undefined","offsetX","offsetY","endAnimationComplete","handlePointerDown","isPrimary","pointerType","button","slice","groupKey","groups","get","k","clone","clientX","clientY","handlePointerMove","document","elementsFromPoint","some","element","classList","contains","alignPiece","handlePointerUp","p","neighbor","isTouching","mergeGroups","size","handleResize","setScaleFactor","clampPiecesToBoardBounds","bind","window","addEventListener","createPieces","createGroups","removeEventListener","widthScale","documentElement","clientWidth","heightScale","clientHeight","querySelector","dimensions","maxBoundX","maxBoundY","entries","xBound","yBound","spacing","availableKeys","keysByGridPos","fill","splice","getRandomPosition","getPieceImageOffset","createEdge","opposite","Map","forEach","set","alignWith","snapRange","abs","g1","g2","refPiece","mergeWith","delete","DetailsModal","image","body","source","credit","nameIsTitle","name","author","ModalBody","Row","Col","md","url","sourceName","sourceUrl","target","rel","description","Modal","toggle","toggleModal","isOpen","centered","ModalHeader","PuzzleTitle","modalOpen","puzzleImage","isPhoto","title","info","onClick","ImageInfo","defaultRows","defaultCols","shortName","ImageSource","ErrorInfo","statusCode","details","ImageSearchModalErrorMessage","err","error","text","errInfo","errDetails","errDisplay","getErrorDisplay","role","ImageSearchModalResults","index","chooseImage","images","page","tagName","img","isSelected","selectedImage","tabIndex","handleImageClick","onKeyDown","handleKeyDown","paddingTop","urls","small","alt_description","user","links","html","initialText","noResultsText","spinner","isLoading","renderImage","Pagination","newPage","onPageChange","currentPage","numPageLinks","minPage","push","cursor","content","maxPage","handleNavigate","ariaLabel","customAttributes","outerClassName","outerAriaLabel","isFirst","isLast","pageLinks","renderPageLinks","defaultProps","Number","MAX_SAFE_INTEGER","ImageSearchModal","handleInputChange","handleInputKeyDown","handlePageChange","handleSearchButtonClick","handleChooseButtonClick","selectImage","proxyUrl","process","searchBoxRef","React","createRef","searchString","isSearchStringValid","isSearchLoading","value","current","scrollIntoView","searchImages","query","encodeURIComponent","photoId","newImages","totalPages","dim","generateDefaultDimensions","setImage","regular","trackDownload","isValid","test","validateQuery","fetch","getSearchUrl","then","response","ok","console","warn","status","statusText","json","upstreamResponse","errors","join","addImages","results","total_pages","catch","TypeError","message","finally","getDownloadUrl","hasResults","scrollable","ref","htmlFor","onChange","ModalFooter","disabled","providedImages","img1","img2","img3","img4","img5","img6","ImagePicker","fileInput","selectedPreset","presetImages","userImage","useUserImage","usePresetImage","setPresetImage","setUnsplashImage","handleSelectChange","handleFileChange","handleRadioKeyDown","selectedOption","usingUserImage","invalidUserImage","unsplashImage","setSelectedImage","getElementById","focus","select","selectedIndex","file","files","fileUrl","URL","createObjectURL","testLoader","Image","onerror","revokeObjectURL","onload","naturalWidth","naturalHeight","minBound","minPuzzleDimension","aspect","round","options","presetBtnStyle","userBtnStyle","readOnly","checked","renderSelectOptions","color","CustomInput","accept","innerRef","invalid","stopPropagation","UncontrolledTooltip","placement","SettingsModal","handleDimensionsChange","handleDimensionsBlur","handleColorChange","getPropertyValue","setDimension","valueAsNumber","validateDimension","setProperty","val","result","parseInt","isNaN","maxPuzzleDimension","rowsVal","colsVal","onBlur","Input","PuzzleControls","newPuzzle","imageInfo","sizeTester","log","CompatibilityInfoModal","CompatibilityInfo","puzzleKey","ReactDOM","render","StrictMode","renderPuzzle","columns"],"mappings":"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","file":"static/js/main.152b1c3f.chunk.js","sourcesContent":["// Returns an array containing int values from 0 (inclusive) to i (exclusive).\r\nexport function range(i) {\r\n    return Array.from(Array(i).keys());\r\n}\r\n\r\n// Returns a random integer between 0 (inclusive) and max (exclusive).\r\nexport function randomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n// Restricts x to the range between min and max (inclusive).\r\nexport function clamp(x, min, max) {\r\n    if (min > max) {\r\n        throw Error(`clamp: min (${min}) is greater than max (${max}).`);\r\n    }\r\n    return Math.max(Math.min(x, max), min);\r\n}\r\n\r\n// Creates an object where the \"keys\" iterable provides the keys\r\n// and each value is the result of passing its corresponding key to keyToValueFunc.\r\nexport function objectMap(keys, keyToValueFunc) {\r\n    const obj = {};\r\n    for (const i of keys) {\r\n        obj[i] = keyToValueFunc(i);\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function isEmptyOrWhitespace(str) {\r\n    const regExp = /^\\s*$/;\r\n    return regExp.test(str);\r\n}","import { randomInt } from '../util';\r\n\r\n\r\nexport const BUMP = 'b';\r\nexport const RECESS = 'r';\r\nexport const FLAT = 'f';\r\n\r\n// Excludes FLAT since that edge type isn't assigned randomly.\r\nexport function getRandomEdgeType() {\r\n    const types = [BUMP, RECESS];\r\n    return types[randomInt(types.length)];\r\n}\r\n\r\nexport function getOppositeEdge(edge) {\r\n    switch (edge) {\r\n        case BUMP:\r\n            return RECESS;\r\n        case RECESS:\r\n            return BUMP;\r\n        case FLAT:\r\n            throw Error(`getOppositeEdge: Flat edge has no opposite type`);\r\n        default:\r\n            throw Error(`getOppositeEdge: Unknown edge type ${edge}`);\r\n    }\r\n}","import { getOppositeEdge } from './Edges';\r\n\r\n// Contains the properties needed to draw a specific puzzle piece edge:\r\n// its overall type (bump, recess, flat) and any constants needed to define its shape.\r\nexport default class EdgeStyleInfo {\r\n    constructor(type, neckWidth, offset, control1, control2) {\r\n        this.type = type;\r\n        this.w = neckWidth;     // The width of the area where the bump meets the edge of the piece.\r\n        this.o = offset;        // Controls the distance between the widest part of the bump and the edge of the piece.\r\n        this.c1 = control1;     // Controls the width of the widest part of the bump.\r\n        this.c2 = control2;     // Controls the width near the tallest part of the bump (affects the smoothness/pointiness of the curve).\r\n    }\r\n\r\n    // Returns an EdgeStyleInfo object for an edge that fits with this one:\r\n    // if this is a bump edge, opposite() returns a matching recess edge, and vice-versa.\r\n    // Will fail if called on a flat edge.\r\n    opposite() {\r\n        return Object.assign(new EdgeStyleInfo(), this, { type: getOppositeEdge(this.type) });\r\n    }\r\n}","export const LEFT = 'Left';\r\nexport const TOP = 'Top';\r\nexport const RIGHT = 'Right';\r\nexport const BOTTOM = 'Bottom';\r\n\r\n// Use this to iterate through all four sides in a consistent order.\r\nexport const Sides = {\r\n    *[Symbol.iterator]() {\r\n        yield LEFT;\r\n        yield TOP;\r\n        yield RIGHT;\r\n        yield BOTTOM;\r\n    }\r\n};","import { LEFT, TOP, RIGHT, BOTTOM } from './Sides.js';\r\n\r\nexport default class GroupModel {\r\n    constructor(piece) {\r\n        this.key = piece.key;\r\n        this.pieces = [piece.key];\r\n        this.bounds = { [LEFT]: piece.col, [TOP]: piece.row, [RIGHT]: piece.col, [BOTTOM]: piece.row };\r\n    }\r\n\r\n    mergeWith(other) {\r\n        this.pieces = this.pieces.concat(other.pieces);\r\n\r\n        this.bounds[LEFT] = Math.min(this.bounds[LEFT], other.bounds[LEFT]);\r\n        this.bounds[RIGHT] = Math.max(this.bounds[RIGHT], other.bounds[RIGHT]);\r\n        this.bounds[TOP] = Math.min(this.bounds[TOP], other.bounds[TOP]);\r\n        this.bounds[BOTTOM] = Math.max(this.bounds[BOTTOM], other.bounds[BOTTOM]);\r\n    }\r\n}","// Stores the state of a single puzzle piece.\r\n//\r\n// Never mutate pos or displayPos's left/top properties; always set them using setPos() or setDisplayPos()\r\n// to ensure that the Piece re-renders properly and that pos and displayPos stay in sync. \r\n\r\nexport default class PieceModel {\r\n\r\n    // All parameters should be integers except:\r\n    // pos, bgPos: Objects with the properties 'left' and 'top', each set to a number.\r\n    // edges:      An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to an EdgeStyleInfo object.\r\n    // neighbors:  An object with the properties LEFT, TOP, RIGHT, and BOTTOM (see Sides.js),\r\n    //             each set to the key of another PieceModel or undefined.  \r\n    // \r\n    constructor(key, col, row, pos, imageOffset, zIndex, edges, neighbors) {\r\n        // By default, a new piece is inserted into the group with the same id as its key.\r\n        this.group = key;\r\n\r\n        this.key = key;\r\n        this.col = col;\r\n        this.row = row;\r\n        this.imageOffset = imageOffset;\r\n        this.zIndex = zIndex;\r\n        this.edges = edges;\r\n        this.neighbors = neighbors;\r\n\r\n        this.setPos(pos);\r\n    }\r\n\r\n    get pos() {\r\n        return this.actualPos;\r\n    }\r\n\r\n    set pos(_) {\r\n        throw Error('PieceModel: Don\\'t set \"pos\" directly - use setPos() instead.');\r\n    }\r\n\r\n    // 'pos' is the piece's original position before clamping; it doesn't change when the board is resized\r\n    // so that if the board is expanded again, the piece can return to its original position.\r\n    setPos({ left, top }) {\r\n        this.actualPos = { left, top };\r\n        this.displayPos = this.actualPos;\r\n    }\r\n\r\n    // 'displayPos' is the piece's clamped position; if the board is resized so that the piece would end up outside the board,\r\n    // its display position is set to keep it in bounds.\r\n    // When the piece is interacted with (picked up or merged with another piece/group), displayPos becomes the piece's actual position.\r\n    setDisplayPos({ left, top }) {\r\n        this.displayPos = { left, top };\r\n    }\r\n\r\n    clone() {\r\n        const copy = new PieceModel(this.key, this.col, this.row, this.pos, this.imageOffset,\r\n            this.zIndex, this.edges, this.neighbors);\r\n        copy.group = this.group;\r\n        copy.setDisplayPos(this.displayPos);\r\n        return copy;\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport { Sides } from './Sides.js';\r\n\r\n\r\nexport default class ClipPath extends PureComponent {\r\n    getClipPathString(edges) {\r\n        let clipPathString = '';\r\n        for (const side of Sides) {\r\n            clipPathString += this.props.edgeDrawer.getPathString(side, edges[side]);\r\n        }\r\n        return clipPathString;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <clipPath id={'clip-' + this.props.pieceKey}>\r\n                <path d={this.getClipPathString(this.props.edges)} />\r\n            </clipPath>\r\n        );\r\n    }\r\n}","import { PureComponent } from 'react';\r\nimport ClipPath from './ClipPath.js';\r\n\r\n\r\nexport default class ClipPathContainer extends PureComponent {\r\n    renderClipPath(model) {\r\n        return <ClipPath key={model.key} edgeDrawer={this.props.edgeDrawer} pieceKey={model.key} edges={model.edges} />;\r\n    }\r\n\r\n    render() {\r\n        const children = this.props.pieces?.map(model => this.renderClipPath(model));\r\n        return (\r\n            <svg width='0' height='0'>\r\n                {children}\r\n            </svg>\r\n        );\r\n    }\r\n}","import { BUMP, RECESS, FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM } from './Sides';\r\n\r\n\r\nconst START = 'START';\r\n\r\nexport default class EdgePathDrawer {\r\n    constructor(pieceWidth, pieceHeight, borderSize) {\r\n        this.templates = this.makeTemplates(pieceWidth, pieceHeight, borderSize);\r\n    }\r\n\r\n    makeTemplates(pW, pH, b) {\r\n        const templates = {};\r\n\r\n        templates[START] = `M ${b} ${pH - b} `;\r\n\r\n        templates[BUMP + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`\r\n            + `C ${b - o} ${pH / 2 + c1} ${0} ${pH / 2 + c2} ${0} ${pH / 2} `\r\n            + `C ${0} ${pH / 2 - c2} ${b - o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[RECESS + LEFT] = (w, o, c1, c2) => `V ${(pH + w) / 2}`\r\n            + `C ${b + o} ${pH / 2 + c1} ${b * 2} ${pH / 2 + c2} ${b * 2} ${pH / 2} `\r\n            + `C ${b * 2} ${pH / 2 - c2} ${b + o} ${pH / 2 - c1} ${b} ${(pH - w) / 2} `;\r\n        templates[LEFT] = `V ${b} `;\r\n\r\n        templates[BUMP + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b - o} ${pW / 2 - c2} ${0} ${pW / 2} ${0} `\r\n            + `C ${pW / 2 + c2} ${0} ${pW / 2 + c1} ${b - o} ${(pW + w) / 2} ${b} `;\r\n        templates[RECESS + TOP] = (w, o, c1, c2) => `H ${(pW - w) / 2} `\r\n            + `C ${pW / 2 - c1} ${b + o}  ${pW / 2 - c2} ${b * 2} ${pW / 2} ${b * 2} `\r\n            + `C ${pW / 2 + c2} ${b * 2} ${pW / 2 + c1} ${b + o} ${(pW + w) / 2} ${b} `;\r\n        templates[TOP] = `H ${pW - b} `;\r\n\r\n        templates[BUMP + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b + o} ${pH / 2 - c1} ${pW} ${pH / 2 - c2} ${pW} ${pH / 2} `\r\n            + `C ${pW} ${pH / 2 + c2} ${pW - b + o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RECESS + RIGHT] = (w, o, c1, c2) => `V ${(pH - w) / 2} `\r\n            + `C ${pW - b - o} ${pH / 2 - c1} ${pW - b * 2} ${pH / 2 - c2} ${pW - b * 2} ${pH / 2} `\r\n            + `C ${pW - b * 2} ${pH / 2 + c2} ${pW - b - o} ${pH / 2 + c1} ${pW - b} ${(pH + w) / 2} `;\r\n        templates[RIGHT] = `V ${pH - b} `;\r\n\r\n        templates[BUMP + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b + o} ${pW / 2 + c2} ${pH} ${pW / 2} ${pH} `\r\n            + `C ${pW / 2 - c2} ${pH} ${pW / 2 - c1} ${pH - b + o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[RECESS + BOTTOM] = (w, o, c1, c2) => `H ${(pW + w) / 2} `\r\n            + `C ${pW / 2 + c1} ${pH - b - o}  ${pW / 2 + c2} ${pH - b * 2} ${pW / 2} ${pH - b * 2} `\r\n            + `C ${pW / 2 - c2} ${pH - b * 2} ${pW / 2 - c1} ${pH - b - o} ${(pW - w) / 2} ${pH - b} `;\r\n        templates[BOTTOM] = `Z`;\r\n\r\n        return templates;\r\n    }\r\n\r\n    getPathString(side, edgeStyleInfo) {\r\n        const start = (side === LEFT) ? this.templates[START] : '';\r\n        const end = this.templates[side];\r\n\r\n        let mid = '';\r\n        if (edgeStyleInfo.type !== FLAT) {\r\n            const key = edgeStyleInfo.type + side;\r\n            mid = this.templates[key](edgeStyleInfo.w, edgeStyleInfo.o, edgeStyleInfo.c1, edgeStyleInfo.c2);\r\n        }\r\n\r\n        return start + mid + end;\r\n    }\r\n}","import { PureComponent } from 'react';\r\n\r\nexport default class Piece extends PureComponent {\r\n    render() {\r\n        const model = this.props.model;\r\n        return (\r\n            // Set the position on a wrapper div because if it's set directly on the svg, Firefox fails to re-render\r\n            // with the updated position when pieces 'snap' together, for some reason\r\n            <div style={{ left: model.displayPos.left, top: model.displayPos.top, position: 'absolute' }}>\r\n                <svg\r\n                    className='puzzle-piece'\r\n                    data-id={model.key}\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                    clipPath={`url(#clip-${model.key})`}\r\n                    style={{ zIndex: (model.zIndex > 0 ? model.zIndex : 'auto') }}\r\n                    onPointerDown={this.props.onPointerDown}>\r\n                    <image\r\n                        href={this.props.imgUrl}\r\n                        x={this.props.model.imageOffset.left}\r\n                        y={this.props.model.imageOffset.top}\r\n                        onDragStart={(e) => e.preventDefault()} />\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","// When the puzzle is finished, the separate pieces merge together into a single image and animate towards the center of the board.\r\n//\r\n// (Once the animation completes, this image is replaced with a background image on the puzzle board\r\n//  because the background image can automatically adjust its position when the page is resized,\r\n//  which is simpler and easier than keeping it centered manually.)\r\n\r\nimport { Component } from 'react';\r\n\r\nexport default class PuzzleCompleteImage extends Component {\r\n    state = { ...this.props.startPos };\r\n\r\n    componentDidMount() {\r\n        // Change on the second frame to ensure the image is drawn at the original position at least once.\r\n        requestAnimationFrame(() => requestAnimationFrame(() => this.setState({ top: 0, left: 0 })));\r\n    }\r\n\r\n    handleTransitionEnd = () => {\r\n        this.setState({ animationComplete: true });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <img\r\n                className='puzzle-complete-img'\r\n                src={this.props.imgUrl}\r\n                alt='Completed puzzle'\r\n                width={this.props.width}\r\n                height={this.props.height}\r\n                style={this.state}\r\n                onTransitionEnd={this.handleTransitionEnd} />\r\n        );\r\n    }\r\n}","// Handles displaying the puzzle using state passed down from Puzzle.\r\n\r\nimport { Component } from \"react\";\r\n\r\nimport ClipPathContainer from './ClipPathContainer';\r\nimport EdgePathDrawer from './EdgePathDrawer';\r\nimport Piece from './Piece';\r\nimport PuzzleCompleteImage from './PuzzleCompleteImage';\r\n\r\nexport default class PuzzleBoard extends Component {\r\n    imgUrl = this.props.imgUrl;\r\n    imgWidth = this.props.imgWidth;\r\n    imgHeight = this.props.imgHeight;\r\n    pieceWidth = this.props.pieceWidth;\r\n    pieceHeight = this.props.pieceHeight;\r\n\r\n    edgeDrawer = new EdgePathDrawer(this.props.pieceWidth, this.props.pieceHeight, this.props.borderSize);\r\n\r\n    // Gets the offset of the puzzle's current position (measured by the top left piece)\r\n    // from the position where it would be centered within the game board.\r\n    getPuzzleOffsetFromCenter() {\r\n        const boardSize = this.props.getBoardDimensions();\r\n        const topLeftPiece = this.props.pieces[this.props.topLeftKey].pos;\r\n\r\n        const centerLeft = (boardSize.width / this.props.scaleFactor - this.props.imgWidth) / 2;\r\n        const centerTop = (boardSize.height / this.props.scaleFactor - this.props.imgHeight) / 2;\r\n\r\n        const imageLeft = topLeftPiece.left + this.props.borderSize;\r\n        const imageTop = topLeftPiece.top + this.props.borderSize;\r\n\r\n        return { left: imageLeft - centerLeft, top: imageTop - centerTop, };\r\n    }\r\n\r\n    renderPiece(model) {\r\n        return (\r\n            <Piece\r\n                key={model.key}\r\n                model={model}\r\n                width={this.pieceWidth}\r\n                height={this.pieceHeight}\r\n                imgUrl={this.imgUrl}\r\n                onPointerDown={this.props.pointerDownHandlers[model.key]} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { scaleFactor, pieces, draggedPiece, gameComplete, onPointerMove, onPointerUp } = this.props;\r\n\r\n        const boardStyle = {\r\n            transform: `scale(${scaleFactor})`,\r\n            width: (100 / scaleFactor) + '%',\r\n            height: (100 / scaleFactor) + '%'\r\n        };\r\n\r\n        const board = gameComplete ? (\r\n            <div className='puzzle-area' style={boardStyle}>\r\n                <PuzzleCompleteImage\r\n                    imgUrl={this.imgUrl}\r\n                    startPos={this.getPuzzleOffsetFromCenter()}\r\n                    width={this.imgWidth}\r\n                    height={this.imgHeight}\r\n                />\r\n            </div>\r\n        ) : (\r\n            <div\r\n                className={'puzzle-area' + (draggedPiece !== null ? ' no-scroll' : '')}\r\n                style={boardStyle}\r\n                onPointerMove={onPointerMove}\r\n                onPointerUp={onPointerUp}\r\n            >\r\n                <ClipPathContainer edgeDrawer={this.edgeDrawer} pieces={pieces} />\r\n                {pieces?.map(model => this.renderPiece(model))}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className='puzzle-container pt-2 pb-3'>\r\n                <div className='puzzle-background'></div>\r\n                {board}\r\n            </div>\r\n        );\r\n    }\r\n}","// Handles the main puzzle logic.\r\n\r\nimport { Component } from 'react';\r\nimport EdgeStyleInfo from './EdgeStyleInfo';\r\nimport GroupModel from './GroupModel';\r\nimport PieceModel from './PieceModel';\r\nimport PuzzleBoard from './PuzzleBoard';\r\n\r\nimport { getRandomEdgeType } from './Edges';\r\nimport { FLAT } from './Edges';\r\nimport { LEFT, TOP, RIGHT, BOTTOM, Sides } from './Sides';\r\nimport { range, randomInt } from '../util';\r\n\r\nimport './Puzzle.css';\r\n\r\nconst MAX_WIDTH_SCALE = .7;   // The maximum percentage of the window width that the puzzle image should take up. \r\nconst MAX_HEIGHT_SCALE = .7;  // The maximum percentage of the window height that the puzzle image should take up. \r\n\r\nexport default class Puzzle extends Component {\r\n    innerWidth = this.props.imgWidth / this.props.cols;\r\n    innerHeight = this.props.imgHeight / this.props.rows;\r\n    borderSize = Math.min(this.innerHeight, this.innerWidth) / 4;\r\n    pieceWidth = 2 * this.borderSize + this.innerWidth;\r\n    pieceHeight = 2 * this.borderSize + this.innerHeight;\r\n\r\n    groups;\r\n    nextzIndex = 1;\r\n\r\n    topLeftKey;\r\n\r\n    state = {\r\n        scaleFactor: undefined,\r\n        offsetX: undefined,\r\n        offsetY: undefined,\r\n        pieces: undefined,\r\n        draggedPiece: null,\r\n        gameComplete: false,\r\n        endAnimationComplete: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.pointerDownHandlers = range(this.props.rows * this.props.cols).map(i => this.handlePointerDown.bind(this, i));\r\n    }\r\n\r\n    componentDidMount() {\r\n        const scaleFactor = this.setScaleFactor();\r\n        window.addEventListener('resize', this.handleResize);\r\n\r\n        const pieces = this.createPieces(scaleFactor);\r\n        this.groups = this.createGroups(pieces);\r\n        this.setState({ pieces });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    setScaleFactor() {\r\n        const widthScale = MAX_WIDTH_SCALE * document.documentElement.clientWidth / this.props.imgWidth;\r\n        const heightScale = MAX_HEIGHT_SCALE * document.documentElement.clientHeight / this.props.imgHeight;\r\n        const scaleFactor = Math.min(widthScale, heightScale);\r\n        this.setState({ scaleFactor });\r\n        return scaleFactor;\r\n    }\r\n\r\n    getBoardDimensions() {\r\n        // Return a dummy value if board not found? Or just let it throw an error?\r\n        const board = document.querySelector('.puzzle-background');\r\n        return { width: board.clientWidth, height: board.clientHeight };\r\n    }\r\n\r\n    clampPiecesToBoardBounds(scaleFactor) {\r\n        const dimensions = this.getBoardDimensions();\r\n        const maxBoundX = dimensions.width / scaleFactor - this.pieceWidth;\r\n        const maxBoundY = dimensions.height / scaleFactor - this.pieceHeight;\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        for (const [i, piece] of pieces.entries()) {\r\n            const group = this.groups.get(piece.group);\r\n            const xBound = maxBoundX - (this.innerWidth * (group.bounds[RIGHT] - piece.col));\r\n            const yBound = maxBoundY - (this.innerHeight * (group.bounds[BOTTOM] - piece.row));\r\n\r\n            pieces[i] = piece.clone();\r\n            pieces[i].setDisplayPos({\r\n                left: piece.pos.left > xBound ? xBound : piece.pos.left,\r\n                top: piece.pos.top > yBound ? yBound : piece.pos.top\r\n            });\r\n        }\r\n        this.setState({ pieces });\r\n    }\r\n\r\n    getGridPosition(col, row, spacing) {\r\n        const left = (this.innerWidth + spacing) * col - this.borderSize;\r\n        const top = (this.innerHeight + spacing) * row - this.borderSize;\r\n        return { left, top };\r\n    }\r\n\r\n    getRandomPosition(scaleFactor) {\r\n        const dimensions = this.getBoardDimensions();\r\n\r\n        return dimensions.width > dimensions.height ? {\r\n            left: Math.random() * (.15 * dimensions.width / scaleFactor),\r\n            top: Math.random() * (dimensions.height / scaleFactor - this.pieceHeight),\r\n        } : {\r\n            left: Math.random() * (dimensions.width / scaleFactor - this.pieceWidth),\r\n            top: Math.random() * (.15 * dimensions.height) / scaleFactor,\r\n        };\r\n    }\r\n\r\n    // Gets the offset position (relative to the top left corner of the full puzzle image) for a piece at this row/column.\r\n    getPieceImageOffset(col, row) {\r\n        const left = -(this.innerWidth * col) + this.borderSize;\r\n        const top = -(this.innerHeight * row) + this.borderSize;\r\n        return { left, top };\r\n    }\r\n\r\n    createEdge(type) {\r\n        const neckWidth = this.borderSize * (.8 + Math.random() * .45);\r\n        const offset = this.borderSize * (.4 + Math.random() * .1);\r\n        const c1 = (neckWidth > this.borderSize) ? neckWidth * (.75 + Math.random() * .25)\r\n            : this.borderSize * (.85 + Math.random() * .35);\r\n        const c2 = neckWidth * (.5 + Math.random() * .15);\r\n        return new EdgeStyleInfo(type, neckWidth, offset, c1, c2);\r\n    }\r\n\r\n    createPieces(scaleFactor) {\r\n        const pieces = [];\r\n        const availableKeys = range(this.props.cols * this.props.rows);\r\n        // Use map() instead of fill() to ensure that each inner array is a unique object.\r\n        const keysByGridPos = Array(this.props.cols).fill(null).map(() => Array(this.props.rows));\r\n\r\n        for (let col = 0; col < this.props.cols; col++) {\r\n            for (let row = 0; row < this.props.rows; row++) {\r\n                const key = availableKeys.splice(randomInt(availableKeys.length), 1)[0];\r\n                keysByGridPos[col][row] = key;\r\n\r\n                // const pos = this.getGridPosition(col, row, 0);  // Arranges pieces in a grid instead of scattered randomly (for testing)\r\n                const pos = this.getRandomPosition(scaleFactor);\r\n                const imageOffset = this.getPieceImageOffset(col, row);\r\n\r\n                const neighbors = {};\r\n                if (col > 0) {\r\n                    neighbors[LEFT] = keysByGridPos[col - 1][row];\r\n                    pieces[neighbors[LEFT]].neighbors[RIGHT] = key;\r\n                }\r\n                if (row > 0) {\r\n                    neighbors[TOP] = keysByGridPos[col][row - 1];\r\n                    pieces[neighbors[TOP]].neighbors[BOTTOM] = key;\r\n                }\r\n\r\n                const edges = {\r\n                    [LEFT]: (col === 0) ? this.createEdge(FLAT) : pieces[neighbors[LEFT]].edges[RIGHT].opposite(),\r\n                    [TOP]: (row === 0) ? this.createEdge(FLAT) : pieces[neighbors[TOP]].edges[BOTTOM].opposite(),\r\n                    [RIGHT]: (col === this.props.cols - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType()),\r\n                    [BOTTOM]: (row === this.props.rows - 1) ? this.createEdge(FLAT) : this.createEdge(getRandomEdgeType()),\r\n                };\r\n\r\n                pieces[key] = new PieceModel(key, col, row, pos, imageOffset, 0, edges, neighbors);\r\n            }\r\n        }\r\n        this.topLeftKey = keysByGridPos[0][0];\r\n        return pieces;\r\n    }\r\n\r\n    createGroups(pieces) {\r\n        const groups = new Map();\r\n        pieces.forEach(piece => groups.set(piece.key, new GroupModel(piece)));\r\n        return groups;\r\n    }\r\n\r\n    alignPiece(piece, alignWith) {\r\n        piece.setPos({\r\n            left: alignWith.displayPos.left + this.innerWidth * (piece.col - alignWith.col),\r\n            top: alignWith.displayPos.top + this.innerHeight * (piece.row - alignWith.row)\r\n        });\r\n    }\r\n\r\n    isTouching(piece, side, other) {\r\n        const snapRange = 7 / this.state.scaleFactor;\r\n        if (side === RIGHT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((other.displayPos.left - piece.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === LEFT) {\r\n            return Math.abs(piece.displayPos.top - other.displayPos.top) <= snapRange\r\n                && Math.abs((piece.displayPos.left - other.displayPos.left) - this.innerWidth) <= snapRange;\r\n        } else if (side === TOP) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((piece.displayPos.top - other.displayPos.top) - this.innerHeight) <= snapRange;\r\n        } else if (side === BOTTOM) {\r\n            return Math.abs(piece.displayPos.left - other.displayPos.left) <= snapRange\r\n                && Math.abs((other.displayPos.top - piece.displayPos.top) - this.innerHeight) <= snapRange;\r\n        }\r\n    }\r\n\r\n    mergeGroups(pieces, g1, g2) {\r\n        // First, update all the PieceModels in the group we're about to merge\r\n        const refPiece = pieces[this.groups.get(g1).pieces[0]];\r\n        for (const key of this.groups.get(g2).pieces) {\r\n            const p = pieces[key].clone();\r\n            p.group = g1;\r\n            p.zIndex = refPiece.zIndex;\r\n            this.alignPiece(p, refPiece);\r\n            pieces[key] = p;\r\n        }\r\n\r\n        // Then, merge the GroupModels\r\n        this.groups.get(g1).mergeWith(this.groups.get(g2));\r\n\r\n        this.groups.delete(g2);\r\n    }\r\n\r\n    handlePointerDown = (key, e) => {\r\n        if (this.state.draggedPiece !== null || !e.isPrimary || (e.pointerType === 'mouse' && e.button !== 0)) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n        const groupKey = pieces[key].group;\r\n        for (const k of this.groups.get(groupKey).pieces) {\r\n            pieces[k] = pieces[k].clone();\r\n            pieces[k].zIndex = this.nextzIndex;\r\n            pieces[k].setPos(pieces[k].displayPos);\r\n        }\r\n\r\n        this.nextzIndex++;\r\n\r\n        this.setState({\r\n            pieces,\r\n            draggedPiece: key,\r\n            offsetX: e.clientX - (pieces[key].pos.left * this.state.scaleFactor),\r\n            offsetY: e.clientY - (pieces[key].pos.top * this.state.scaleFactor)\r\n        });\r\n\r\n    };\r\n\r\n    handlePointerMove = (e) => {\r\n        if (this.state.draggedPiece === null || !e.isPrimary) {\r\n            return;\r\n        }\r\n\r\n        // Ignore events from touches that started within puzzle area but moved out of bounds\r\n        const hitElements = document.elementsFromPoint(e.clientX, e.clientY);\r\n        if (!hitElements.some(element => element.classList.contains('puzzle-area'))) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n\r\n        const draggedPiece = pieces[this.state.draggedPiece].clone();\r\n        pieces[this.state.draggedPiece] = draggedPiece;\r\n\r\n        const left = (e.clientX - this.state.offsetX) / this.state.scaleFactor;\r\n        const top = (e.clientY - this.state.offsetY) / this.state.scaleFactor;\r\n        draggedPiece.setPos({ left, top });\r\n\r\n        const group = this.groups.get(draggedPiece.group);\r\n        for (const key of group.pieces) {\r\n            if (key !== this.state.draggedPiece) {\r\n                pieces[key] = pieces[key].clone();\r\n                this.alignPiece(pieces[key], draggedPiece);\r\n            }\r\n        }\r\n        this.setState({ pieces });\r\n    };\r\n\r\n    handlePointerUp = () => {\r\n        if (this.state.draggedPiece === null) {\r\n            return;\r\n        }\r\n\r\n        const pieces = this.state.pieces.slice();\r\n\r\n        const groupKey = pieces[this.state.draggedPiece].group;\r\n        for (const key of this.groups.get(groupKey).pieces) {\r\n            const p = pieces[key];\r\n            for (const side of Sides) {\r\n                const neighbor = pieces[p.neighbors[side]];\r\n                if (neighbor && neighbor.group !== p.group && this.isTouching(p, side, neighbor)) {\r\n                    this.mergeGroups(pieces, p.group, neighbor.group);\r\n                }\r\n            }\r\n        }\r\n\r\n        const gameComplete = this.groups.size === 1;\r\n        this.setState({ pieces, gameComplete, draggedPiece: null });\r\n    };\r\n\r\n    handleResize = () => {\r\n        const scaleFactor = this.setScaleFactor();\r\n        this.clampPiecesToBoardBounds(scaleFactor);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PuzzleBoard\r\n                imgUrl={this.props.imgUrl}\r\n                imgWidth={this.props.imgWidth}\r\n                imgHeight={this.props.imgHeight}\r\n                pieceWidth={this.pieceWidth}\r\n                pieceHeight={this.pieceHeight}\r\n                borderSize={this.borderSize}\r\n                topLeftKey={this.topLeftKey}\r\n                scaleFactor={this.state.scaleFactor}\r\n                gameComplete={this.state.gameComplete}\r\n                pieces={this.state.pieces}\r\n                draggedPiece={this.state.draggedPiece}\r\n                getBoardDimensions={this.getBoardDimensions}\r\n                onPointerMove={this.handlePointerMove}\r\n                onPointerUp={this.handlePointerUp}\r\n                pointerDownHandlers={this.pointerDownHandlers} />\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n\r\nexport default class DetailsModal extends Component {\r\n    render() {\r\n        const image = this.props.image;\r\n\r\n        let body = '';\r\n        if (image && image.source) {\r\n            const credit = (image.source.nameIsTitle ? image.name : 'Photo') + ' by ' + image.author;\r\n            body = (\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md='8'><img src={image.url} alt='Thumbnail' width='100%' /></Col>\r\n                        <Col md='4' className='mt-3 mt-md-0 pl-md-0'>\r\n                            <p>{credit}</p>\r\n                            <p>Source: {image.source.sourceName}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='mt-md-3'>\r\n                        <Col>\r\n                            <p className=\"text-break\">\r\n                                See the original at: <a href={image.source.sourceUrl} target='_blank' rel='external noreferrer'>{image.source.sourceUrl}</a>\r\n                            </p>\r\n                            {image.source.description ? <p>{image.source.description}</p> : null}\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Image details</ModalHeader>\r\n                {body}\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport DetailsModal from './DetailsModal';\r\n\r\n\r\nexport default class PuzzleTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = { modalOpen: false };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return { modalOpen: !state.modalOpen }; });\r\n    }\r\n\r\n    render() {\r\n        const puzzleImage = this.props.puzzleImage;\r\n        if (!puzzleImage) {\r\n            return null;\r\n        }\r\n\r\n        const isPhoto = puzzleImage.source && puzzleImage.source.isPhoto;\r\n        const nameIsTitle = puzzleImage.source && puzzleImage.source.nameIsTitle;\r\n\r\n        const title = nameIsTitle ? <em>{puzzleImage.name}</em> : '';\r\n        let author = '';\r\n        if (puzzleImage.author) {\r\n            if (nameIsTitle) {\r\n                author += `, ${isPhoto ? ' photo' : ''} by `;\r\n            } else if (isPhoto) {\r\n                author += 'Photo by ';\r\n            } else {\r\n                author += 'By ';\r\n            }\r\n            author += puzzleImage.author;\r\n        }\r\n        const info = puzzleImage.source ? <button type='button' className='btn btn-link btn-sm text-muted px-1' onClick={this.toggleModal}>more info</button> : '';\r\n\r\n        return (\r\n            <div className='container-fluid container-md mt-3'>\r\n                <div className='row justify-content-center flex-sm-nowrap mx-n2'>\r\n                    <div className='col-2 d-none d-md-block px-2'> </div>\r\n                    <div className='col-auto flex-shrink-1 px-2'>\r\n                        <p className='h5'>{title}{author}</p>\r\n                    </div>\r\n                    <div className='col-auto col-sm-2 px-2'>{info}</div>\r\n                </div>\r\n                <DetailsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} image={puzzleImage} />\r\n            </div>);\r\n    }\r\n}","export class ImageInfo {\r\n    constructor(name, url, defaultRows, defaultCols, author, source, shortName) {\r\n        this.name = name;\r\n        this.url = url;\r\n        this.defaultRows = defaultRows;\r\n        this.defaultCols = defaultCols;\r\n        this.author = author;\r\n        this.source = source;\r\n        this.shortName = shortName ?? name;\r\n    }\r\n}\r\n\r\nexport class ImageSource {\r\n    constructor(sourceName, nameIsTitle = false, isPhoto = false, sourceUrl = '', description = '') {\r\n        this.sourceName = sourceName;\r\n        this.nameIsTitle = nameIsTitle;\r\n        this.sourceUrl = sourceUrl;\r\n        this.isPhoto = isPhoto;\r\n        this.description = description;\r\n    }\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class ErrorInfo {\r\n    constructor(type, statusCode, details) {\r\n        this.type = type;\r\n        this.statusCode = statusCode;\r\n        this.details = details;\r\n    }\r\n}\r\n\r\nexport default class ImageSearchModalErrorMessage extends Component {\r\n    getErrorDisplay() {\r\n        const err = this.props.error;\r\n        if (err.statusCode === 429 && err.type === 'upstream') {\r\n            return {\r\n                title: 'Rate limit exceeded (API)',\r\n                text: (<>\r\n                    <p>The hourly limit for requests from this site to the Unsplash server has been reached.</p>\r\n                    <p>Feel free to <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                        {' '}to let me know - <br />if this happens often, I can look into applying for a higher rate limit.</p>\r\n                </>)\r\n            };\r\n        } else if (err.statusCode === 429 && err.type === 'proxy') {\r\n            return {\r\n                title: 'Rate limit exceeded (API Proxy)',\r\n                text: (<p>Please try again in a moment.<br />(If you get this error frequently, feel free to {' '}\r\n                    <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                    {' '}and let me know.)</p>)\r\n            };\r\n        } else {\r\n            const errInfo = err.type === 'network' ? 'Network error' : `Status code ${err.statusCode} (${err.type})`;\r\n            const errDetails = err.details ? ' - ' + err.details : null;\r\n            return {\r\n                title: 'Something went wrong :0',\r\n                text: (<>\r\n                    <p><small className=''>Error details: {errInfo}{errDetails}</small></p>\r\n                    <p>Please try again. If you keep getting an error, feel free to {' '}\r\n                        <a className='alert-link' href='https://github.com/turtleseason/jigsaw-puzzle/issues' rel='external'>open an issue on GitHub</a>\r\n                        {' '}and let me know.</p>\r\n                </>)\r\n            };\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.error) {\r\n            return null;\r\n        }\r\n\r\n        const errDisplay = this.getErrorDisplay();\r\n        return (\r\n            <div className='search-error alert alert-warning text-center' role='alert'>\r\n                <h6 className='alert-heading'>{errDisplay.title}</h6>\r\n                {errDisplay.text}\r\n                <p className='mt-n2'>\r\n                    You can still search photos directly on <a href='https://unsplash.com/' target='_blank' rel='external noreferrer'>Unsplash.com</a>,\r\n                    {' '}download an image to your computer, and load it using the file selector.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModalErrorMessage.propTypes = {\r\n    error: PropTypes.instanceOf(ErrorInfo),\r\n};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class ImageSearchModalResults extends Component {\r\n    handleImageClick(index) {\r\n        this.props.chooseImage(this.props.images[this.props.page][index]);\r\n    }\r\n\r\n    handleKeyDown(index, e) {\r\n        if ((e.key === 'Enter' || e.key === 'Space') && e.target.tagName !== 'A') {\r\n            this.props.chooseImage(this.props.images[this.props.page][index]);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    // TODO: redo with better semantic markup\r\n    renderImage(img, index) {\r\n        const isSelected = this.props.selectedImage === img;\r\n        return (\r\n            <div data-testid='result' className={'result-container mb-2'} key={img.id} tabIndex='0'\r\n                onClick={() => this.handleImageClick(index)} onKeyDown={(e) => this.handleKeyDown(index, e)}>\r\n                <div className={`result ${isSelected ? 'result-selected' : ''}`}>\r\n                    <div className='placeholder' style={{ paddingTop: (img.height / img.width) * 100 + '%' }}>\r\n                        <img src={img.urls.small} alt={img.alt_description} />\r\n                        <span className='badge badge-dark'>\r\n                            By <a className='text-light' href={img.user.links.html} rel='external noreferrer' target='_blank'>{img.user.name}</a>\r\n                            {' '}on <a className='text-light' href={img.links.html} rel='external noreferrer' target='_blank'>Unsplash</a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const images = this.props.images[this.props.page];\r\n\r\n        const initialText = <div className='text-secondary'>Image results will go here, and it will be very cool.</div>;\r\n        const noResultsText = <div className='text-secondary'>No results found. :(</div>;\r\n        const spinner = (\r\n            <div className='spinner-border my-1' role='status'>\r\n                <span className='sr-only'>Loading...</span>\r\n            </div>);\r\n\r\n        return (\r\n            <div className='search-results-container text-center'>\r\n                {!this.props.isLoading && !images ? initialText : null}\r\n                {!this.props.isLoading && images && images.length === 0 ? noResultsText : null}\r\n                {this.props.isLoading ? spinner : null}\r\n                <div className='search-results'>\r\n                    {images ? images.map((img, index) => this.renderImage(img, index)) : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModalResults.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)),\r\n    page: PropTypes.number,\r\n    isLoading: PropTypes.bool,\r\n    selectedImage: PropTypes.object,\r\n    chooseImage: PropTypes.func,\r\n};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Pagination extends Component {\r\n    handleNavigate(e, newPage) {\r\n        e.preventDefault();\r\n        if (this.props.onPageChange) {\r\n            this.props.onPageChange(newPage);\r\n        }\r\n    }\r\n\r\n    renderPageLinks() {\r\n        const links = [];\r\n\r\n        const start = this.props.currentPage - this.props.numPageLinks - 1;\r\n        const end = this.props.currentPage + this.props.numPageLinks + 1;\r\n\r\n        if (start >= this.props.minPage) {\r\n            links.push(<li key={start}><span className='btn' style={{ cursor: 'default' }}>...</span></li>);\r\n        } else {\r\n            links.push(<li key={start} className='invisible'></li>);\r\n        }\r\n\r\n        for (let i = start + 1; i < end; i++) {\r\n            let content = null;\r\n            if (i === this.props.currentPage) {\r\n                content = <span className='btn' style={{ cursor: 'default' }}>{i}</span>;\r\n            }\r\n            else if (i >= this.props.minPage && i <= this.props.maxPage) {\r\n                content = <button className='btn btn-link' type='button' onClick={(e) => this.handleNavigate(e, i)}>{i}</button>;\r\n            }\r\n            links.push(<li className={!content ? 'invisible' : null} key={i}>{content}</li>);\r\n        }\r\n\r\n        if (end <= this.props.maxPage) {\r\n            links.push(<li key={end}><span className='btn' style={{ cursor: 'default' }}>...</span></li>);\r\n        } else {\r\n            links.push(<li key={end} className='invisible'></li>);\r\n        }\r\n\r\n        return <ul>{links}</ul>;\r\n    }\r\n\r\n    render() {\r\n        const { currentPage, minPage, maxPage, numPageLinks, onPageChange, className, ariaLabel, ...customAttributes } = this.props;\r\n\r\n        const outerClassName = 'custom-pagination container ' + (className || '');\r\n        const outerAriaLabel = ariaLabel || 'Search results pages';\r\n\r\n        const isFirst = !(this.props.currentPage > this.props.minPage);\r\n        const isLast = !(this.props.currentPage < this.props.maxPage);\r\n\r\n        const pageLinks = this.renderPageLinks();\r\n\r\n        return (\r\n            <nav className={outerClassName} aria-label={outerAriaLabel} {...customAttributes}>\r\n                <div className='row justify-content-between align-items-center'>\r\n                    <div className='col-auto p-0'>\r\n                        <button className={'btn btn-link' + (isFirst ? ' invisible' : '')} type='button'\r\n                            onClick={isFirst ? null : (e) => this.handleNavigate(e, this.props.currentPage - 1)}>\r\n                            {'< Back'}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='col-auto'>\r\n                        {pageLinks}\r\n                    </div>\r\n\r\n                    <div className='col-auto p-0'>\r\n                        <button className={'btn btn-link' + (isLast ? ' invisible' : '')} type='button'\r\n                            onClick={isLast ? null : (e) => this.handleNavigate(e, this.props.currentPage + 1)}>\r\n                            {'More >'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n// In addition to the listed types, any unrecognized props will be added as attributes to the outer <nav> DOM node,\r\n// to allow for customization\r\nPagination.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    minPage: PropTypes.number,\r\n    maxPage: PropTypes.number,\r\n    numPageLinks: PropTypes.number,  // The number of page links shown on either side of the current page number\r\n    onPageChange: PropTypes.func,    // Callback raised when a page link is clicked; it is given one parameter, the page number to navigate to\r\n    className: PropTypes.string,     // An optional class string to append to the default classes\r\n    ariaLabel: PropTypes.string,     // An optional label string to replace the default aria-label\r\n};\r\n\r\nPagination.defaultProps = {\r\n    minPage: 1,\r\n    maxPage: Number.MAX_SAFE_INTEGER,\r\n    numPageLinks: 1,\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { clamp, isEmptyOrWhitespace } from '../util.js';\r\nimport { ImageInfo, ImageSource } from './ImageInfo.js';\r\nimport ImageSearchModalErrorMessage, { ErrorInfo } from './ImageSearchModalErrorMessage.js';\r\nimport ImageSearchModalResults from './ImageSearchModalResults.js';\r\nimport Pagination from './Pagination.js';\r\n\r\nimport './ImageSearchModal.css';\r\n\r\n\r\nconst MAX_SEARCH_PAGES = 10;\r\n\r\nexport default class ImageSearchModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.handleSearchButtonClick = this.handleSearchButtonClick.bind(this);\r\n        this.handleChooseButtonClick = this.handleChooseButtonClick.bind(this);\r\n        this.selectImage = this.selectImage.bind(this);\r\n\r\n        this.proxyUrl = process.env.REACT_APP_PROXY_URL;\r\n\r\n        this.searchBoxRef = React.createRef();\r\n\r\n        // Note: The page count starts from 1, but the images array is zero-indexed,\r\n        // so make sure to subtract 1 when using this.state.page to accesss the images array.\r\n        this.state = {\r\n            images: [],\r\n            page: 1,\r\n            maxPage: 1,\r\n            searchString: '',\r\n            isSearchStringValid: true,\r\n            isSearchLoading: false,\r\n            error: null,\r\n            selectedImage: null\r\n        };\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({ searchString: e.target.value });\r\n    }\r\n\r\n    handleInputKeyDown(e) {\r\n        if (e.key === 'Enter') {\r\n            this.handleSearchButtonClick();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    handlePageChange(newPage) {\r\n        if (this.state.isSearchLoading) {\r\n            return;\r\n        }\r\n\r\n        newPage = Math.floor(newPage);\r\n        newPage = clamp(newPage, 1, MAX_SEARCH_PAGES);\r\n\r\n        // Supposedly scrollIntoView() doesn't work with CSS 'scroll-behavior: smooth' on Chrome/Edge,\r\n        // but in manual testing it seems to be working?\r\n        requestAnimationFrame(() => this.searchBoxRef.current.scrollIntoView());\r\n\r\n        // (Could use scrollTo() or scrollTop as an alternative:)\r\n        // requestAnimationFrame(() => this.modalRef.current.querySelector('.modal-body').scrollTo(0, 0));\r\n        // requestAnimationFrame(() => this.modalRef.current.querySelector('.modal-body').scrollTop = 0);\r\n\r\n        if (!this.state.images[newPage - 1]) {\r\n            this.searchImages(newPage);\r\n        } else {\r\n            this.setState({ page: newPage });\r\n        }\r\n    }\r\n\r\n    handleSearchButtonClick() {\r\n        this.setState({ images: [] }, () => this.searchImages(1));\r\n    }\r\n\r\n    handleChooseButtonClick() {\r\n        this.chooseImage();\r\n        this.props.toggleModal();\r\n    }\r\n\r\n    selectImage(image) {\r\n        this.setState({ selectedImage: image });\r\n    }\r\n\r\n    getSearchUrl(query, page) {\r\n        return `${this.proxyUrl}/search/${encodeURIComponent(query)}/page/${page}`;\r\n    }\r\n\r\n    getDownloadUrl(photoId) {\r\n        return `${this.proxyUrl}/download/${photoId}`;\r\n    }\r\n\r\n    addImages(newImages, page, totalPages) {\r\n        const images = this.state.images.slice();\r\n        images[page - 1] = newImages;\r\n\r\n        const maxPage = Math.min(totalPages, MAX_SEARCH_PAGES);\r\n\r\n        this.setState({ images: images, page: page, maxPage: maxPage });\r\n    }\r\n\r\n    chooseImage() {\r\n        const img = this.state.selectedImage;\r\n\r\n        // Note: This passes in the raw image dimensions, while the used image is likely to be smaller (1080px) -\r\n        // which is fine as long as generateDefaultDimensions only uses the aspect ratio, but that could change in the future.\r\n        const dim = this.props.generateDefaultDimensions(img.width, img.height);\r\n\r\n        this.props.setImage(new ImageInfo(`Unsplash Photo (${img.id})`, img.urls.regular, dim.rows, dim.cols, img.user.name,\r\n            new ImageSource('Unsplash', false, true, img.links.html)));\r\n\r\n        this.trackDownload(img.id);\r\n    }\r\n\r\n    validateQuery(query) {\r\n        const isValid = query && !isEmptyOrWhitespace(query);\r\n        this.setState({ isSearchStringValid: isValid });\r\n        return isValid;\r\n    }\r\n\r\n    searchImages(page) {\r\n        const query = this.state.searchString;\r\n        if (!this.validateQuery(query)) {\r\n            return;\r\n        }\r\n\r\n        // console.log('Searching: ' + query);\r\n        this.setState({ isSearchLoading: true });\r\n\r\n        fetch(this.getSearchUrl(query, page)).then(response => {\r\n            if (!response.ok) {\r\n                console.warn(`Proxy server returned an error: ${response.status}, ${response.statusText}`);\r\n                this.setState({ error: new ErrorInfo('proxy', response.status, response.statusText) });\r\n                throw new Error(`Failed response: ${response.status}, ${response.statusText}`);\r\n            }\r\n            return response.json();\r\n        }).then(upstreamResponse => {\r\n            // console.log(upstreamResponse);\r\n\r\n            if (upstreamResponse.errors) {\r\n                console.warn(`Upstream server returned an error (status code ${upstreamResponse.status}):\r\n                    ${upstreamResponse.errors.join(', ')}`);\r\n                this.setState({ error: new ErrorInfo('upstream', upstreamResponse.status, upstreamResponse.errors.join(', ')) });\r\n                throw new Error(`Upstream failed response (status code ${upstreamResponse.status}):\r\n                    ${upstreamResponse.errors.join(', ')}`);\r\n            }\r\n\r\n            this.setState({ error: null });\r\n            this.addImages(upstreamResponse.response.results, page, upstreamResponse.response.total_pages);\r\n        }).catch(err => {\r\n            if (err instanceof TypeError) {\r\n                this.setState({ error: new ErrorInfo('network') });\r\n            }\r\n            console.warn(`${err.name}: ${err.message}`);\r\n        }).finally(() => {\r\n            this.setState({ isSearchLoading: false });\r\n        });\r\n    }\r\n\r\n    trackDownload(photoId) {\r\n        fetch(this.getDownloadUrl(photoId)).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error(`${response.status} ${response.statusText}`);\r\n            }\r\n        }).then(upstreamResponse => {\r\n            if (upstreamResponse.type === 'success') {\r\n                // console.log(`Image ${photoId} download notified successfully.`);\r\n                // console.log(upstreamResponse)\r\n            } else {\r\n                throw new Error(`${upstreamResponse.status} - ${upstreamResponse.errors.join(', ')} (upstream)`);\r\n            }\r\n        }).catch(err =>\r\n            console.warn(`Image ${photoId} download failed. Error:`, err.message)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const hasResults = this.state.images[this.state.page - 1] && this.state.images[this.state.page - 1].length > 0;\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} scrollable={true} size='lg' centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Find images</ModalHeader>\r\n\r\n                <ModalBody>\r\n                    <p>Browse images from Unsplash.com by searching below.</p>\r\n\r\n                    <div className={`form-group row mx-0`} ref={this.searchBoxRef}>\r\n                        <label className='col-form-label mr-2' htmlFor='img-search-input'>Search by keyword</label>\r\n                        <input className={`col col-lg-4 form-control ${!this.state.isSearchStringValid ? 'is-invalid' : ''} px-2 mr-2`}\r\n                            id='img-search-input' type='text' value={this.state.searchString} aria-describedby='searchValidationFeedback'\r\n                            onKeyDown={this.handleInputKeyDown} onChange={this.handleInputChange} />\r\n                        <button className='btn btn-dark mr-auto' type='button' onClick={this.handleSearchButtonClick}>Search</button>\r\n                        <div className='w-100 d-lg-none'></div>\r\n                        <div className='col invalid-feedback align-self-center' id='searchValidationFeedback'>\r\n                            Please enter a search term.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ImageSearchModalErrorMessage error={this.state.error} />\r\n\r\n                    <ImageSearchModalResults images={this.state.images} page={this.state.page - 1} isLoading={this.state.isSearchLoading}\r\n                        selectedImage={this.state.selectedImage} chooseImage={this.selectImage} />\r\n                </ModalBody>\r\n\r\n                <ModalFooter className='flex-sm-nowrap'>\r\n                    {hasResults ?\r\n                        <Pagination className='mr-sm-3'\r\n                            currentPage={this.state.page}\r\n                            maxPage={this.state.maxPage}\r\n                            onPageChange={this.handlePageChange} />\r\n                        : null}\r\n\r\n                    <button className='btn btn-dark flex-shrink-0' type='button' disabled={!this.state.selectedImage}\r\n                        onClick={this.handleChooseButtonClick}>\r\n                        Use selected image\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nImageSearchModal.propTypes = {\r\n    // The ImageSearchModal will call this with a new ImageInfo object when the user selects an image to use from the search.\r\n    setImage: PropTypes.func.isRequired,\r\n    // Calculates default puzzle dimensions (rows+columns) from an image's width and height.\r\n    generateDefaultDimensions: PropTypes.func.isRequired,\r\n    // A function the modal can call to close itself.\r\n    toggleModal: PropTypes.func.isRequired,\r\n    // Whether the modal should be shown.\r\n    isOpen: PropTypes.bool.isRequired,\r\n};","export default __webpack_public_path__ + \"static/media/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.a8f36cd5.jpg\";","export default __webpack_public_path__ + \"static/media/david-clode-eOSqRq2Qm1c-unsplash.42540cb6.jpg\";","export default __webpack_public_path__ + \"static/media/casey-horner-80UR4DM2Rz0-unsplash.001ae9f7.jpg\";","export default __webpack_public_path__ + \"static/media/van-gogh-roses-nga.8fa9d120.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-lYzgtps0UtQ-unsplash.509dd0a5.jpg\";","export default __webpack_public_path__ + \"static/media/travel-sourced-FsmcD6uKcHk-unsplash.97041d06.jpg\";","import { ImageInfo, ImageSource } from './ImageInfo';\r\n\r\nimport img1 from './images/ito-jakuchu-red-parrot-on-the-branch-of-a-tree.jpg';\r\nimport img2 from './images/david-clode-eOSqRq2Qm1c-unsplash.jpg';\r\nimport img3 from './images/casey-horner-80UR4DM2Rz0-unsplash.jpg';\r\nimport img4 from './images/van-gogh-roses-nga.jpg';\r\nimport img5 from './images/scott-webb-lYzgtps0UtQ-unsplash.jpg';\r\nimport img6 from './images/travel-sourced-FsmcD6uKcHk-unsplash.jpg';\r\n\r\n\r\nconst providedImages = [\r\n    new ImageInfo('Red Parrot on the Branch of a Tree', img1, 6, 8, 'Itō Jakuchū',\r\n        new ImageSource('Metropolitan Museum of Art', true, false, 'https://www.metmuseum.org/art/collection/search/57123'), 'Red Parrot'),\r\n    new ImageInfo('Coral', img2, 7, 10, 'David Clode',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/eOSqRq2Qm1c')),\r\n    new ImageInfo('Starry Sky', img3, 7, 10, 'Casey Horner',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/80UR4DM2Rz0')),\r\n    new ImageInfo('Roses', img4, 8, 10, 'Vincent van Gogh',\r\n        new ImageSource('National Gallery of Art', true, false, 'https://www.nga.gov/collection/art-object-page.72328.html')),\r\n    new ImageInfo('Succulents', img5, 8, 5, 'Scott Webb',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/lYzgtps0UtQ')),\r\n    new ImageInfo('Jellyfish', img6, 7, 10, 'Travel Sourced',\r\n        new ImageSource('Unsplash', false, true, 'https://unsplash.com/photos/FsmcD6uKcHk'))\r\n];\r\n\r\nexport default providedImages;","import React, { Component } from 'react';\r\nimport { CustomInput, UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport ImageSearchModal from './ImageSearchModal.js';\r\nimport { ImageInfo } from './ImageInfo';\r\nimport { clamp } from '../util';\r\nimport presetImages from './providedImages';\r\n\r\nimport './ImagePicker.css';\r\n\r\n\r\nexport default class ImagePicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileInput = React.createRef();\r\n\r\n        this.selectedPreset = presetImages[0];\r\n        this.userImage = null;\r\n\r\n        this.useUserImage = this.useUserImage.bind(this);\r\n        this.usePresetImage = this.usePresetImage.bind(this);\r\n        this.setPresetImage = this.setPresetImage.bind(this);\r\n        this.setUnsplashImage = this.setUnsplashImage.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n        this.handleRadioKeyDown = this.handleRadioKeyDown.bind(this);\r\n        this.generateDefaultDimensions = this.generateDefaultDimensions.bind(this);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n\r\n        this.state = {\r\n            selectedOption: 'preset0',\r\n            usingUserImage: false,\r\n            invalidUserImage: false,\r\n            unsplashImage: null,\r\n            modalOpen: false,\r\n        };\r\n    }\r\n\r\n    usePresetImage() {\r\n        this.setState({ usingUserImage: false });\r\n        this.props.setSelectedImage(this.selectedPreset);\r\n    }\r\n\r\n    useUserImage() {\r\n        this.setState({ usingUserImage: true });\r\n        this.props.setSelectedImage(this.userImage);\r\n    }\r\n\r\n    setPresetImage(image) {\r\n        this.selectedPreset = image;\r\n        this.props.setSelectedImage(image);\r\n    }\r\n\r\n    setUnsplashImage(image) {\r\n        this.setState({\r\n            unsplashImage: image, selectedOption: 'unsplash'\r\n        });\r\n        this.setPresetImage(image);\r\n    }\r\n\r\n    // Maintain arrow key navigation between the radio buttons even though they aren't\r\n    // actually part of the same radio group (so that they can be separate tab stops).\r\n    handleRadioKeyDown(e) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft':\r\n            case 'ArrowUp':\r\n            case 'Left':\r\n            case 'Up':\r\n                if (e.target.id === 'radioBtn2') {\r\n                    document.getElementById('radioBtn1').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n            case 'ArrowRight':\r\n            case 'ArrowDown':\r\n            case 'Down':\r\n            case 'Right':\r\n                if (e.target.id === 'radioBtn1') {\r\n                    document.getElementById('radioBtn2').focus();\r\n                    e.preventDefault();\r\n                }\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        this.usePresetImage();\r\n\r\n        const select = e.target;\r\n        if (select.selectedIndex === select.length - 1) {\r\n            this.toggleModal();\r\n        } else if (select.selectedIndex === select.length - 2 && this.state.unsplashImage) {\r\n            this.setPresetImage(this.state.unsplashImage);\r\n            this.setState({ selectedOption: 'unsplash' });\r\n        } else if (select.selectedIndex !== -1) {\r\n            this.setPresetImage(presetImages[select.selectedIndex]);\r\n            this.setState({ selectedOption: 'preset' + select.selectedIndex });\r\n        }\r\n    }\r\n\r\n    handleFileChange() {\r\n        this.useUserImage();\r\n\r\n        const file = this.fileInput.current.files[0];\r\n        const fileUrl = URL.createObjectURL(file);\r\n\r\n        const testLoader = new Image();\r\n        testLoader.onerror = () => {\r\n            URL.revokeObjectURL(fileUrl);\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            this.userImage = null;\r\n            this.setState({ invalidUserImage: true });\r\n            this.props.setSelectedImage(null);\r\n        };\r\n        testLoader.onload = () => {\r\n            if (this.userImage) {\r\n                URL.revokeObjectURL(this.userImage.url);\r\n            }\r\n            const dim = this.generateDefaultDimensions(testLoader.naturalWidth, testLoader.naturalHeight);\r\n            this.userImage = new ImageInfo(file.name, fileUrl, dim.rows, dim.cols);\r\n            this.setState({ invalidUserImage: false });\r\n            this.props.setSelectedImage(this.userImage);\r\n        };\r\n        testLoader.src = fileUrl;\r\n    }\r\n\r\n    // Tries to choose a good default based on the image aspect ratio;\r\n    // could go further and tailor the target rows+columns to the viewport size\r\n    generateDefaultDimensions(width, height) {\r\n        const target = 12;\r\n        const minBound = this.props.minPuzzleDimension;\r\n        const aspect = width / height;\r\n\r\n        // cols = (width / height) * rows\r\n        // cols + rows = target\r\n        const rows = clamp(Math.round(target / (aspect + 1)), minBound, target - minBound);\r\n        const cols = target - rows;\r\n\r\n        return { rows: rows, cols: cols };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ modalOpen: !this.state.modalOpen });\r\n    }\r\n\r\n    renderSelectOptions() {\r\n        const options = [];\r\n        for (let i = 0; i < presetImages.length; i++) {\r\n            const img = presetImages[i];\r\n            options.push(<option key={i} value={'preset' + i}>{img.shortName}</option>);\r\n        }\r\n        options.push(<option key={-1} disabled>―――――――</option>);\r\n        if (this.state.unsplashImage) {\r\n            options.push(<option key={-2} value={'unsplash'}>{`Unsplash photo by ${this.state.unsplashImage.author}`}</option>);\r\n        }\r\n        options.push(<option key={-3}>More...</option>);\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        const presetBtnStyle = this.state.usingUserImage ? 'btn-outline-dark' : 'btn-dark';\r\n        const userBtnStyle = this.state.usingUserImage ? 'btn-dark' : 'btn-outline-dark';\r\n\r\n        return (\r\n            <>\r\n                <div className='input-group'>\r\n                    <div className='input-group-prepend col-12 col-lg-6 pr-lg-0'>\r\n                        <div className={`btn ${presetBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.usePresetImage}>\r\n                            <input readOnly className='col-auto' id='radioBtn1' type='radio'\r\n                                checked={!this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown} />\r\n                            <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn1'>Choose an image:</label>\r\n                            <div className='w-100 d-sm-none'></div>\r\n                            <label className='sr-only' htmlFor='puzzle-image-select'>Select image</label>\r\n                            <select className='custom-select col' id='puzzle-image-select' value={this.state.selectedOption} onChange={this.handleSelectChange}>\r\n                                {this.renderSelectOptions()}\r\n                            </select>\r\n                            <button className='btn btn-link p-0 ml-2' type='button' aria-label='Find more images' style={{ color: 'inherit' }} onClick={this.toggleModal}>\r\n                                <i className='bi-search icon-lg'></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='input-group-append col-12 col-lg-6 pl-lg-0'>\r\n                        <div className={`btn ${userBtnStyle} d-flex flex-wrap flex-sm-nowrap align-items-center w-100 br-when-stacked`} onClick={this.useUserImage}>\r\n                            <input readOnly className='col-auto order-first order-lg-last ml-lg-3' id='radioBtn2' type='radio'\r\n                                checked={this.state.usingUserImage} onKeyDown={this.handleRadioKeyDown} />\r\n                            <label className='col col-sm-4 col-md-3 col-lg-auto col-form-label' htmlFor='radioBtn2'>Or use your own:</label>\r\n                            <div className='w-100 d-sm-none'></div>\r\n                            <CustomInput className='col text-left' id='file-input' type='file' accept='image/*' innerRef={this.fileInput}\r\n                                invalid={this.state.invalidUserImage} onChange={this.handleFileChange} />\r\n                            <button className='btn btn-link p-0 ml-2' id='show-tooltip' type='button' style={{ color: 'inherit' }}\r\n                                onClick={(e) => { e.preventDefault(); e.stopPropagation(); }}>\r\n                                <i className='bi-info-circle icon-lg'></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <UncontrolledTooltip placement='top' target='show-tooltip'>\r\n                    Images are only used locally in your browser and are never uploaded or sent over the Internet.\r\n                </UncontrolledTooltip>\r\n                <ImageSearchModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} setImage={this.setUnsplashImage} generateDefaultDimensions={this.generateDefaultDimensions} />\r\n            </>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Input } from 'reactstrap';\r\n\r\n\r\nexport default class SettingsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleDimensionsChange = this.handleDimensionsChange.bind(this);\r\n        this.handleDimensionsBlur = this.handleDimensionsBlur.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const color = document.documentElement.style.getPropertyValue('--puzzle-bg');\r\n        this.setState({ color: color ? color : '#adb5bd' });\r\n    }\r\n\r\n    handleDimensionsChange(e) {\r\n        this.props.setDimension(e.target.name, e.target.valueAsNumber);\r\n    }\r\n\r\n    handleDimensionsBlur(e) {\r\n        this.props.setDimension(e.target.name, this.validateDimension(e.target.value));\r\n    }\r\n\r\n    handleColorChange(e) {\r\n        const color = e.target.value;\r\n        this.setState({ color: color });\r\n        document.documentElement.style.setProperty('--puzzle-bg', color);\r\n    }\r\n\r\n    validateDimension(val) {\r\n        let result = parseInt(val, 10);\r\n        if (isNaN(result) || result < this.props.minPuzzleDimension) {\r\n            result = this.props.minPuzzleDimension;\r\n        } else if (result > this.props.maxPuzzleDimension) {\r\n            result = this.props.maxPuzzleDimension;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const rowsVal = isNaN(this.props.rows) ? '' : this.props.rows;\r\n        const colsVal = isNaN(this.props.cols) ? '' : this.props.cols;\r\n\r\n        return (\r\n            <Modal toggle={this.props.toggleModal} isOpen={this.props.isOpen} centered={true}>\r\n                <ModalHeader toggle={this.props.toggleModal}>Settings</ModalHeader>\r\n                <ModalBody>\r\n                    <form className='container'>\r\n                        <div className='form-group row mb-4'>\r\n                            <label className='col-form-label mr-2 my-2' htmlFor='row-input'>Rows:</label>\r\n                            <input className='mr-2 my-2' id='row-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension}\r\n                                name='rows' value={rowsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur} />\r\n\r\n                            <label className='col-form-label mr-2 my-2' htmlFor='col-input'>Columns:</label>\r\n                            <input className='mr-2 my-2' id='col-input' type='number' min={this.props.minPuzzleDimension} max={this.props.maxPuzzleDimension}\r\n                                name='cols' value={colsVal} onChange={this.handleDimensionsChange} onBlur={this.handleDimensionsBlur} />\r\n\r\n                            <small className='col text-muted'>Changes to rows and columns take effect the next time a new puzzle is started.</small>\r\n                        </div>\r\n\r\n                        <div className='form-group row mb-4'>\r\n                            <label className='col-auto col-form-label pl-0' htmlFor='color-input'>Background color:</label>\r\n                            <Input className='col' id='color-input' type='color' value={this.state.color} onChange={this.handleColorChange} />\r\n                        </div>\r\n\r\n                        <div className='form-group row justify-content-end'>\r\n                            <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.props.toggleModal}>Done</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\n\r\nimport ImagePicker from './ImagePicker';\r\nimport SettingsModal from './SettingsModal';\r\nimport presetImages from './providedImages';\r\n\r\n\r\nconst minPuzzleDimension = 2;\r\nconst maxPuzzleDimension = 25;\r\n\r\nexport default class PuzzleControls extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.setSelectedImage = this.setSelectedImage.bind(this);\r\n        this.setDimension = this.setDimension.bind(this);\r\n        this.newPuzzle = this.newPuzzle.bind(this);\r\n\r\n        this.state = {\r\n            modalOpen: false,\r\n            selectedImage: presetImages[0],\r\n            rows: presetImages[0].defaultRows,\r\n            cols: presetImages[0].defaultCols\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.newPuzzle();\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState((state) => { return { modalOpen: !state.modalOpen }; });\r\n    }\r\n\r\n    setSelectedImage(imageInfo) {\r\n        if (imageInfo !== this.state.selectedImage) {\r\n            const rows = imageInfo ? imageInfo.defaultRows : this.state.rows;\r\n            const cols = imageInfo ? imageInfo.defaultCols : this.state.cols;\r\n            this.setState({ selectedImage: imageInfo, rows: rows, cols: cols });\r\n        }\r\n    }\r\n\r\n    setDimension(name, val) {\r\n        this.setState({ [name]: val });\r\n    }\r\n\r\n    newPuzzle() {\r\n        if (!this.state.selectedImage) {\r\n            return;\r\n        }\r\n\r\n        const img = this.state.selectedImage;\r\n        document.documentElement.style.setProperty('--puzzle-img', `url(${img.url})`);\r\n\r\n        const sizeTester = new Image();\r\n        sizeTester.onerror = () => console.log(\"Failed to load image\");\r\n        sizeTester.onload = () => this.props.newPuzzle(\r\n            sizeTester.naturalWidth,\r\n            sizeTester.naturalHeight,\r\n            this.state.rows,\r\n            this.state.cols,\r\n            img\r\n        );\r\n        sizeTester.src = img.url;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='container mt-4'>\r\n                <div className='row mb-3'>\r\n                    <ImagePicker setSelectedImage={this.setSelectedImage} minPuzzleDimension={minPuzzleDimension} />\r\n                </div>\r\n\r\n                <div className='row justify-content-center align-items-end mx-n1'>\r\n                    <div className='col d-none d-md-block px-2'></div>\r\n\r\n                    <div className='col-auto px-2'>\r\n                        <button className='btn btn-dark btn-lg px-4' type='button' onClick={this.newPuzzle}\r\n                            disabled={!this.state.selectedImage}>\r\n                            New puzzle\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='col-auto col-md px-2'>\r\n                        <button className='btn btn-outline-dark' type='button' onClick={this.toggleModal}>\r\n                            <i className='bi bi-gear-fill pr-2'></i>Settings\r\n                        </button>\r\n                    </div>\r\n\r\n                    <SettingsModal toggleModal={this.toggleModal} isOpen={this.state.modalOpen} rows={this.state.rows} cols={this.state.cols} setDimension={this.setDimension}\r\n                        minPuzzleDimension={minPuzzleDimension} maxPuzzleDimension={maxPuzzleDimension} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\n\r\nexport default class CompatibilityInfoModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} centered={true}>\r\n                <ModalHeader toggle={this.props.toggle}>Browser compatibility</ModalHeader>\r\n                <ModalBody>\r\n                    <p>\r\n                        For the best experience, it's recommended to view this website in a recent version of <b>Firefox</b>, <b>Chrome</b>, or <b>Edge</b> on desktop,\r\n                        {' '}or <b>Chrome</b> on mobile.\r\n                    </p>\r\n                    <p>\r\n                        Safari is mostly supported, but there is an issue where the clickable area of each puzzle piece extends past the visible image\r\n                        {' '}(due to the clip-path property not masking the mouse hit area).\r\n                    </p>\r\n                    <p>This site does not work in Internet Explorer.</p>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import { Component } from 'react';\r\nimport CompatibilityInfoModal from './CompatibilityInfoModal.js';\r\n\r\n\r\nexport default class CompatibilityInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = { modalOpen: false };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ modalOpen: !this.state.modalOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button className='btn btn-link text-light' type='button' onClick={this.toggleModal}>\r\n                    <i className='bi bi-list-check text-light mr-2'></i>\r\n                    <small className='align-text-top'>Browser support</small>\r\n                </button>\r\n                <CompatibilityInfoModal toggle={this.toggleModal} isOpen={this.state.modalOpen} />\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Puzzle from './puzzle/Puzzle.js';\nimport PuzzleTitle from './title/PuzzleTitle.js';\nimport PuzzleControls from './controls/PuzzleControls.js';\nimport CompatibilityInfo from './info/CompatibilityInfo.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\n\n\nlet puzzleKey = 1;\n\nfunction renderPuzzle(width, height, rows, columns, image) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <PuzzleControls newPuzzle={renderPuzzle} />\n            <PuzzleTitle puzzleImage={image} />\n            <Puzzle key={++puzzleKey} imgUrl={image.url} imgWidth={width} imgHeight={height} rows={rows} cols={columns} />\n        </React.StrictMode>,\n        document.getElementById('react-root')\n    );\n}\n\n// Initial render so that PuzzleControls can set up, which then calls renderPuzzle() when loaded (is there a better way to design this?)\nReactDOM.render(\n    <React.StrictMode>\n        <PuzzleControls newPuzzle={renderPuzzle} />\n    </React.StrictMode>,\n    document.getElementById('react-root')\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <CompatibilityInfo />\n    </React.StrictMode>,\n    document.getElementById('compatibility-info-root')\n);"],"sourceRoot":""}